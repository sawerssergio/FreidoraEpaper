#ifndef FreeMonoOblique11pt7b_H
#define FreeMonoOblique11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeMonoOblique11pt7bBitmaps[] PROGMEM = {
  0x00, 0x11, 0x12, 0x22, 0x24, 0x40, 0x00, 0xCC, 0xE7, 0xC6, 0xC6, 0xC6,
  0x84, 0x84, 0x04, 0x81, 0x20, 0x90, 0x24, 0x09, 0x1F, 0xF1, 0x20, 0x48,
  0x12, 0x3F, 0xE2, 0x40, 0x90, 0x28, 0x12, 0x04, 0x80, 0x02, 0x00, 0x80,
  0xF4, 0x63, 0x20, 0x48, 0x02, 0x00, 0x70, 0x03, 0x00, 0x20, 0x0A, 0x02,
  0xC3, 0x0F, 0x01, 0x00, 0x40, 0x10, 0x00, 0x0C, 0x04, 0x82, 0x20, 0x88,
  0x24, 0x07, 0x00, 0x1C, 0x78, 0xEE, 0x02, 0x41, 0x10, 0x44, 0x12, 0x03,
  0x00, 0x0F, 0x10, 0x20, 0x20, 0x20, 0x30, 0x51, 0x8A, 0x8A, 0x8C, 0x8C,
  0x76, 0xFB, 0x69, 0x00, 0x08, 0x88, 0x44, 0x21, 0x10, 0x84, 0x21, 0x08,
  0x41, 0x08, 0x10, 0x82, 0x10, 0x84, 0x21, 0x08, 0x84, 0x42, 0x21, 0x10,
  0x08, 0x08, 0x08, 0xD1, 0x7E, 0x10, 0x28, 0x48, 0x00, 0x04, 0x01, 0x00,
  0x40, 0x10, 0xFF, 0xC2, 0x00, 0x80, 0x20, 0x08, 0x02, 0x00, 0x39, 0x98,
  0xCC, 0x40, 0xFF, 0xC0, 0x7F, 0x00, 0x00, 0x10, 0x02, 0x00, 0x20, 0x04,
  0x00, 0x80, 0x08, 0x01, 0x00, 0x20, 0x04, 0x00, 0x40, 0x08, 0x01, 0x00,
  0x10, 0x02, 0x00, 0x40, 0x04, 0x00, 0x80, 0x00, 0x07, 0x86, 0x22, 0x04,
  0x81, 0x40, 0x50, 0x14, 0x06, 0x02, 0x80, 0xA0, 0x28, 0x1A, 0x04, 0x46,
  0x0F, 0x00, 0x0E, 0x1A, 0x24, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08,
  0x08, 0x10, 0xFF, 0x03, 0xC1, 0x8C, 0x40, 0x88, 0x10, 0x02, 0x00, 0x80,
  0x20, 0x08, 0x06, 0x01, 0x00, 0x40, 0x10, 0x0C, 0x09, 0xFF, 0x00, 0x07,
  0x86, 0x30, 0x04, 0x01, 0x00, 0x40, 0x20, 0x70, 0x04, 0x00, 0x80, 0x20,
  0x08, 0x04, 0x82, 0x1F, 0x00, 0x01, 0x81, 0x41, 0x61, 0x20, 0x90, 0x88,
  0x84, 0x82, 0x42, 0x7F, 0x80, 0x80, 0x40, 0x20, 0xF8, 0x0F, 0xE1, 0x00,
  0x40, 0x08, 0x01, 0x00, 0x2F, 0x06, 0x30, 0x02, 0x00, 0x40, 0x08, 0x03,
  0x00, 0x4C, 0x10, 0x7C, 0x00, 0x03, 0xC3, 0x01, 0x00, 0x80, 0x60, 0x10,
  0x05, 0xE2, 0x8C, 0xC1, 0x20, 0x48, 0x12, 0x08, 0x46, 0x0E, 0x00, 0xFF,
  0x81, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20,
  0x40, 0x07, 0x86, 0x33, 0x04, 0x81, 0x20, 0x4C, 0x60, 0xE0, 0xC4, 0x40,
  0xA0, 0x28, 0x0A, 0x04, 0x42, 0x0F, 0x00, 0x07, 0x06, 0x21, 0x04, 0x81,
  0x20, 0x48, 0x33, 0x14, 0x7A, 0x00, 0x80, 0x60, 0x10, 0x08, 0x0C, 0x3C,
  0x00, 0x37, 0x60, 0x00, 0x6E, 0xC0, 0x06, 0x1C, 0x30, 0x00, 0x00, 0x06,
  0x1C, 0x30, 0xC1, 0x06, 0x00, 0x00, 0x40, 0x30, 0x18, 0x0C, 0x06, 0x01,
  0xC0, 0x04, 0x00, 0x60, 0x03, 0x00, 0x30, 0x7F, 0xF0, 0x00, 0x00, 0x0F,
  0xFE, 0x30, 0x01, 0x80, 0x18, 0x00, 0xC0, 0x04, 0x01, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x00, 0x3E, 0xC3, 0x81, 0x01, 0x02, 0x0C, 0x30, 0x20, 0x00,
  0x00, 0x00, 0xE0, 0xE0, 0x07, 0x0C, 0x4C, 0x24, 0x14, 0x0A, 0x1D, 0x12,
  0x91, 0x89, 0x44, 0xA1, 0xD0, 0x08, 0x06, 0x01, 0xF0, 0x07, 0xC0, 0x0A,
  0x00, 0x50, 0x04, 0x80, 0x22, 0x02, 0x10, 0x10, 0x81, 0x04, 0x0F, 0xE0,
  0x81, 0x04, 0x04, 0x40, 0x2F, 0x8F, 0x80, 0x3F, 0xE0, 0x83, 0x08, 0x10,
  0x81, 0x10, 0x11, 0x06, 0x1F, 0xC1, 0x03, 0x10, 0x12, 0x01, 0x20, 0x12,
  0x06, 0xFF, 0xC0, 0x07, 0xD0, 0x87, 0x10, 0x32, 0x02, 0x40, 0x04, 0x00,
  0x40, 0x04, 0x00, 0x80, 0x08, 0x00, 0xC0, 0x86, 0x30, 0x3C, 0x00, 0x3F,
  0xC0, 0x82, 0x10, 0x31, 0x01, 0x10, 0x11, 0x01, 0x10, 0x12, 0x01, 0x20,
  0x22, 0x02, 0x20, 0x42, 0x08, 0xFF, 0x00, 0x3F, 0xF8, 0x40, 0x82, 0x04,
  0x10, 0x01, 0x00, 0x08, 0x80, 0x7C, 0x02, 0x20, 0x10, 0x01, 0x01, 0x08,
  0x08, 0x40, 0x4F, 0xFE, 0x00, 0x3F, 0xF8, 0x40, 0x42, 0x02, 0x10, 0x01,
  0x00, 0x08, 0x80, 0x7C, 0x02, 0x20, 0x10, 0x01, 0x00, 0x08, 0x00, 0x40,
  0x0F, 0xC0, 0x00, 0x07, 0xD1, 0x83, 0x30, 0x12, 0x00, 0x40, 0x04, 0x00,
  0x80, 0x08, 0x3E, 0x80, 0x48, 0x04, 0x80, 0x46, 0x04, 0x1F, 0x80, 0x1E,
  0x78, 0x40, 0x82, 0x04, 0x10, 0x41, 0x02, 0x08, 0x10, 0x7F, 0x82, 0x04,
  0x10, 0x61, 0x02, 0x08, 0x10, 0x40, 0x8F, 0x9E, 0x00, 0x3F, 0xC1, 0x00,
  0x40, 0x10, 0x04, 0x01, 0x00, 0x80, 0x20, 0x08, 0x02, 0x00, 0x80, 0x40,
  0xFF, 0x00, 0x03, 0xF8, 0x01, 0x00, 0x10, 0x00, 0x80, 0x04, 0x00, 0x20,
  0x03, 0x00, 0x10, 0x40, 0x82, 0x04, 0x20, 0x41, 0x86, 0x03, 0xC0, 0x00,
  0x3E, 0x3C, 0x20, 0x40, 0x86, 0x02, 0x20, 0x11, 0x00, 0x48, 0x01, 0xF0,
  0x04, 0x20, 0x10, 0x80, 0x83, 0x02, 0x04, 0x08, 0x10, 0xF8, 0x70, 0x1F,
  0x80, 0x40, 0x04, 0x00, 0x40, 0x04, 0x00, 0x40, 0x08, 0x00, 0x80, 0x08,
  0x10, 0x81, 0x08, 0x31, 0x02, 0xFF, 0xE0, 0x1C, 0x0E, 0x18, 0x18, 0x30,
  0x50, 0x91, 0x21, 0x22, 0x82, 0x49, 0x04, 0x92, 0x08, 0xC4, 0x21, 0x08,
  0x40, 0x20, 0x80, 0x41, 0x00, 0x8F, 0x87, 0x80, 0x38, 0x7C, 0x30, 0x41,
  0x41, 0x05, 0x04, 0x12, 0x10, 0x48, 0x41, 0x32, 0x08, 0x48, 0x21, 0x20,
  0x86, 0x82, 0x0A, 0x10, 0x30, 0xF0, 0x40, 0x07, 0xC1, 0x86, 0x30, 0x36,
  0x01, 0x40, 0x18, 0x01, 0x80, 0x18, 0x01, 0x80, 0x28, 0x06, 0xC0, 0xC6,
  0x18, 0x3E, 0x00, 0x3F, 0xC0, 0x83, 0x08, 0x10, 0x81, 0x10, 0x11, 0x02,
  0x10, 0x41, 0xF8, 0x10, 0x02, 0x00, 0x20, 0x02, 0x00, 0xFC, 0x00, 0x07,
  0xC1, 0x86, 0x30, 0x36, 0x01, 0x40, 0x18, 0x01, 0x80, 0x18, 0x01, 0x80,
  0x28, 0x06, 0xC0, 0xC6, 0x18, 0x3E, 0x01, 0x00, 0x7E, 0x44, 0x38, 0x3F,
  0xE0, 0x83, 0x08, 0x10, 0x81, 0x10, 0x31, 0x06, 0x1F, 0x81, 0x08, 0x10,
  0x42, 0x04, 0x20, 0x42, 0x02, 0xF8, 0x10, 0x0F, 0x4C, 0x36, 0x05, 0x01,
  0x40, 0x18, 0x01, 0xC0, 0x0E, 0x00, 0xA0, 0x28, 0x13, 0x0C, 0xBC, 0x00,
  0x7F, 0xE8, 0x85, 0x10, 0x82, 0x00, 0x40, 0x08, 0x02, 0x00, 0x40, 0x08,
  0x01, 0x00, 0x20, 0x08, 0x0F, 0xE0, 0xF9, 0xF2, 0x04, 0x40, 0x44, 0x04,
  0x40, 0x44, 0x04, 0x40, 0x88, 0x08, 0x80, 0x88, 0x08, 0x81, 0x04, 0x20,
  0x3C, 0x00, 0xF0, 0xFA, 0x01, 0x10, 0x10, 0x80, 0x84, 0x08, 0x10, 0x40,
  0x84, 0x04, 0x40, 0x22, 0x01, 0x20, 0x09, 0x00, 0x30, 0x01, 0x00, 0x00,
  0xF0, 0xF4, 0x02, 0x40, 0x28, 0x42, 0x8C, 0x48, 0xA4, 0x92, 0x49, 0x28,
  0xA2, 0x8A, 0x28, 0xC3, 0x0C, 0x30, 0x83, 0x00, 0x1C, 0x3C, 0x20, 0x40,
  0x82, 0x01, 0x10, 0x06, 0x80, 0x0C, 0x00, 0x30, 0x01, 0x40, 0x08, 0x80,
  0x42, 0x03, 0x04, 0x08, 0x10, 0xF1, 0xE0, 0x70, 0xF2, 0x04, 0x20, 0x81,
  0x18, 0x11, 0x00, 0xA0, 0x0C, 0x00, 0x80, 0x08, 0x00, 0x80, 0x08, 0x01,
  0x00, 0xFE, 0x00, 0x1F, 0xE2, 0x0C, 0x41, 0x10, 0x40, 0x10, 0x04, 0x01,
  0x00, 0x40, 0x10, 0x04, 0x09, 0x82, 0x20, 0x4F, 0xF8, 0x1E, 0x20, 0x81,
  0x02, 0x04, 0x08, 0x10, 0x40, 0x81, 0x02, 0x04, 0x08, 0x20, 0x40, 0xF0,
  0x84, 0x20, 0x84, 0x21, 0x04, 0x21, 0x0C, 0x21, 0x08, 0x21, 0x08, 0x1E,
  0x04, 0x10, 0x20, 0x40, 0x81, 0x04, 0x08, 0x10, 0x20, 0x41, 0x02, 0x04,
  0x08, 0xF0, 0x04, 0x0C, 0x12, 0x22, 0x41, 0x81, 0x7F, 0xFC, 0x88, 0x80,
  0x1F, 0x80, 0x08, 0x01, 0x0F, 0xA6, 0x0D, 0x01, 0x20, 0x24, 0x1C, 0x7C,
  0xE0, 0x38, 0x00, 0x80, 0x10, 0x01, 0x00, 0x10, 0x01, 0x7C, 0x1C, 0x21,
  0x01, 0x30, 0x12, 0x01, 0x20, 0x12, 0x02, 0x50, 0xCC, 0xF0, 0x0F, 0xA6,
  0x1D, 0x01, 0x60, 0x08, 0x01, 0x00, 0x20, 0x02, 0x06, 0x3F, 0x00, 0x00,
  0x70, 0x01, 0x00, 0x20, 0x02, 0x00, 0x20, 0xFA, 0x30, 0xE4, 0x04, 0x40,
  0x48, 0x04, 0x80, 0x48, 0x0C, 0x43, 0x83, 0xCE, 0x0F, 0x86, 0x09, 0x00,
  0xE0, 0x1F, 0xFF, 0x00, 0x20, 0x02, 0x06, 0x3F, 0x00, 0x01, 0xF8, 0x18,
  0x00, 0x80, 0x08, 0x00, 0x40, 0x1F, 0xF0, 0x10, 0x01, 0x00, 0x08, 0x00,
  0x40, 0x02, 0x00, 0x10, 0x01, 0x00, 0x7F, 0xC0, 0x1F, 0x32, 0x1C, 0x40,
  0xC8, 0x04, 0x80, 0xC8, 0x08, 0x81, 0x84, 0x28, 0x3C, 0x80, 0x08, 0x01,
  0x00, 0x20, 0x7C, 0x00, 0x18, 0x00, 0x80, 0x08, 0x00, 0x80, 0x08, 0x01,
  0x7C, 0x18, 0x21, 0x02, 0x10, 0x21, 0x02, 0x20, 0x62, 0x04, 0x20, 0x4F,
  0x0F, 0x03, 0x01, 0x00, 0x80, 0x00, 0x00, 0xF0, 0x08, 0x08, 0x04, 0x02,
  0x01, 0x00, 0x80, 0x87, 0xFC, 0x00, 0x80, 0x20, 0x08, 0x00, 0x00, 0x0F,
  0xE0, 0x08, 0x02, 0x00, 0x80, 0x20, 0x10, 0x04, 0x01, 0x00, 0x40, 0x20,
  0x08, 0x06, 0x3E, 0x00, 0x1C, 0x00, 0x40, 0x08, 0x00, 0x80, 0x08, 0x00,
  0x8F, 0x08, 0x81, 0x30, 0x1C, 0x01, 0xE0, 0x12, 0x01, 0x10, 0x20, 0x8E,
  0x1E, 0x0F, 0x00, 0x80, 0x80, 0x40, 0x20, 0x10, 0x08, 0x08, 0x04, 0x02,
  0x01, 0x00, 0x80, 0x87, 0xFC, 0x37, 0x38, 0xC6, 0x44, 0x42, 0x22, 0x12,
  0x10, 0x90, 0x88, 0x84, 0x44, 0x42, 0xF3, 0x98, 0x3B, 0xC3, 0x84, 0x40,
  0x88, 0x11, 0x02, 0x40, 0x88, 0x11, 0x02, 0xF0, 0xE0, 0x0F, 0x86, 0x09,
  0x00, 0xE0, 0x18, 0x03, 0x00, 0xE0, 0x12, 0x0C, 0x3E, 0x00, 0x39, 0xE0,
  0x70, 0x82, 0x02, 0x20, 0x11, 0x00, 0x88, 0x0C, 0x40, 0x43, 0x0C, 0x27,
  0xC1, 0x00, 0x08, 0x00, 0x40, 0x0F, 0x80, 0x00, 0x0F, 0x39, 0x87, 0x10,
  0x11, 0x00, 0x88, 0x04, 0x40, 0x22, 0x03, 0x08, 0x70, 0x3C, 0x80, 0x04,
  0x00, 0x20, 0x01, 0x00, 0x7C, 0x00, 0x38, 0xE0, 0xB0, 0x0C, 0x00, 0x80,
  0x10, 0x01, 0x00, 0x10, 0x01, 0x00, 0xFF, 0x00, 0x0F, 0xA2, 0x0C, 0x80,
  0x98, 0x00, 0xF8, 0x00, 0xA0, 0x16, 0x04, 0xBF, 0x00, 0x10, 0x10, 0x10,
  0x10, 0xFF, 0x20, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x3F, 0xE1, 0xE4,
  0x09, 0x01, 0x20, 0x24, 0x04, 0x81, 0x10, 0x22, 0x1C, 0x3C, 0xC0, 0xF1,
  0xE8, 0x11, 0x02, 0x10, 0x82, 0x20, 0x44, 0x09, 0x00, 0xC0, 0x18, 0x00,
  0xE0, 0xF4, 0x04, 0x44, 0x44, 0xC8, 0x54, 0x85, 0x50, 0x65, 0x06, 0x60,
  0x42, 0x00, 0x3C, 0x70, 0x82, 0x0C, 0xC0, 0x70, 0x02, 0x00, 0xD0, 0x10,
  0x82, 0x04, 0xF1, 0xE0, 0x1E, 0x3C, 0x20, 0x40, 0x81, 0x01, 0x08, 0x04,
  0x40, 0x11, 0x00, 0x48, 0x00, 0xC0, 0x02, 0x00, 0x08, 0x00, 0x40, 0x02,
  0x00, 0xFE, 0x00, 0x3F, 0xC8, 0x20, 0x10, 0x08, 0x04, 0x02, 0x03, 0x01,
  0x02, 0x7F, 0x80, 0x06, 0x10, 0x20, 0x81, 0x02, 0x04, 0x10, 0xC0, 0x40,
  0x81, 0x04, 0x08, 0x10, 0x20, 0x60, 0x11, 0x12, 0x22, 0x22, 0x44, 0x44,
  0x88, 0x88, 0x0C, 0x08, 0x10, 0x40, 0x81, 0x02, 0x04, 0x06, 0x10, 0x40,
  0x82, 0x04, 0x08, 0x30, 0xC0, 0x38, 0x13, 0x28, 0x70 };

const GFXglyph FreeMonoOblique11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  13,    0,    0 },   // 0x20 ' '
  {     1,   4,  14,  13,    5,  -13 },   // 0x21 '!'
  {     8,   8,   6,  13,    5,  -12 },   // 0x22 '"'
  {    14,  10,  15,  13,    3,  -13 },   // 0x23 '#'
  {    33,  10,  17,  13,    3,  -14 },   // 0x24 '$'
  {    55,  10,  14,  13,    3,  -13 },   // 0x25 '%'
  {    73,   8,  12,  13,    3,  -11 },   // 0x26 '&'
  {    85,   3,   6,  13,    8,  -12 },   // 0x27 '''
  {    88,   5,  16,  13,    7,  -12 },   // 0x28 '('
  {    98,   5,  16,  13,    3,  -12 },   // 0x29 ')'
  {   108,   8,   9,  13,    5,  -13 },   // 0x2A '*'
  {   117,  10,  10,  13,    3,  -10 },   // 0x2B '+'
  {   130,   5,   6,  13,    2,   -2 },   // 0x2C ','
  {   134,  10,   1,  13,    3,   -6 },   // 0x2D '-'
  {   136,   3,   3,  13,    5,   -2 },   // 0x2E '.'
  {   138,  12,  17,  13,    2,  -14 },   // 0x2F '/'
  {   164,  10,  14,  13,    3,  -13 },   // 0x30 '0'
  {   182,   8,  13,  13,    3,  -12 },   // 0x31 '1'
  {   195,  11,  14,  13,    2,  -13 },   // 0x32 '2'
  {   215,  10,  14,  13,    3,  -13 },   // 0x33 '3'
  {   233,   9,  14,  13,    3,  -13 },   // 0x34 '4'
  {   249,  11,  14,  13,    2,  -13 },   // 0x35 '5'
  {   269,  10,  14,  13,    4,  -13 },   // 0x36 '6'
  {   287,   8,  14,  13,    5,  -13 },   // 0x37 '7'
  {   301,  10,  14,  13,    3,  -13 },   // 0x38 '8'
  {   319,  10,  14,  13,    3,  -13 },   // 0x39 '9'
  {   337,   4,   9,  13,    6,   -8 },   // 0x3A ':'
  {   342,   7,  12,  13,    2,   -8 },   // 0x3B ';'
  {   353,  11,  10,  13,    3,  -10 },   // 0x3C '<'
  {   367,  12,   4,  13,    2,   -7 },   // 0x3D '='
  {   373,  11,  10,  13,    2,  -10 },   // 0x3E '>'
  {   387,   8,  13,  13,    5,  -12 },   // 0x3F '?'
  {   400,   9,  15,  13,    3,  -13 },   // 0x40 '@'
  {   417,  13,  13,  13,    0,  -12 },   // 0x41 'A'
  {   439,  12,  13,  13,    1,  -12 },   // 0x42 'B'
  {   459,  12,  13,  13,    2,  -12 },   // 0x43 'C'
  {   479,  12,  13,  13,    1,  -12 },   // 0x44 'D'
  {   499,  13,  13,  13,    1,  -12 },   // 0x45 'E'
  {   521,  13,  13,  13,    1,  -12 },   // 0x46 'F'
  {   543,  12,  13,  13,    2,  -12 },   // 0x47 'G'
  {   563,  13,  13,  13,    1,  -12 },   // 0x48 'H'
  {   585,  10,  13,  13,    3,  -12 },   // 0x49 'I'
  {   602,  13,  13,  13,    2,  -12 },   // 0x4A 'J'
  {   624,  14,  13,  13,    1,  -12 },   // 0x4B 'K'
  {   647,  12,  13,  13,    1,  -12 },   // 0x4C 'L'
  {   667,  15,  13,  13,    0,  -12 },   // 0x4D 'M'
  {   692,  14,  13,  13,    1,  -12 },   // 0x4E 'N'
  {   715,  12,  13,  13,    2,  -12 },   // 0x4F 'O'
  {   735,  12,  13,  13,    1,  -12 },   // 0x50 'P'
  {   755,  12,  16,  13,    2,  -12 },   // 0x51 'Q'
  {   779,  12,  13,  13,    1,  -12 },   // 0x52 'R'
  {   799,  10,  13,  13,    3,  -12 },   // 0x53 'S'
  {   816,  11,  13,  13,    3,  -12 },   // 0x54 'T'
  {   834,  12,  13,  13,    3,  -12 },   // 0x55 'U'
  {   854,  13,  13,  13,    3,  -12 },   // 0x56 'V'
  {   876,  12,  13,  13,    3,  -12 },   // 0x57 'W'
  {   896,  14,  13,  13,    1,  -12 },   // 0x58 'X'
  {   919,  12,  13,  13,    3,  -12 },   // 0x59 'Y'
  {   939,  11,  13,  13,    2,  -12 },   // 0x5A 'Z'
  {   957,   7,  17,  13,    6,  -13 },   // 0x5B '['
  {   972,   5,  17,  13,    5,  -14 },   // 0x5C '\'
  {   983,   7,  17,  13,    3,  -13 },   // 0x5D ']'
  {   998,   8,   6,  13,    4,  -13 },   // 0x5E '^'
  {  1004,  14,   1,  13,   -1,    3 },   // 0x5F '_'
  {  1006,   3,   3,  13,    6,  -13 },   // 0x60 '`'
  {  1008,  11,   9,  13,    2,   -8 },   // 0x61 'a'
  {  1021,  12,  14,  13,    1,  -13 },   // 0x62 'b'
  {  1042,  11,   9,  13,    3,   -8 },   // 0x63 'c'
  {  1055,  12,  14,  13,    2,  -13 },   // 0x64 'd'
  {  1076,  11,   9,  13,    2,   -8 },   // 0x65 'e'
  {  1089,  13,  14,  13,    2,  -13 },   // 0x66 'f'
  {  1112,  12,  13,  13,    2,   -8 },   // 0x67 'g'
  {  1132,  12,  14,  13,    1,  -13 },   // 0x68 'h'
  {  1153,   9,  14,  13,    2,  -13 },   // 0x69 'i'
  {  1169,  10,  18,  13,    2,  -13 },   // 0x6A 'j'
  {  1192,  12,  14,  13,    1,  -13 },   // 0x6B 'k'
  {  1213,   9,  14,  13,    2,  -13 },   // 0x6C 'l'
  {  1229,  13,   9,  13,    0,   -8 },   // 0x6D 'm'
  {  1244,  11,   9,  13,    1,   -8 },   // 0x6E 'n'
  {  1257,  11,   9,  13,    2,   -8 },   // 0x6F 'o'
  {  1270,  13,  13,  13,    0,   -8 },   // 0x70 'p'
  {  1292,  13,  13,  13,    2,   -8 },   // 0x71 'q'
  {  1314,  12,   9,  13,    2,   -8 },   // 0x72 'r'
  {  1328,  11,   9,  13,    2,   -8 },   // 0x73 's'
  {  1341,   8,  13,  13,    3,  -12 },   // 0x74 't'
  {  1354,  11,   9,  13,    2,   -8 },   // 0x75 'u'
  {  1367,  11,   9,  13,    3,   -8 },   // 0x76 'v'
  {  1380,  12,   9,  13,    3,   -8 },   // 0x77 'w'
  {  1394,  12,   9,  13,    1,   -8 },   // 0x78 'x'
  {  1408,  14,  13,  13,    0,   -8 },   // 0x79 'y'
  {  1431,  10,   9,  13,    2,   -8 },   // 0x7A 'z'
  {  1443,   7,  17,  13,    5,  -13 },   // 0x7B '{'
  {  1458,   4,  16,  13,    6,  -12 },   // 0x7C '|'
  {  1466,   7,  17,  13,    4,  -13 },   // 0x7D '}'
  {  1481,  10,   3,  13,    3,   -7 } }; // 0x7E '~'

const GFXfont FreeMonoOblique11pt7b PROGMEM = {
  (uint8_t  *)FreeMonoOblique11pt7bBitmaps,
  (GFXglyph *)FreeMonoOblique11pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 2157 bytes

#endif // FreeMonoOblique11pt7b_H
