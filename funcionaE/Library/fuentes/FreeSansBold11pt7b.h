#ifndef FreeSansBold11pt7b_H
#define FreeSansBold11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeSansBold11pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0xE9, 0x21, 0xFF, 0xE7, 0xE7, 0xE7, 0xE7, 0xE7,
  0x42, 0x0C, 0xE0, 0xCE, 0x1C, 0xC7, 0xFF, 0x7F, 0xF7, 0xFF, 0x19, 0x83,
  0x98, 0xFF, 0xEF, 0xFE, 0xFF, 0xE7, 0x30, 0x73, 0x06, 0x30, 0x08, 0x07,
  0xE1, 0xFE, 0x7F, 0xEE, 0x9F, 0xD1, 0xFA, 0x07, 0xC0, 0x7F, 0x03, 0xF8,
  0x2F, 0x84, 0x7E, 0x8F, 0xD3, 0xDF, 0xF3, 0xFC, 0x3E, 0x01, 0x00, 0x3C,
  0x06, 0x0F, 0xC1, 0x81, 0xFC, 0x30, 0x61, 0x8C, 0x0C, 0x31, 0x00, 0xFE,
  0x60, 0x1F, 0x88, 0x01, 0xE3, 0x00, 0x00, 0xC7, 0x80, 0x19, 0xF8, 0x06,
  0x7F, 0x80, 0x8C, 0x30, 0x31, 0x86, 0x04, 0x3F, 0xC1, 0x83, 0xF0, 0x60,
  0x3C, 0x0F, 0x00, 0x3F, 0x00, 0xFF, 0x01, 0xCE, 0x03, 0x9C, 0x07, 0xF0,
  0x07, 0xC0, 0x0F, 0x00, 0x7F, 0x19, 0xE7, 0x73, 0x87, 0xE7, 0x07, 0x8F,
  0x1F, 0x0F, 0xFF, 0x1F, 0xEF, 0x0F, 0x8E, 0xFF, 0xFE, 0x80, 0x0C, 0x63,
  0x8C, 0x71, 0xC6, 0x38, 0xE3, 0x8E, 0x38, 0xE3, 0x87, 0x1C, 0x30, 0xE1,
  0x87, 0xC1, 0x87, 0x0C, 0x38, 0xE1, 0x87, 0x1C, 0x71, 0xC7, 0x1C, 0x73,
  0x8E, 0x31, 0xC6, 0x38, 0x10, 0x23, 0xFB, 0xE3, 0x8D, 0x8A, 0x00, 0x1C,
  0x0E, 0x07, 0x1F, 0xFF, 0xFF, 0xFC, 0x70, 0x38, 0x1C, 0x0E, 0x00, 0xFF,
  0x93, 0xA0, 0xFF, 0xFF, 0xC0, 0xFF, 0x80, 0x0C, 0x30, 0x82, 0x18, 0x41,
  0x0C, 0x30, 0x82, 0x18, 0x41, 0x0C, 0x30, 0x1E, 0x0F, 0xC7, 0xF9, 0xCE,
  0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0x73, 0x9F,
  0xE3, 0xF0, 0x78, 0x0C, 0x73, 0xFF, 0xFC, 0x71, 0xC7, 0x1C, 0x71, 0xC7,
  0x1C, 0x71, 0xC7, 0x1E, 0x1F, 0xE7, 0xFB, 0x8F, 0xE1, 0xC0, 0x70, 0x1C,
  0x0F, 0x07, 0x83, 0xC1, 0xC0, 0xE0, 0x70, 0x3F, 0xFF, 0xFF, 0xFF, 0x3F,
  0x0F, 0xF3, 0xFF, 0x70, 0xEE, 0x1C, 0x03, 0x80, 0xF0, 0x7C, 0x0F, 0xC0,
  0x3C, 0x03, 0xF0, 0x7F, 0x1E, 0xFF, 0x9F, 0xF0, 0xF8, 0x07, 0x81, 0xE0,
  0xF8, 0x3E, 0x1B, 0x8E, 0xE3, 0x39, 0x8E, 0x63, 0xB0, 0xEF, 0xFF, 0xFF,
  0xFF, 0xC0, 0xE0, 0x38, 0x0E, 0x3F, 0xC7, 0xF8, 0xFF, 0x18, 0x03, 0x70,
  0xFF, 0x9F, 0xF3, 0x8F, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x7F, 0x1E, 0xFF,
  0x9F, 0xE0, 0xF8, 0x1F, 0x0F, 0xE7, 0xF9, 0xC7, 0xE0, 0x3B, 0xCF, 0xFB,
  0xFE, 0xF3, 0xF8, 0x7E, 0x1F, 0x87, 0x73, 0xDF, 0xE3, 0xF8, 0x78, 0xFF,
  0xFF, 0xFF, 0xFC, 0x06, 0x03, 0x81, 0xC0, 0x70, 0x38, 0x0E, 0x07, 0x01,
  0xC0, 0x70, 0x18, 0x0E, 0x03, 0x80, 0xE0, 0x1F, 0x0F, 0xFB, 0xFF, 0xF8,
  0xFE, 0x0F, 0xE3, 0xCF, 0xE3, 0xFE, 0x71, 0xDC, 0x1F, 0x83, 0xF0, 0x7F,
  0x1E, 0xFF, 0x9F, 0xE0, 0xF8, 0x1E, 0x1F, 0xC7, 0xFB, 0xCE, 0xE1, 0xF8,
  0x7E, 0x1F, 0xCF, 0x7F, 0xDF, 0xF3, 0xDC, 0x07, 0xE3, 0x9F, 0xE7, 0xF0,
  0xF8, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0xFF, 0x80, 0x00, 0xFF, 0x93, 0xA0,
  0x00, 0x20, 0x1C, 0x1F, 0x9F, 0x8F, 0xC1, 0xC0, 0x3E, 0x03, 0xF8, 0x0F,
  0xC0, 0x3C, 0x01, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x01, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x1C, 0x03, 0xF0, 0x1F, 0x80, 0x7E, 0x01, 0xC0,
  0xF8, 0xFC, 0xFE, 0x1E, 0x02, 0x00, 0x00, 0x1F, 0x0F, 0xF1, 0xFF, 0x78,
  0xFE, 0x0E, 0x01, 0xC0, 0x38, 0x0E, 0x07, 0xC0, 0xE0, 0x38, 0x07, 0x00,
  0x00, 0x1C, 0x03, 0x80, 0x70, 0x01, 0xFC, 0x00, 0x7F, 0xF0, 0x0F, 0x07,
  0xC1, 0xC0, 0x1E, 0x30, 0xF6, 0x67, 0x1F, 0x67, 0x63, 0x9C, 0x3C, 0x30,
  0xC3, 0xC6, 0x0C, 0x3C, 0x60, 0xC3, 0xC6, 0x08, 0x7C, 0x61, 0x86, 0xC7,
  0x38, 0xE6, 0x3E, 0xFC, 0x71, 0xCF, 0x03, 0x80, 0x00, 0x1E, 0x04, 0x00,
  0xFF, 0xE0, 0x03, 0xF8, 0x00, 0x03, 0xC0, 0x0F, 0x80, 0x1F, 0x00, 0x3F,
  0x00, 0xEE, 0x01, 0xDC, 0x03, 0x9C, 0x0E, 0x38, 0x1C, 0x78, 0x38, 0x70,
  0xFF, 0xE1, 0xFF, 0xE7, 0xFF, 0xCE, 0x03, 0x9C, 0x07, 0xF8, 0x07, 0xFF,
  0xCF, 0xFE, 0xFF, 0xFE, 0x07, 0xE0, 0x7E, 0x07, 0xFF, 0xEF, 0xFC, 0xFF,
  0xEE, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0xFF, 0xFE, 0xFF, 0xEF, 0xF8, 0x0F,
  0xC0, 0x7F, 0xC3, 0xFF, 0x9E, 0x0F, 0x70, 0x1F, 0x80, 0x0E, 0x00, 0x38,
  0x00, 0xE0, 0x03, 0x80, 0x0E, 0x00, 0x1C, 0x07, 0x78, 0x3C, 0xFF, 0xE1,
  0xFF, 0x03, 0xF0, 0xFF, 0x87, 0xFF, 0x3F, 0xFD, 0xC1, 0xEE, 0x07, 0xF0,
  0x1F, 0x80, 0xFC, 0x07, 0xE0, 0x3F, 0x01, 0xF8, 0x0F, 0xC0, 0xFE, 0x0F,
  0x7F, 0xFB, 0xFF, 0x9F, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0E, 0x01,
  0xC0, 0x3F, 0xF7, 0xFE, 0xFF, 0xDC, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0E, 0x01, 0xC0, 0x3F,
  0xF7, 0xFE, 0xFF, 0xDC, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07,
  0x00, 0x07, 0xE0, 0x3F, 0xF0, 0xFF, 0xF3, 0xC1, 0xF7, 0x00, 0xFC, 0x00,
  0x38, 0x00, 0x70, 0x3F, 0xE0, 0x7F, 0xC0, 0xFF, 0xC0, 0x3B, 0x80, 0x77,
  0xC3, 0xE7, 0xFE, 0xC7, 0xFD, 0x83, 0xE3, 0xE0, 0x7E, 0x07, 0xE0, 0x7E,
  0x07, 0xE0, 0x7E, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x07, 0xE0, 0x7E,
  0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x01,
  0xC0, 0x7E, 0x1F, 0x87, 0xE1, 0xFF, 0xF7, 0xF8, 0xFC, 0xE0, 0x7B, 0x83,
  0xCE, 0x1E, 0x38, 0xF0, 0xE7, 0x83, 0xBC, 0x0F, 0xE0, 0x3F, 0x80, 0xFF,
  0x03, 0xDE, 0x0E, 0x3C, 0x38, 0x70, 0xE1, 0xE3, 0x83, 0xCE, 0x07, 0xB8,
  0x0E, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0,
  0x38, 0x0E, 0x03, 0x80, 0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0xF8, 0x3F, 0xF0,
  0xFF, 0xE1, 0xFF, 0xE3, 0xFF, 0xC7, 0xFD, 0x9F, 0xFB, 0x3B, 0xF6, 0x77,
  0xEE, 0xEF, 0xDD, 0xDF, 0x9F, 0x3F, 0x3E, 0x7E, 0x7C, 0xFC, 0xF9, 0xF8,
  0xE3, 0xF1, 0xC7, 0xE0, 0x3F, 0x81, 0xFE, 0x0F, 0xF0, 0x7F, 0xC3, 0xFF,
  0x1F, 0xB8, 0xFC, 0xE7, 0xE7, 0x3F, 0x1D, 0xF8, 0x7F, 0xC3, 0xFE, 0x0F,
  0xF0, 0x7F, 0x81, 0xFC, 0x07, 0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xC1,
  0xE7, 0x01, 0xDC, 0x01, 0xF8, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x1F,
  0x80, 0x3B, 0x80, 0xE7, 0x83, 0xC7, 0xFF, 0x07, 0xFC, 0x03, 0xE0, 0xFF,
  0x8F, 0xFE, 0xFF, 0xEE, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x0F, 0xFF,
  0xEF, 0xFE, 0xFF, 0x8E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0x07,
  0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xC1, 0xE7, 0x01, 0xDC, 0x01, 0xF8, 0x03,
  0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x1F, 0x83, 0xBB, 0x87, 0xE7, 0x87, 0xC7,
  0xFF, 0x87, 0xFF, 0x83, 0xE6, 0x00, 0x04, 0xFF, 0xC7, 0xFF, 0x3F, 0xFD,
  0xC0, 0xEE, 0x07, 0x70, 0x3B, 0x81, 0xDF, 0xFC, 0xFF, 0xC7, 0xFF, 0x38,
  0x1D, 0xC0, 0xEE, 0x07, 0x70, 0x3B, 0x81, 0xDC, 0x0F, 0x1F, 0xC3, 0xFF,
  0x9F, 0xFD, 0xE0, 0xFE, 0x03, 0xF0, 0x03, 0xF8, 0x0F, 0xFC, 0x1F, 0xF0,
  0x07, 0xC0, 0x0F, 0xC0, 0x7F, 0x07, 0xFF, 0xF9, 0xFF, 0x83, 0xF8, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF0, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07,
  0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0xE0,
  0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0,
  0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xF0, 0xF7, 0xFE, 0x3F, 0xC1, 0xF8, 0x70,
  0x1D, 0xC0, 0xF7, 0x83, 0x8E, 0x0E, 0x38, 0x38, 0xE1, 0xC1, 0xC7, 0x07,
  0x1C, 0x1C, 0xE0, 0x3B, 0x80, 0xEE, 0x03, 0xF0, 0x07, 0xC0, 0x1F, 0x00,
  0x78, 0x00, 0xE0, 0x70, 0x70, 0x73, 0x83, 0x83, 0x9C, 0x3E, 0x1C, 0xF1,
  0xF1, 0xE3, 0x8F, 0x8E, 0x1C, 0x7C, 0x70, 0xE3, 0xF3, 0x83, 0x3B, 0x9C,
  0x1D, 0xCD, 0xC0, 0xEE, 0x6E, 0x07, 0x73, 0x70, 0x1B, 0x9F, 0x00, 0xF8,
  0xF8, 0x07, 0xC3, 0xC0, 0x1E, 0x1E, 0x00, 0xF0, 0xE0, 0x78, 0x3C, 0xE0,
  0xE3, 0xC7, 0x87, 0x3C, 0x1E, 0xE0, 0x3F, 0x80, 0x7C, 0x01, 0xE0, 0x07,
  0xC0, 0x1F, 0x00, 0xFE, 0x07, 0xBC, 0x1C, 0x70, 0xF1, 0xE7, 0x83, 0x9E,
  0x0F, 0xF0, 0x7F, 0x83, 0x9C, 0x3C, 0x71, 0xC3, 0x8E, 0x0E, 0xE0, 0x77,
  0x01, 0xF0, 0x0F, 0x80, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80,
  0x1C, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1E, 0x01, 0xC0, 0x3C,
  0x07, 0x80, 0xF0, 0x1E, 0x01, 0xC0, 0x3C, 0x07, 0x80, 0xF0, 0x0F, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73,
  0x9C, 0xE7, 0xFF, 0xF0, 0xC3, 0x04, 0x10, 0x60, 0x82, 0x0C, 0x30, 0x41,
  0x06, 0x08, 0x20, 0xC3, 0xFF, 0xFE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73,
  0x9C, 0xE7, 0x3F, 0xFF, 0xF0, 0x0E, 0x07, 0x81, 0xF0, 0xEC, 0x3B, 0x8C,
  0x67, 0x19, 0x87, 0x60, 0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0xE6, 0x30, 0x3F,
  0x0F, 0xF1, 0xFF, 0x70, 0xE0, 0x1C, 0x7F, 0x9E, 0x77, 0x0E, 0xE3, 0xDF,
  0xF9, 0xFF, 0x1C, 0xF0, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE7, 0x8F,
  0xFC, 0xFF, 0xEF, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xF0, 0xFF,
  0xFE, 0xFF, 0xCE, 0xF8, 0x1F, 0x07, 0xF9, 0xFF, 0x78, 0xFE, 0x01, 0xC0,
  0x38, 0x07, 0x00, 0xF1, 0xEF, 0xF9, 0xFF, 0x0F, 0x80, 0x00, 0xE0, 0x1C,
  0x03, 0x80, 0x71, 0xEE, 0x7F, 0xDF, 0xFF, 0x8F, 0xE0, 0xFC, 0x1F, 0x83,
  0xF0, 0x7F, 0x1E, 0xFF, 0xCF, 0xF8, 0xF7, 0x1F, 0x07, 0xF1, 0xFF, 0x78,
  0xFE, 0x0F, 0xFF, 0xFF, 0xFF, 0x00, 0xF1, 0xEF, 0xF9, 0xFE, 0x0F, 0x80,
  0x3D, 0xF7, 0xDC, 0xFB, 0xE7, 0x1C, 0x71, 0xC7, 0x1C, 0x71, 0xC7, 0x1C,
  0x1C, 0xE7, 0xDD, 0xFF, 0xF8, 0xFE, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF1,
  0xEF, 0xFD, 0xFF, 0x8F, 0x70, 0x0E, 0x01, 0xFC, 0x7B, 0xFE, 0x3F, 0x00,
  0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x79, 0xDF, 0xBF, 0xFF, 0x8F, 0xE0,
  0xFC, 0x1F, 0x83, 0xF0, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xFF, 0x8F,
  0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x70, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
  0x77, 0xFF, 0xE0, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x3D, 0xC7, 0x39,
  0xC7, 0x70, 0xFC, 0x1F, 0xC3, 0xF8, 0x7B, 0x8E, 0x79, 0xC7, 0x38, 0xF7,
  0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x1E, 0x7F, 0xDF, 0xBF,
  0xFF, 0xFE, 0x3C, 0x7E, 0x1C, 0x3F, 0x0E, 0x1F, 0x87, 0x0F, 0xC3, 0x87,
  0xE1, 0xC3, 0xF0, 0xE1, 0xF8, 0x70, 0xFC, 0x38, 0x70, 0xE7, 0x9F, 0xFB,
  0xFF, 0xF8, 0xFE, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE0, 0xFC, 0x1F, 0x83,
  0xF0, 0x70, 0x1F, 0x83, 0xFC, 0x7F, 0xE7, 0x0F, 0xE0, 0x7E, 0x07, 0xE0,
  0x7E, 0x07, 0x70, 0xF7, 0xFE, 0x3F, 0xC1, 0xF8, 0xE7, 0x8F, 0xFC, 0xFF,
  0xEF, 0x0E, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xF0, 0xEF, 0xFE, 0xEF,
  0xCE, 0x78, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x00, 0x1E, 0xE7,
  0xFD, 0xFF, 0xF8, 0xFE, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF1, 0xEF, 0xFC,
  0xFF, 0x8F, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0xE7, 0xDF,
  0xFF, 0x8E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x00, 0x3E, 0x1F, 0xEF,
  0xFB, 0x87, 0xF8, 0x3F, 0xC3, 0xFC, 0x1F, 0xE1, 0xFF, 0xFF, 0xF8, 0xFC,
  0x73, 0x9D, 0xFF, 0xB9, 0xCE, 0x73, 0x9C, 0xE7, 0xBC, 0xE0, 0xE0, 0xFC,
  0x1F, 0x83, 0xF0, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF1, 0xFF, 0xFD,
  0xFF, 0x9E, 0x70, 0xF0, 0xF7, 0x0E, 0x70, 0xE7, 0x1E, 0x39, 0xC3, 0x9C,
  0x39, 0x81, 0xF8, 0x1F, 0x80, 0xF0, 0x0F, 0x00, 0xF0, 0xE1, 0xC3, 0xB8,
  0xE3, 0xDC, 0x79, 0xCE, 0x7C, 0xE7, 0x36, 0x71, 0xDB, 0x30, 0xED, 0xF8,
  0x7E, 0xFC, 0x1E, 0x3E, 0x0F, 0x1E, 0x07, 0x8F, 0x03, 0xC7, 0x80, 0x70,
  0xE7, 0x9E, 0x39, 0xC1, 0xF8, 0x1F, 0x80, 0xF0, 0x0F, 0x01, 0xF8, 0x1F,
  0x83, 0x9C, 0x79, 0xE7, 0x0E, 0xF0, 0x77, 0x0E, 0x70, 0xE3, 0x8E, 0x39,
  0xC3, 0x9C, 0x1D, 0xC1, 0xF8, 0x1F, 0x80, 0xF0, 0x0F, 0x00, 0xF0, 0x06,
  0x00, 0xE0, 0x3E, 0x03, 0xC0, 0x38, 0x00, 0xFF, 0xBF, 0xEF, 0xF8, 0x1E,
  0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x3F, 0xFF, 0xFF, 0xFF, 0x1C, 0xF3,
  0xCC, 0x30, 0xC3, 0x0C, 0x33, 0xCF, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xF3,
  0xC7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xCF, 0x0C, 0x30, 0xC3, 0x0C,
  0x30, 0xF3, 0xCC, 0x30, 0xC3, 0x0C, 0x33, 0xCF, 0x38, 0x70, 0x3F, 0x18,
  0xFC, 0x0E };

const GFXglyph FreeSansBold11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   6,    0,    0 },   // 0x20 ' '
  {     1,   3,  16,   7,    2,  -15 },   // 0x21 '!'
  {     7,   8,   6,  10,    1,  -15 },   // 0x22 '"'
  {    13,  12,  14,  12,    0,  -14 },   // 0x23 '#'
  {    34,  11,  18,  12,    1,  -16 },   // 0x24 '$'
  {    59,  19,  16,  20,    0,  -15 },   // 0x25 '%'
  {    97,  15,  16,  16,    1,  -15 },   // 0x26 '&'
  {   127,   3,   6,   6,    1,  -15 },   // 0x27 '''
  {   130,   6,  20,   7,    1,  -15 },   // 0x28 '('
  {   145,   6,  20,   7,    1,  -15 },   // 0x29 ')'
  {   160,   7,   7,   9,    0,  -15 },   // 0x2A '*'
  {   167,   9,  10,  13,    2,   -9 },   // 0x2B '+'
  {   179,   3,   7,   5,    1,   -2 },   // 0x2C ','
  {   182,   6,   3,   7,    1,   -7 },   // 0x2D '-'
  {   185,   3,   3,   6,    1,   -2 },   // 0x2E '.'
  {   187,   6,  16,   6,    0,  -15 },   // 0x2F '/'
  {   199,  10,  16,  12,    1,  -15 },   // 0x30 '0'
  {   219,   6,  16,  12,    2,  -15 },   // 0x31 '1'
  {   231,  10,  16,  12,    1,  -15 },   // 0x32 '2'
  {   251,  11,  16,  12,    1,  -15 },   // 0x33 '3'
  {   273,  10,  16,  12,    1,  -15 },   // 0x34 '4'
  {   293,  11,  16,  12,    0,  -15 },   // 0x35 '5'
  {   315,  10,  16,  12,    1,  -15 },   // 0x36 '6'
  {   335,  10,  16,  12,    1,  -15 },   // 0x37 '7'
  {   355,  11,  16,  12,    0,  -15 },   // 0x38 '8'
  {   377,  10,  16,  12,    1,  -15 },   // 0x39 '9'
  {   397,   3,  11,   6,    1,  -10 },   // 0x3A ':'
  {   402,   3,  15,   5,    1,  -10 },   // 0x3B ';'
  {   408,  11,  11,  13,    1,  -10 },   // 0x3C '<'
  {   424,  11,   8,  13,    1,   -8 },   // 0x3D '='
  {   435,  11,  11,  13,    1,  -10 },   // 0x3E '>'
  {   451,  11,  16,  13,    1,  -15 },   // 0x3F '?'
  {   473,  20,  19,  21,    1,  -15 },   // 0x40 '@'
  {   521,  15,  16,  15,    0,  -15 },   // 0x41 'A'
  {   551,  12,  16,  15,    2,  -15 },   // 0x42 'B'
  {   575,  14,  16,  16,    1,  -15 },   // 0x43 'C'
  {   603,  13,  16,  16,    2,  -15 },   // 0x44 'D'
  {   629,  11,  16,  15,    2,  -15 },   // 0x45 'E'
  {   651,  11,  16,  14,    2,  -15 },   // 0x46 'F'
  {   673,  15,  16,  17,    1,  -15 },   // 0x47 'G'
  {   703,  12,  16,  16,    2,  -15 },   // 0x48 'H'
  {   727,   3,  16,   7,    2,  -15 },   // 0x49 'I'
  {   733,  10,  16,  13,    1,  -15 },   // 0x4A 'J'
  {   753,  14,  16,  16,    2,  -15 },   // 0x4B 'K'
  {   781,  10,  16,  14,    2,  -15 },   // 0x4C 'L'
  {   801,  15,  16,  19,    2,  -15 },   // 0x4D 'M'
  {   831,  13,  16,  17,    2,  -15 },   // 0x4E 'N'
  {   857,  15,  16,  17,    1,  -15 },   // 0x4F 'O'
  {   887,  12,  16,  15,    2,  -15 },   // 0x50 'P'
  {   911,  15,  17,  17,    1,  -15 },   // 0x51 'Q'
  {   943,  13,  16,  16,    2,  -15 },   // 0x52 'R'
  {   969,  13,  16,  15,    1,  -15 },   // 0x53 'S'
  {   995,  12,  16,  14,    1,  -15 },   // 0x54 'T'
  {  1019,  12,  16,  16,    2,  -15 },   // 0x55 'U'
  {  1043,  14,  16,  15,    0,  -15 },   // 0x56 'V'
  {  1071,  21,  16,  21,    0,  -15 },   // 0x57 'W'
  {  1113,  14,  16,  15,    0,  -15 },   // 0x58 'X'
  {  1141,  13,  16,  14,    1,  -15 },   // 0x59 'Y'
  {  1167,  12,  16,  13,    1,  -15 },   // 0x5A 'Z'
  {  1191,   5,  20,   7,    1,  -15 },   // 0x5B '['
  {  1204,   6,  16,   6,    0,  -15 },   // 0x5C '\'
  {  1216,   5,  20,   7,    0,  -15 },   // 0x5D ']'
  {  1229,  10,   9,  13,    1,  -14 },   // 0x5E '^'
  {  1241,  13,   2,  12,    0,    3 },   // 0x5F '_'
  {  1245,   4,   3,   6,    0,  -15 },   // 0x60 '`'
  {  1247,  11,  12,  12,    1,  -11 },   // 0x61 'a'
  {  1264,  12,  16,  14,    1,  -15 },   // 0x62 'b'
  {  1288,  11,  12,  12,    1,  -11 },   // 0x63 'c'
  {  1305,  11,  16,  14,    1,  -15 },   // 0x64 'd'
  {  1327,  11,  12,  13,    1,  -11 },   // 0x65 'e'
  {  1344,   6,  16,   8,    1,  -15 },   // 0x66 'f'
  {  1356,  11,  17,  13,    1,  -11 },   // 0x67 'g'
  {  1380,  11,  16,  13,    1,  -15 },   // 0x68 'h'
  {  1402,   3,  16,   6,    2,  -15 },   // 0x69 'i'
  {  1408,   4,  21,   6,    1,  -15 },   // 0x6A 'j'
  {  1419,  11,  16,  12,    1,  -15 },   // 0x6B 'k'
  {  1441,   3,  16,   6,    1,  -15 },   // 0x6C 'l'
  {  1447,  17,  12,  20,    1,  -11 },   // 0x6D 'm'
  {  1473,  11,  12,  13,    1,  -11 },   // 0x6E 'n'
  {  1490,  12,  12,  14,    1,  -11 },   // 0x6F 'o'
  {  1508,  12,  17,  14,    1,  -11 },   // 0x70 'p'
  {  1534,  11,  17,  14,    1,  -11 },   // 0x71 'q'
  {  1558,   7,  12,   9,    1,  -11 },   // 0x72 'r'
  {  1569,  10,  12,  12,    1,  -11 },   // 0x73 's'
  {  1584,   5,  15,   7,    1,  -14 },   // 0x74 't'
  {  1594,  11,  12,  13,    1,  -11 },   // 0x75 'u'
  {  1611,  12,  12,  12,    0,  -11 },   // 0x76 'v'
  {  1629,  17,  12,  17,    0,  -11 },   // 0x77 'w'
  {  1655,  12,  12,  12,    0,  -11 },   // 0x78 'x'
  {  1673,  12,  17,  12,    0,  -11 },   // 0x79 'y'
  {  1699,  10,  12,  11,    1,  -11 },   // 0x7A 'z'
  {  1714,   6,  20,   9,    1,  -15 },   // 0x7B '{'
  {  1729,   2,  20,   6,    2,  -15 },   // 0x7C '|'
  {  1734,   6,  20,   9,    1,  -15 },   // 0x7D '}'
  {  1749,  10,   4,  11,    0,   -6 } }; // 0x7E '~'

const GFXfont FreeSansBold11pt7b PROGMEM = {
  (uint8_t  *)FreeSansBold11pt7bBitmaps,
  (GFXglyph *)FreeSansBold11pt7bGlyphs,
  0x20, 0x7E, 26 };

// Approx. 2426 bytes

#endif // FreeSansBold11pt7b_H
