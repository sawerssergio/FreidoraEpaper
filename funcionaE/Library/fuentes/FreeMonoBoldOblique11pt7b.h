#ifndef FreeMonoBoldOblique11pt7b_H
#define FreeMonoBoldOblique11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeMonoBoldOblique11pt7bBitmaps[] PROGMEM = {
  0x00, 0x19, 0xCE, 0x63, 0x19, 0xCC, 0x63, 0x00, 0x0E, 0x70, 0x67, 0x66,
  0x66, 0x46, 0xC4, 0xC4, 0x06, 0x60, 0x66, 0x06, 0xE0, 0xEC, 0x0C, 0xC3,
  0xFF, 0x3F, 0xF1, 0xD8, 0x19, 0x81, 0x98, 0xFF, 0xCF, 0xFC, 0x33, 0x03,
  0x70, 0x76, 0x06, 0x60, 0x66, 0x00, 0x01, 0x00, 0x70, 0x1F, 0x8F, 0xF3,
  0x8E, 0x60, 0x8E, 0x01, 0xFC, 0x0F, 0xC0, 0x39, 0x03, 0x70, 0x6E, 0x19,
  0xFE, 0x03, 0x00, 0xE0, 0x18, 0x03, 0x00, 0x1C, 0x09, 0x84, 0x21, 0x08,
  0x44, 0x4E, 0xF3, 0xE3, 0xC0, 0x0E, 0x04, 0x42, 0x10, 0x88, 0x1C, 0x00,
  0x07, 0xC3, 0xF1, 0x90, 0x60, 0x18, 0x07, 0x07, 0xCD, 0xBF, 0xC7, 0xB1,
  0xCF, 0xF9, 0xFE, 0xFF, 0x6D, 0x00, 0x0C, 0x31, 0x8C, 0x31, 0x86, 0x18,
  0xC3, 0x0C, 0x30, 0xC3, 0x0E, 0x18, 0x60, 0x18, 0x61, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x31, 0x86, 0x38, 0xC6, 0x38, 0xC0, 0x04, 0x03, 0x00, 0xC3,
  0xB6, 0xFF, 0x8F, 0x83, 0xC1, 0xF8, 0xE6, 0x00, 0x03, 0x00, 0x30, 0x03,
  0x00, 0x60, 0x06, 0x0F, 0xFE, 0xFF, 0xE0, 0xE0, 0x0C, 0x00, 0xC0, 0x0C,
  0x00, 0xC0, 0x39, 0x98, 0xCC, 0x40, 0xFF, 0xFF, 0xFE, 0xFC, 0x00, 0x30,
  0x03, 0x00, 0x60, 0x0E, 0x00, 0xC0, 0x18, 0x03, 0x80, 0x30, 0x06, 0x00,
  0xE0, 0x1C, 0x01, 0x80, 0x38, 0x07, 0x00, 0x60, 0x0C, 0x00, 0xC0, 0x00,
  0x0F, 0x07, 0xE3, 0x9D, 0xC3, 0x60, 0xD8, 0x3E, 0x0F, 0x03, 0xC1, 0xB0,
  0x6C, 0x3B, 0x9C, 0x7E, 0x0F, 0x00, 0x03, 0x83, 0xC1, 0xF0, 0xCC, 0x03,
  0x01, 0xC0, 0x60, 0x18, 0x06, 0x01, 0x80, 0xC0, 0x30, 0xFF, 0xFF, 0xE0,
  0x03, 0xC0, 0xFE, 0x0C, 0x71, 0x83, 0x18, 0x30, 0x06, 0x00, 0xE0, 0x1C,
  0x07, 0x80, 0xF0, 0x1C, 0x07, 0x86, 0x7F, 0xCF, 0xFC, 0x07, 0xC3, 0xFC,
  0x61, 0x80, 0x30, 0x06, 0x01, 0x83, 0xE0, 0x7C, 0x01, 0xC0, 0x18, 0x03,
  0x00, 0xCF, 0xF0, 0xFC, 0x00, 0x01, 0xE0, 0x38, 0x0F, 0x03, 0x60, 0xCC,
  0x3B, 0x8E, 0x63, 0x8C, 0x7F, 0xDF, 0xF8, 0x0C, 0x07, 0xC0, 0xF8, 0x1F,
  0xE3, 0xF8, 0x60, 0x18, 0x03, 0xF8, 0x7F, 0x8C, 0x70, 0x06, 0x00, 0xC0,
  0x1B, 0x06, 0x7F, 0x87, 0xE0, 0x01, 0xF0, 0x7F, 0x0E, 0x01, 0x80, 0x30,
  0x06, 0x00, 0x6F, 0x8F, 0xFC, 0xF1, 0xCC, 0x0C, 0xC0, 0xCE, 0x18, 0x7F,
  0x03, 0xE0, 0xFF, 0xFF, 0xFC, 0x18, 0x0E, 0x03, 0x01, 0x80, 0xE0, 0x30,
  0x1C, 0x06, 0x03, 0x80, 0xC0, 0x60, 0x00, 0x0F, 0x87, 0xF3, 0x0D, 0x83,
  0x60, 0xDC, 0x63, 0xF0, 0xFC, 0x63, 0xB0, 0x6C, 0x1B, 0x0C, 0xFF, 0x1F,
  0x00, 0x07, 0x81, 0xF8, 0x63, 0x98, 0x33, 0x06, 0x60, 0xCE, 0x79, 0xFE,
  0x1E, 0xC0, 0x38, 0x0E, 0x03, 0x8F, 0xE1, 0xF0, 0x00, 0x39, 0xC0, 0x00,
  0x00, 0x00, 0xE7, 0x00, 0x0E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x38,
  0x61, 0x83, 0x0C, 0x00, 0x00, 0x30, 0x0F, 0x07, 0xC1, 0xF0, 0x7C, 0x07,
  0xC0, 0x1F, 0x00, 0x78, 0x01, 0xC0, 0x0C, 0x7F, 0xF7, 0xFF, 0x00, 0x00,
  0x00, 0xFF, 0xEF, 0xFE, 0x30, 0x07, 0x80, 0x1E, 0x00, 0xF8, 0x03, 0xE0,
  0x3C, 0x0F, 0x07, 0xC0, 0xF0, 0x08, 0x00, 0x3E, 0x7F, 0xF0, 0xF8, 0x30,
  0x18, 0x18, 0x38, 0x78, 0x30, 0x00, 0x00, 0x0E, 0x07, 0x00, 0x03, 0xC1,
  0xFC, 0x71, 0x9C, 0x33, 0x06, 0x43, 0x99, 0xF3, 0x76, 0x6C, 0xC9, 0x9B,
  0x3E, 0x63, 0xEC, 0x01, 0x80, 0x38, 0x03, 0xF8, 0x3E, 0x00, 0x0F, 0xE0,
  0x3F, 0x80, 0x3E, 0x00, 0xD8, 0x07, 0x60, 0x19, 0xC0, 0xC7, 0x07, 0xFC,
  0x1F, 0xF0, 0xC0, 0xC3, 0x03, 0xBE, 0x3F, 0xF8, 0xFC, 0x1F, 0xF0, 0xFF,
  0xC3, 0x06, 0x18, 0x30, 0xC1, 0x86, 0x18, 0x7F, 0x83, 0xFE, 0x18, 0x38,
  0xC0, 0xC6, 0x06, 0xFF, 0xE7, 0xFE, 0x00, 0x07, 0xF8, 0xFF, 0xCE, 0x1C,
  0xE0, 0x66, 0x03, 0x30, 0x03, 0x00, 0x18, 0x00, 0xC0, 0x06, 0x01, 0x38,
  0x38, 0xFF, 0x81, 0xF0, 0x00, 0x1F, 0xE0, 0xFF, 0x83, 0x0E, 0x18, 0x31,
  0xC1, 0x8C, 0x0C, 0x60, 0x63, 0x03, 0x18, 0x31, 0xC1, 0x8C, 0x18, 0xFF,
  0x87, 0xF8, 0x00, 0x1F, 0xFC, 0x7F, 0xF0, 0xC1, 0xC3, 0x06, 0x0C, 0x18,
  0x73, 0x01, 0xFC, 0x07, 0xE0, 0x19, 0x80, 0x60, 0x63, 0x83, 0x9F, 0xFC,
  0xFF, 0xF0, 0x1F, 0xFC, 0xFF, 0xF0, 0xC0, 0xC3, 0x07, 0x1C, 0x18, 0x66,
  0x01, 0xF8, 0x07, 0xE0, 0x19, 0x00, 0xE0, 0x03, 0x00, 0x3F, 0xC0, 0xFE,
  0x00, 0x07, 0xF8, 0xFF, 0xCE, 0x0C, 0xE0, 0x66, 0x00, 0x30, 0x03, 0x00,
  0x18, 0x7E, 0xC7, 0xF6, 0x03, 0x38, 0x38, 0xFF, 0x83, 0xF0, 0x00, 0x1F,
  0x3C, 0x7D, 0xF0, 0xC1, 0x83, 0x06, 0x1C, 0x38, 0x7F, 0xC1, 0xFF, 0x06,
  0x0C, 0x18, 0x30, 0xE1, 0xC3, 0x06, 0x1F, 0x7E, 0xFD, 0xF0, 0x1F, 0xF1,
  0xFF, 0x03, 0x00, 0x30, 0x03, 0x00, 0x70, 0x06, 0x00, 0x60, 0x06, 0x00,
  0x60, 0x0E, 0x07, 0xFC, 0xFF, 0xC0, 0x03, 0xFE, 0x07, 0xF8, 0x01, 0xC0,
  0x03, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x18, 0x30, 0x70, 0x60, 0xC0, 0xC1,
  0x83, 0x87, 0x07, 0xFC, 0x03, 0xE0, 0x00, 0x1F, 0xBE, 0x7E, 0x78, 0x31,
  0xC0, 0x67, 0x01, 0xDC, 0x03, 0xF0, 0x07, 0xE0, 0x0E, 0xE0, 0x18, 0xC0,
  0x71, 0xC0, 0xC1, 0x87, 0xE3, 0xCF, 0xC7, 0x80, 0x1F, 0xC0, 0xFE, 0x01,
  0x80, 0x0C, 0x00, 0x60, 0x03, 0x00, 0x38, 0x01, 0x80, 0x0C, 0x18, 0x60,
  0xC3, 0x06, 0xFF, 0xE7, 0xFF, 0x00, 0x1C, 0x0F, 0x3E, 0x1F, 0x1E, 0x1E,
  0x1E, 0x3C, 0x1E, 0x7C, 0x1F, 0x6C, 0x3F, 0xEC, 0x33, 0xDC, 0x33, 0x98,
  0x33, 0x98, 0x70, 0x18, 0xFC, 0xFC, 0xF8, 0xFC, 0x1E, 0x3E, 0x3E, 0x3E,
  0x0F, 0x0C, 0x0F, 0x1C, 0x1F, 0x18, 0x1B, 0x98, 0x19, 0x98, 0x19, 0xD8,
  0x19, 0xF8, 0x38, 0xF0, 0x30, 0xF0, 0x7C, 0x70, 0x7C, 0x70, 0x03, 0xC0,
  0x7F, 0x8E, 0x1C, 0x60, 0x76, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0,
  0x37, 0x03, 0x1C, 0x38, 0xFF, 0x01, 0xE0, 0x00, 0x1F, 0xF0, 0xFF, 0xC3,
  0x06, 0x18, 0x30, 0xC1, 0x86, 0x18, 0x7F, 0x83, 0xF8, 0x18, 0x00, 0xC0,
  0x06, 0x00, 0xFE, 0x07, 0xF0, 0x00, 0x07, 0xC0, 0x7F, 0x8E, 0x1C, 0x60,
  0x76, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x37, 0x03, 0x1C, 0x30,
  0xFF, 0x03, 0xE0, 0x18, 0x21, 0xFF, 0x9F, 0xF8, 0x1F, 0xE0, 0xFF, 0xE0,
  0xC3, 0x83, 0x06, 0x1C, 0x18, 0x61, 0xC1, 0xFE, 0x07, 0xF0, 0x18, 0xE0,
  0xE1, 0x83, 0x07, 0x3F, 0x0F, 0xFC, 0x3C, 0x0F, 0xB3, 0xFF, 0x30, 0x66,
  0x06, 0x60, 0x07, 0xC0, 0x3F, 0x80, 0x7C, 0x00, 0xCC, 0x0C, 0xE1, 0xCF,
  0xF8, 0xBE, 0x00, 0x7F, 0xFF, 0xFF, 0xC6, 0x7C, 0x66, 0xCE, 0x60, 0xC0,
  0x0C, 0x00, 0xC0, 0x0C, 0x01, 0xC0, 0x18, 0x0F, 0xF0, 0xFF, 0x00, 0x7D,
  0xFF, 0xEF, 0xDC, 0x18, 0xC0, 0xC6, 0x06, 0x30, 0x61, 0x83, 0x1C, 0x18,
  0xC0, 0xC6, 0x0E, 0x30, 0xE0, 0xFE, 0x03, 0xC0, 0x00, 0xFC, 0xFF, 0xE3,
  0xF7, 0x03, 0x1C, 0x18, 0x30, 0xE0, 0xC3, 0x03, 0x9C, 0x0E, 0x60, 0x1B,
  0x00, 0x7C, 0x01, 0xE0, 0x07, 0x00, 0x1C, 0x00, 0x7C, 0xFF, 0xF3, 0xF6,
  0x03, 0x99, 0xCC, 0x67, 0x31, 0xBD, 0xC6, 0xF6, 0x1F, 0xD8, 0x7B, 0xE1,
  0xCF, 0x0F, 0x3C, 0x38, 0x70, 0xE1, 0x80, 0x1E, 0x3E, 0x7C, 0x7C, 0x38,
  0xE0, 0x73, 0x80, 0x7E, 0x00, 0x78, 0x00, 0xE0, 0x03, 0xE0, 0x0F, 0xC0,
  0x39, 0xC0, 0xE1, 0x87, 0xC7, 0xCF, 0x9F, 0x80, 0xF9, 0xFF, 0x1F, 0x71,
  0xC3, 0x18, 0x3B, 0x01, 0xF0, 0x1E, 0x00, 0xC0, 0x1C, 0x01, 0x80, 0x18,
  0x0F, 0xF0, 0xFE, 0x00, 0x1F, 0xF1, 0xFF, 0x18, 0x61, 0x8C, 0x11, 0xC0,
  0x38, 0x07, 0x00, 0xE0, 0x1C, 0x63, 0x86, 0x70, 0x67, 0xFC, 0xFF, 0xC0,
  0x1F, 0x1F, 0x18, 0x18, 0x38, 0x30, 0x30, 0x30, 0x30, 0x70, 0x60, 0x60,
  0x60, 0x60, 0xE0, 0xF8, 0xF8, 0xC3, 0x0E, 0x38, 0x61, 0x87, 0x1C, 0x30,
  0xC3, 0x86, 0x18, 0x61, 0xC3, 0x0C, 0x0F, 0x8F, 0x80, 0xC0, 0x60, 0x70,
  0x30, 0x18, 0x0C, 0x06, 0x07, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x70, 0xF0,
  0xF8, 0x00, 0x04, 0x07, 0x07, 0x87, 0xE7, 0x3F, 0x1E, 0x06, 0xFF, 0xFF,
  0xFF, 0xE0, 0x99, 0x90, 0x0F, 0xC1, 0xFE, 0x00, 0x60, 0xFE, 0x3F, 0xE7,
  0x0E, 0xC0, 0xCC, 0x3C, 0xFF, 0xF7, 0xFF, 0x1E, 0x00, 0x78, 0x00, 0xE0,
  0x03, 0x00, 0x0D, 0xF0, 0x3F, 0xE1, 0xE1, 0xC7, 0x03, 0x1C, 0x0C, 0x60,
  0x31, 0x81, 0x87, 0x0E, 0x7F, 0xF3, 0xDF, 0x00, 0x0F, 0xA7, 0xFD, 0xC3,
  0xB0, 0x3C, 0x01, 0x80, 0x30, 0x07, 0x06, 0x7F, 0xC7, 0xE0, 0x00, 0x78,
  0x03, 0xC0, 0x0C, 0x00, 0x60, 0xFB, 0x1F, 0xF9, 0xC3, 0xCC, 0x1C, 0xC0,
  0x66, 0x07, 0x30, 0x39, 0xC3, 0xC7, 0xFF, 0x1F, 0x78, 0x0F, 0x87, 0xF9,
  0xC3, 0xB0, 0x3F, 0xFF, 0xFF, 0xF0, 0x07, 0x0E, 0x7F, 0xC7, 0xE0, 0x01,
  0xF8, 0x1F, 0xC1, 0x80, 0x0C, 0x03, 0xFE, 0x1F, 0xF0, 0x30, 0x01, 0x80,
  0x0C, 0x00, 0xE0, 0x06, 0x00, 0x30, 0x0F, 0xF8, 0x7F, 0xC0, 0x0F, 0xF9,
  0xFF, 0xDC, 0x78, 0xC1, 0xCC, 0x0E, 0x60, 0x63, 0x07, 0x1C, 0x78, 0x7F,
  0xC1, 0xEC, 0x00, 0x60, 0x07, 0x07, 0xF0, 0x3F, 0x00, 0x3C, 0x03, 0xC0,
  0x0C, 0x01, 0xC0, 0x1B, 0xC1, 0xFE, 0x1C, 0x63, 0x86, 0x30, 0x63, 0x06,
  0x30, 0xE3, 0x0C, 0xFB, 0xFF, 0xBF, 0x03, 0x01, 0xC0, 0x00, 0xFC, 0x3E,
  0x01, 0x80, 0x60, 0x18, 0x0E, 0x03, 0x00, 0xC3, 0xFF, 0xFF, 0xC0, 0x00,
  0xE0, 0x1C, 0x00, 0x0F, 0xF1, 0xFE, 0x00, 0xC0, 0x38, 0x06, 0x00, 0xC0,
  0x18, 0x03, 0x00, 0xC0, 0x18, 0x03, 0x00, 0xE3, 0xF8, 0xFC, 0x00, 0x1E,
  0x03, 0xC0, 0x0C, 0x00, 0xC0, 0x0D, 0xF1, 0xDF, 0x1B, 0x81, 0xF0, 0x1E,
  0x03, 0xF0, 0x37, 0x83, 0x38, 0xF1, 0xFF, 0x3F, 0x1F, 0x87, 0xC0, 0x30,
  0x0C, 0x03, 0x01, 0xC0, 0x60, 0x18, 0x06, 0x03, 0x80, 0xC0, 0x30, 0xFF,
  0xFF, 0xF0, 0x3F, 0xB9, 0xFF, 0xF3, 0x9C, 0xCE, 0x63, 0x31, 0x8C, 0xC6,
  0x33, 0x30, 0xDC, 0xC3, 0xFB, 0x9F, 0xCE, 0x70, 0x3B, 0xC3, 0xFE, 0x3C,
  0x61, 0x86, 0x30, 0x63, 0x06, 0x30, 0xE3, 0x0C, 0xF9, 0xFF, 0x9F, 0x0F,
  0x87, 0xF9, 0xC3, 0xB0, 0x3C, 0x07, 0x80, 0xF0, 0x37, 0x0E, 0x7F, 0x87,
  0xC0, 0x1E, 0xF8, 0x3F, 0xF8, 0x3C, 0x38, 0x70, 0x30, 0xE0, 0x61, 0x80,
  0xC3, 0x83, 0x0F, 0x0E, 0x1F, 0xF8, 0x37, 0xC0, 0x60, 0x00, 0xC0, 0x07,
  0xE0, 0x1F, 0xC0, 0x00, 0x0F, 0xBC, 0xFF, 0xE7, 0x0E, 0x18, 0x18, 0xC0,
  0x63, 0x03, 0x8C, 0x0E, 0x38, 0x70, 0x7F, 0xC0, 0xFB, 0x00, 0x0C, 0x00,
  0x70, 0x07, 0xE0, 0x3F, 0x80, 0x1E, 0xF1, 0xFF, 0xC3, 0xE0, 0x1C, 0x00,
  0xC0, 0x0E, 0x00, 0x60, 0x03, 0x00, 0xFF, 0x87, 0xFC, 0x00, 0x1F, 0xCF,
  0xF6, 0x19, 0xE0, 0x7F, 0x87, 0xF4, 0x0F, 0x83, 0xFF, 0xAF, 0x80, 0x18,
  0x06, 0x01, 0x83, 0xFE, 0xFF, 0x8C, 0x03, 0x00, 0xC0, 0x70, 0x18, 0x06,
  0x1D, 0xFE, 0x3E, 0x00, 0xF1, 0xFE, 0x3D, 0x81, 0xB0, 0x76, 0x0C, 0xC1,
  0x98, 0x33, 0x0E, 0x7F, 0xE7, 0xB8, 0x7C, 0xFF, 0xF3, 0xE3, 0x06, 0x0E,
  0x38, 0x18, 0xC0, 0x66, 0x01, 0xF8, 0x07, 0xC0, 0x0E, 0x00, 0x38, 0x00,
  0xF0, 0xFF, 0x87, 0xD9, 0x98, 0xDC, 0xC6, 0xEC, 0x3F, 0xE1, 0xFE, 0x0E,
  0x70, 0x73, 0x83, 0x18, 0x00, 0x3E, 0xF9, 0xE7, 0xC7, 0x38, 0x1F, 0x80,
  0x70, 0x07, 0xC0, 0x77, 0x0F, 0x1C, 0xF9, 0xF7, 0xCF, 0x80, 0x3E, 0x3C,
  0x7C, 0x78, 0x70, 0xE0, 0xE1, 0x80, 0xC6, 0x01, 0x9C, 0x03, 0xB0, 0x03,
  0xC0, 0x07, 0x00, 0x0E, 0x00, 0x18, 0x00, 0x60, 0x0F, 0xE0, 0x1F, 0xC0,
  0x00, 0x3F, 0xE7, 0xFC, 0xC7, 0x19, 0xC0, 0x70, 0x1C, 0x07, 0x03, 0xC6,
  0x7F, 0xDF, 0xF8, 0x07, 0x0F, 0x0C, 0x1C, 0x18, 0x18, 0x38, 0xF0, 0xE0,
  0x30, 0x30, 0x30, 0x60, 0x60, 0x78, 0x38, 0x08, 0xC6, 0x33, 0x18, 0xC6,
  0x33, 0x18, 0xC6, 0x33, 0x18, 0xC0, 0x1C, 0x1E, 0x06, 0x06, 0x0E, 0x0C,
  0x0C, 0x0F, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x38, 0xF0, 0xE0, 0x38, 0xDF,
  0x3C, 0xFA, 0x1C };

const GFXglyph FreeMonoBoldOblique11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  13,    0,    0 },   // 0x20 ' '
  {     1,   5,  14,  13,    5,  -13 },   // 0x21 '!'
  {    10,   8,   6,  13,    5,  -12 },   // 0x22 '"'
  {    16,  12,  17,  13,    2,  -14 },   // 0x23 '#'
  {    42,  11,  18,  13,    2,  -14 },   // 0x24 '$'
  {    67,  10,  13,  13,    3,  -12 },   // 0x25 '%'
  {    84,  10,  12,  13,    2,  -11 },   // 0x26 '&'
  {    99,   3,   6,  13,    8,  -12 },   // 0x27 '''
  {   102,   6,  17,  13,    7,  -13 },   // 0x28 '('
  {   115,   6,  17,  13,    2,  -13 },   // 0x29 ')'
  {   128,  10,   9,  13,    4,  -13 },   // 0x2A '*'
  {   140,  12,  12,  13,    2,  -11 },   // 0x2B '+'
  {   158,   5,   6,  13,    3,   -2 },   // 0x2C ','
  {   162,  12,   2,  13,    2,   -6 },   // 0x2D '-'
  {   165,   3,   2,  13,    5,   -1 },   // 0x2E '.'
  {   166,  12,  17,  13,    2,  -14 },   // 0x2F '/'
  {   192,  10,  14,  13,    3,  -13 },   // 0x30 '0'
  {   210,  10,  14,  13,    2,  -13 },   // 0x31 '1'
  {   228,  12,  14,  13,    1,  -13 },   // 0x32 '2'
  {   249,  11,  14,  13,    2,  -13 },   // 0x33 '3'
  {   269,  11,  13,  13,    2,  -12 },   // 0x34 '4'
  {   287,  11,  13,  13,    2,  -12 },   // 0x35 '5'
  {   305,  12,  14,  13,    3,  -13 },   // 0x36 '6'
  {   326,  10,  13,  13,    4,  -12 },   // 0x37 '7'
  {   343,  10,  14,  13,    3,  -13 },   // 0x38 '8'
  {   361,  11,  14,  13,    2,  -13 },   // 0x39 '9'
  {   381,   5,  10,  13,    5,   -9 },   // 0x3A ':'
  {   388,   7,  13,  13,    2,   -9 },   // 0x3B ';'
  {   400,  12,  10,  13,    2,  -10 },   // 0x3C '<'
  {   415,  12,   6,  13,    2,   -8 },   // 0x3D '='
  {   424,  12,  10,  13,    2,  -10 },   // 0x3E '>'
  {   439,   9,  13,  13,    4,  -12 },   // 0x3F '?'
  {   454,  11,  17,  13,    2,  -13 },   // 0x40 '@'
  {   478,  14,  13,  13,    0,  -12 },   // 0x41 'A'
  {   501,  13,  13,  13,    0,  -12 },   // 0x42 'B'
  {   523,  13,  13,  13,    2,  -12 },   // 0x43 'C'
  {   545,  13,  13,  13,    0,  -12 },   // 0x44 'D'
  {   567,  14,  13,  13,    0,  -12 },   // 0x45 'E'
  {   590,  14,  13,  13,    0,  -12 },   // 0x46 'F'
  {   613,  13,  13,  13,    1,  -12 },   // 0x47 'G'
  {   635,  14,  13,  13,    0,  -12 },   // 0x48 'H'
  {   658,  12,  13,  13,    1,  -12 },   // 0x49 'I'
  {   678,  15,  13,  13,    0,  -12 },   // 0x4A 'J'
  {   703,  15,  13,  13,    0,  -12 },   // 0x4B 'K'
  {   728,  13,  13,  13,    0,  -12 },   // 0x4C 'L'
  {   750,  16,  13,  13,    0,  -12 },   // 0x4D 'M'
  {   776,  16,  13,  13,    0,  -12 },   // 0x4E 'N'
  {   802,  13,  13,  13,    1,  -12 },   // 0x4F 'O'
  {   824,  13,  13,  13,    0,  -12 },   // 0x50 'P'
  {   846,  13,  16,  13,    1,  -12 },   // 0x51 'Q'
  {   872,  14,  13,  13,    0,  -12 },   // 0x52 'R'
  {   895,  12,  13,  13,    2,  -12 },   // 0x53 'S'
  {   915,  12,  13,  13,    2,  -12 },   // 0x54 'T'
  {   935,  13,  13,  13,    2,  -12 },   // 0x55 'U'
  {   957,  14,  13,  13,    1,  -12 },   // 0x56 'V'
  {   980,  14,  13,  13,    1,  -12 },   // 0x57 'W'
  {  1003,  15,  13,  13,    0,  -12 },   // 0x58 'X'
  {  1028,  12,  13,  13,    2,  -12 },   // 0x59 'Y'
  {  1048,  12,  13,  13,    1,  -12 },   // 0x5A 'Z'
  {  1068,   8,  17,  13,    5,  -13 },   // 0x5B '['
  {  1085,   6,  17,  13,    5,  -14 },   // 0x5C '\'
  {  1098,   9,  17,  13,    2,  -13 },   // 0x5D ']'
  {  1118,   9,   7,  13,    4,  -13 },   // 0x5E '^'
  {  1126,  14,   2,  13,   -1,    3 },   // 0x5F '_'
  {  1130,   3,   4,  13,    6,  -14 },   // 0x60 '`'
  {  1132,  12,  10,  13,    1,   -9 },   // 0x61 'a'
  {  1147,  14,  14,  13,   -1,  -13 },   // 0x62 'b'
  {  1172,  11,  10,  13,    2,   -9 },   // 0x63 'c'
  {  1186,  13,  14,  13,    2,  -13 },   // 0x64 'd'
  {  1209,  11,  10,  13,    2,   -9 },   // 0x65 'e'
  {  1223,  13,  14,  13,    2,  -13 },   // 0x66 'f'
  {  1246,  13,  14,  13,    1,   -9 },   // 0x67 'g'
  {  1269,  12,  14,  13,    1,  -13 },   // 0x68 'h'
  {  1290,  10,  13,  13,    2,  -12 },   // 0x69 'i'
  {  1307,  11,  17,  13,    1,  -12 },   // 0x6A 'j'
  {  1331,  12,  14,  13,    1,  -13 },   // 0x6B 'k'
  {  1352,  10,  14,  13,    2,  -13 },   // 0x6C 'l'
  {  1370,  14,  10,  13,    0,   -9 },   // 0x6D 'm'
  {  1388,  12,  10,  13,    1,   -9 },   // 0x6E 'n'
  {  1403,  11,  10,  13,    2,   -9 },   // 0x6F 'o'
  {  1417,  15,  14,  13,   -2,   -9 },   // 0x70 'p'
  {  1444,  14,  14,  13,    1,   -9 },   // 0x71 'q'
  {  1469,  13,  10,  13,    1,   -9 },   // 0x72 'r'
  {  1486,  10,  10,  13,    2,   -9 },   // 0x73 's'
  {  1499,  10,  13,  13,    2,  -12 },   // 0x74 't'
  {  1516,  11,  10,  13,    2,   -9 },   // 0x75 'u'
  {  1530,  14,  10,  13,    1,   -9 },   // 0x76 'v'
  {  1548,  13,  10,  13,    1,   -9 },   // 0x77 'w'
  {  1565,  13,  10,  13,    1,   -9 },   // 0x78 'x'
  {  1582,  15,  14,  13,    0,   -9 },   // 0x79 'y'
  {  1609,  11,  10,  13,    2,   -9 },   // 0x7A 'z'
  {  1623,   8,  16,  13,    4,  -12 },   // 0x7B '{'
  {  1639,   5,  17,  13,    5,  -13 },   // 0x7C '|'
  {  1650,   8,  16,  13,    3,  -12 },   // 0x7D '}'
  {  1666,  10,   4,  13,    3,   -7 } }; // 0x7E '~'

const GFXfont FreeMonoBoldOblique11pt7b PROGMEM = {
  (uint8_t  *)FreeMonoBoldOblique11pt7bBitmaps,
  (GFXglyph *)FreeMonoBoldOblique11pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 2343 bytes

#endif // FreeMonoBoldOblique11pt7b_H
