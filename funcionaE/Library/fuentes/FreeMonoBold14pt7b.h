#ifndef FreeMonoBold14pt7b_H
#define FreeMonoBold14pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeMonoBold14pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x66, 0x66, 0x06, 0xFF, 0x60, 0xE7, 0xE7,
  0xE7, 0x42, 0x42, 0x42, 0x42, 0x42, 0x1C, 0xE1, 0xCE, 0x1C, 0xE1, 0xCE,
  0x1D, 0xCF, 0xFF, 0xFF, 0xF7, 0xFF, 0x3D, 0xC3, 0x9C, 0x7F, 0xF7, 0xFF,
  0x7F, 0xF3, 0x9C, 0x39, 0xC3, 0x9C, 0x39, 0xC3, 0x9C, 0x0E, 0x01, 0xC0,
  0x38, 0x1F, 0xE7, 0xFD, 0xE3, 0xB8, 0x37, 0xC0, 0x7F, 0x8F, 0xF8, 0x3F,
  0x80, 0x7C, 0x0F, 0xC3, 0xFF, 0xFF, 0xFE, 0xFF, 0x81, 0xC0, 0x38, 0x07,
  0x00, 0xE0, 0x3C, 0x07, 0xE0, 0xE7, 0x0C, 0x30, 0xC3, 0x0E, 0x70, 0x7E,
  0x13, 0xCF, 0x07, 0xC7, 0xE0, 0xF3, 0xC0, 0x7E, 0x0E, 0x70, 0xC3, 0x0E,
  0x70, 0x7E, 0x03, 0xC0, 0x0F, 0x81, 0xFC, 0x3F, 0xC3, 0x88, 0x38, 0x03,
  0xC0, 0x1C, 0x03, 0xE0, 0x7F, 0x7F, 0x7F, 0xE3, 0xEE, 0x1E, 0xFF, 0xF7,
  0xFF, 0x1F, 0xF0, 0xFF, 0xA4, 0x92, 0x0C, 0x73, 0xCE, 0x71, 0xC7, 0x38,
  0xE3, 0x8E, 0x38, 0xE3, 0x87, 0x1C, 0x70, 0xE3, 0x87, 0x0C, 0xC3, 0x8F,
  0x1C, 0x38, 0xE3, 0x87, 0x1C, 0x71, 0xC7, 0x1C, 0x73, 0x8E, 0x39, 0xCF,
  0x38, 0xC0, 0x02, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x0F, 0xFF, 0x3F, 0xF8,
  0x7F, 0x01, 0xF0, 0x1F, 0xC1, 0xEF, 0x0E, 0x38, 0x07, 0x00, 0x38, 0x01,
  0xC0, 0x0E, 0x00, 0x70, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x38,
  0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x3B, 0x9C, 0xC6, 0x63, 0x10,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x6F, 0xF6, 0x00, 0x20, 0x07, 0x00,
  0x70, 0x0E, 0x00, 0xE0, 0x1C, 0x01, 0xC0, 0x38, 0x03, 0x80, 0x70, 0x07,
  0x00, 0xE0, 0x0E, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x38, 0x03, 0x80, 0x70,
  0x07, 0x00, 0xE0, 0x06, 0x00, 0x0F, 0x03, 0xFC, 0x7F, 0xE7, 0x9E, 0xF0,
  0xFE, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0,
  0x7F, 0x0F, 0x79, 0xE7, 0xFE, 0x3F, 0xC1, 0xF0, 0x1E, 0x07, 0xC3, 0xF8,
  0x77, 0x08, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07,
  0x00, 0xE0, 0x1C, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x1F, 0x07, 0xFC, 0xFF,
  0xEF, 0x0F, 0xE0, 0x70, 0x07, 0x00, 0x70, 0x0F, 0x01, 0xE0, 0x3C, 0x07,
  0x80, 0xF0, 0x1E, 0x03, 0x80, 0xF0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F,
  0x0F, 0xF8, 0xFF, 0xCC, 0x1E, 0x00, 0xE0, 0x0E, 0x01, 0xE0, 0xFC, 0x0F,
  0x80, 0xFC, 0x01, 0xE0, 0x07, 0x00, 0x70, 0x07, 0xC0, 0xFF, 0xFE, 0xFF,
  0xC3, 0xF8, 0x03, 0xC0, 0x7C, 0x07, 0xC0, 0xFC, 0x0D, 0xC1, 0xDC, 0x39,
  0xC3, 0x9C, 0x71, 0xC6, 0x1C, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x1C, 0x07,
  0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0xC3, 0xFE, 0x1F, 0xF0, 0xE0, 0x07, 0x00,
  0x3F, 0xC1, 0xFF, 0x8F, 0xFE, 0x70, 0x70, 0x01, 0xC0, 0x0E, 0x00, 0x70,
  0x03, 0xF0, 0x3F, 0xFF, 0xDF, 0xFC, 0x3F, 0x80, 0x03, 0xE0, 0xFF, 0x1F,
  0xF3, 0xE0, 0x78, 0x07, 0x00, 0x77, 0x8E, 0xFC, 0xFF, 0xEF, 0x8F, 0xF0,
  0x7E, 0x07, 0x70, 0x77, 0x0F, 0x3F, 0xE3, 0xFC, 0x0F, 0x80, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFE, 0x07, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x1C, 0x01, 0xC0,
  0x1C, 0x03, 0x80, 0x38, 0x03, 0x80, 0x70, 0x07, 0x00, 0x70, 0x06, 0x00,
  0x1F, 0x83, 0xFC, 0x7F, 0xEF, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x77, 0x0E,
  0x3F, 0xC1, 0xF8, 0x7F, 0xEF, 0x0F, 0xE0, 0x7E, 0x07, 0xF0, 0xF7, 0xFE,
  0x7F, 0xE1, 0xF8, 0x1F, 0x03, 0xF8, 0x7F, 0xCF, 0x1E, 0xE0, 0xEE, 0x06,
  0xE0, 0x7E, 0x0F, 0xF1, 0xF7, 0xFF, 0x3F, 0x71, 0xEE, 0x00, 0xE0, 0x1E,
  0x07, 0xCF, 0xF8, 0xFF, 0x07, 0xC0, 0x6F, 0xF6, 0x00, 0x00, 0x6F, 0xF6,
  0x33, 0xDE, 0x60, 0x00, 0x00, 0x7B, 0x9C, 0xCE, 0x63, 0x10, 0x00, 0x08,
  0x00, 0xF0, 0x0F, 0x80, 0xFC, 0x0F, 0xC0, 0xFC, 0x0F, 0xC0, 0x0F, 0xC0,
  0x0F, 0xC0, 0x0F, 0xC0, 0x0F, 0x80, 0x0F, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
  0x07, 0x00, 0x3E, 0x00, 0x7C, 0x01, 0xF8, 0x03, 0xF0, 0x07, 0xE0, 0x7C,
  0x0F, 0x81, 0xF0, 0x3E, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0x1F, 0xFB,
  0xFF, 0x70, 0xFE, 0x0E, 0x01, 0xC0, 0x78, 0x3E, 0x0F, 0x81, 0xC0, 0x30,
  0x00, 0x00, 0xC0, 0x3C, 0x07, 0x80, 0x60, 0x0F, 0x03, 0xFC, 0x30, 0xC6,
  0x06, 0x60, 0x6C, 0x1E, 0xC3, 0xEC, 0x7E, 0xCE, 0x6C, 0xC6, 0xCC, 0x6C,
  0xE6, 0xCF, 0xFC, 0x7F, 0xC3, 0xFC, 0x00, 0x60, 0x06, 0x00, 0x30, 0xE3,
  0xFE, 0x0F, 0x80, 0x1F, 0xC0, 0x1F, 0xF0, 0x07, 0xF8, 0x00, 0x7E, 0x00,
  0x77, 0x00, 0x3B, 0x80, 0x38, 0xE0, 0x1C, 0x70, 0x0E, 0x38, 0x0F, 0xFE,
  0x07, 0xFF, 0x07, 0xFF, 0xC3, 0x80, 0xE7, 0xF1, 0xFF, 0xF8, 0xFF, 0xFC,
  0x7F, 0xFF, 0xC3, 0xFF, 0xCF, 0xFF, 0x9C, 0x1E, 0x70, 0x39, 0xC1, 0xE7,
  0xFF, 0x1F, 0xFC, 0x7F, 0xF9, 0xC0, 0xF7, 0x01, 0xDC, 0x07, 0x70, 0x3F,
  0xFF, 0xFF, 0xFF, 0xBF, 0xF8, 0x07, 0xDC, 0x7F, 0xF3, 0xFF, 0xDE, 0x0F,
  0x70, 0x1F, 0x80, 0x7E, 0x00, 0x38, 0x00, 0xE0, 0x03, 0x80, 0x0E, 0x00,
  0x3C, 0x00, 0x78, 0x1C, 0xFF, 0xF1, 0xFF, 0x81, 0xF8, 0xFF, 0xC3, 0xFF,
  0x8F, 0xFF, 0x1C, 0x1E, 0x70, 0x39, 0xC0, 0x77, 0x01, 0xDC, 0x07, 0x70,
  0x1D, 0xC0, 0x77, 0x01, 0xDC, 0x0F, 0x70, 0x7B, 0xFF, 0xEF, 0xFF, 0x3F,
  0xF0, 0xFF, 0xF7, 0xFF, 0xBF, 0xFC, 0xE0, 0xE7, 0x3F, 0x39, 0xF9, 0xFE,
  0x0F, 0xF0, 0x7F, 0x83, 0x9C, 0x1C, 0xEE, 0xE0, 0x77, 0x03, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xE0, 0x77, 0x3B, 0xB9,
  0xDD, 0xFE, 0x0F, 0xF0, 0x7F, 0x83, 0x9C, 0x1C, 0xE0, 0xE0, 0x07, 0x00,
  0x7F, 0x83, 0xFC, 0x1F, 0xE0, 0x07, 0xCC, 0x3F, 0xF8, 0xFF, 0xF3, 0xC1,
  0xE7, 0x01, 0xDC, 0x03, 0xB8, 0x00, 0x70, 0x00, 0xE1, 0xFF, 0xC3, 0xFF,
  0x87, 0xFF, 0x80, 0xE7, 0x81, 0xCF, 0xFF, 0x8F, 0xFE, 0x03, 0xF0, 0x7E,
  0xFC, 0xFD, 0xF9, 0xFB, 0xF1, 0xC1, 0xC3, 0x83, 0x87, 0x07, 0x0E, 0x0E,
  0x1F, 0xFC, 0x3F, 0xF8, 0x7F, 0xF0, 0xE0, 0xE1, 0xC1, 0xC3, 0x83, 0x9F,
  0xDF, 0xFF, 0xBF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0x87, 0x00, 0xE0,
  0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE1, 0xFF,
  0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0x03, 0xFF, 0x03, 0xFF, 0x00, 0x38, 0x00,
  0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38, 0xE0, 0x38, 0xE0,
  0x38, 0xE0, 0x38, 0xF0, 0x78, 0xFF, 0xF0, 0xFF, 0xE0, 0x1F, 0x80, 0xFD,
  0xFB, 0xF7, 0xEF, 0xDF, 0x9C, 0x78, 0x73, 0xC1, 0xDE, 0x07, 0xE0, 0x1F,
  0xC0, 0x7F, 0x81, 0xEE, 0x07, 0x1C, 0x1C, 0x38, 0x70, 0xE3, 0xF3, 0xFF,
  0xC7, 0xFF, 0x1F, 0xFF, 0x81, 0xFF, 0x03, 0xFE, 0x00, 0xE0, 0x01, 0xC0,
  0x03, 0x80, 0x07, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x38, 0x1C, 0x70, 0x38,
  0xE0, 0x71, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7C, 0x0F, 0x9F,
  0x03, 0xE7, 0xE1, 0xF8, 0xF8, 0x7C, 0x3E, 0x1F, 0x0F, 0xCF, 0xC3, 0xF3,
  0xF0, 0xEF, 0xDC, 0x3B, 0xF7, 0x0E, 0x7D, 0xC3, 0x9E, 0x70, 0xE7, 0x9C,
  0x38, 0x07, 0x3F, 0x87, 0xFF, 0xE1, 0xFF, 0xF8, 0x7F, 0x78, 0x3F, 0xBE,
  0x1F, 0xDF, 0x8F, 0xE7, 0xC1, 0xC3, 0xF0, 0xE1, 0xFC, 0x70, 0xEE, 0x38,
  0x77, 0x9C, 0x39, 0xEE, 0x1C, 0x77, 0x0E, 0x3F, 0x87, 0x0F, 0xC3, 0x83,
  0xE7, 0xF1, 0xF3, 0xF8, 0x79, 0xFC, 0x1C, 0x07, 0xC0, 0x3F, 0xE0, 0xFF,
  0xE3, 0xE3, 0xE7, 0x01, 0xDE, 0x03, 0xF8, 0x03, 0xF0, 0x07, 0xE0, 0x0F,
  0xC0, 0x1F, 0xC0, 0x7B, 0x80, 0xE7, 0xC7, 0xC7, 0xFF, 0x07, 0xFC, 0x03,
  0xE0, 0xFF, 0x8F, 0xFE, 0xFF, 0xE7, 0x0F, 0x70, 0x77, 0x07, 0x70, 0x77,
  0x0F, 0x7F, 0xE7, 0xFE, 0x7F, 0x87, 0x00, 0x70, 0x0F, 0xF0, 0xFF, 0x0F,
  0xF0, 0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xE3, 0xE7, 0x01, 0xDE, 0x03,
  0xF8, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x1F, 0xC0, 0x7B, 0x80, 0xE7,
  0xC7, 0xC7, 0xFF, 0x07, 0xFC, 0x03, 0xE0, 0x0F, 0xCE, 0x3F, 0xFC, 0x7F,
  0xF8, 0xE1, 0xC0, 0xFF, 0xE0, 0xFF, 0xF0, 0xFF, 0xF8, 0x38, 0x3C, 0x38,
  0x1C, 0x38, 0x1C, 0x38, 0x3C, 0x3F, 0xF8, 0x3F, 0xF0, 0x3F, 0xE0, 0x38,
  0xF0, 0x38, 0x78, 0x38, 0x3C, 0xFE, 0x1F, 0xFE, 0x0F, 0xFE, 0x0F, 0x07,
  0xDC, 0x7F, 0xF3, 0xFF, 0xDE, 0x0F, 0x70, 0x1D, 0xE0, 0x07, 0xF0, 0x0F,
  0xF8, 0x1F, 0xF0, 0x07, 0xE0, 0x03, 0xF8, 0x07, 0xF0, 0x3F, 0xFF, 0xEF,
  0xFF, 0x3B, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xE7, 0xE3, 0x9F,
  0x8E, 0x7E, 0x39, 0xC0, 0xE0, 0x03, 0x80, 0x0E, 0x00, 0x38, 0x00, 0xE0,
  0x03, 0x80, 0x7F, 0xC1, 0xFF, 0x07, 0xFC, 0xFE, 0x3F, 0xFF, 0x1F, 0xFF,
  0x8F, 0xE7, 0x01, 0xC3, 0x80, 0xE1, 0xC0, 0x70, 0xE0, 0x38, 0x70, 0x1C,
  0x38, 0x0E, 0x1C, 0x07, 0x0E, 0x03, 0x87, 0x01, 0xC3, 0xC1, 0xE0, 0xFF,
  0xE0, 0x3F, 0xE0, 0x07, 0xC0, 0xFE, 0x1F, 0xFF, 0x87, 0xFF, 0xE1, 0xFC,
  0xE0, 0x1C, 0x38, 0x07, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x38, 0x70, 0x0E,
  0x1C, 0x03, 0xCE, 0x00, 0x73, 0x80, 0x1F, 0xE0, 0x03, 0xF0, 0x00, 0xFC,
  0x00, 0x1E, 0x00, 0x07, 0x80, 0xFE, 0x7F, 0xFE, 0x7F, 0xFE, 0x7F, 0x70,
  0x0E, 0x71, 0x8E, 0x73, 0xCE, 0x73, 0xCE, 0x33, 0xEE, 0x37, 0xEE, 0x3F,
  0xEC, 0x3E, 0x7C, 0x3E, 0x7C, 0x3E, 0x7C, 0x3E, 0x7C, 0x1C, 0x3C, 0x1C,
  0x3C, 0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xCE, 0x1C, 0x1C, 0xE0, 0x3F, 0x00,
  0x78, 0x01, 0xE0, 0x07, 0x80, 0x3F, 0x01, 0xFE, 0x07, 0x38, 0x38, 0x73,
  0xF3, 0xFF, 0xCF, 0xFF, 0x3F, 0xFC, 0x7F, 0xF8, 0xFF, 0xF1, 0xF9, 0xC1,
  0xC1, 0xC7, 0x03, 0xDE, 0x03, 0xB8, 0x03, 0xE0, 0x07, 0xC0, 0x07, 0x00,
  0x0E, 0x00, 0x1C, 0x00, 0x38, 0x03, 0xFE, 0x07, 0xFC, 0x0F, 0xF8, 0xFF,
  0xEF, 0xFE, 0xFF, 0xEE, 0x1E, 0xE1, 0xCE, 0x38, 0x07, 0x00, 0xE0, 0x1E,
  0x01, 0xC0, 0x38, 0x77, 0x07, 0xF0, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF8, 0xE3, 0x8E, 0x38, 0xE3, 0x8E, 0x38, 0xE3, 0x8E, 0x38, 0xE3,
  0x8F, 0xFF, 0xFC, 0x40, 0x0E, 0x00, 0x60, 0x07, 0x00, 0x70, 0x03, 0x80,
  0x38, 0x01, 0xC0, 0x1C, 0x00, 0xE0, 0x0E, 0x00, 0x70, 0x07, 0x00, 0x38,
  0x03, 0x80, 0x1C, 0x01, 0xC0, 0x0E, 0x00, 0xE0, 0x07, 0x00, 0x70, 0x03,
  0xFF, 0xFF, 0xC7, 0x1C, 0x71, 0xC7, 0x1C, 0x71, 0xC7, 0x1C, 0x71, 0xC7,
  0x1C, 0x7F, 0xFF, 0xFC, 0x04, 0x00, 0x60, 0x0F, 0x01, 0xF8, 0x3F, 0xC3,
  0x9E, 0x70, 0xEE, 0x07, 0x60, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xC7, 0x1C, 0x71, 0x80, 0x0F, 0xC1, 0xFF, 0x0F, 0xFC, 0x00, 0xE1, 0xFF,
  0x1F, 0xF9, 0xFF, 0xDE, 0x0E, 0xE0, 0xF7, 0xFF, 0xDF, 0xFE, 0x7E, 0xF0,
  0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x38, 0x00, 0x38, 0x00, 0x39, 0xF0,
  0x3F, 0xFC, 0x3F, 0xFE, 0x3E, 0x1E, 0x3C, 0x0F, 0x38, 0x07, 0x38, 0x07,
  0x38, 0x07, 0x3E, 0x1E, 0xFF, 0xFE, 0xFF, 0xFC, 0xFB, 0xF0, 0x0F, 0xEC,
  0x7F, 0xF7, 0xFF, 0xDE, 0x0F, 0xF0, 0x1F, 0x80, 0x7E, 0x00, 0x38, 0x00,
  0xF0, 0x39, 0xFF, 0xE3, 0xFF, 0x07, 0xF0, 0x00, 0x7C, 0x00, 0xF8, 0x01,
  0xF0, 0x00, 0xE0, 0x01, 0xC1, 0xFB, 0x8F, 0xFF, 0x3F, 0xFE, 0x78, 0x7D,
  0xE0, 0x7B, 0x80, 0x77, 0x00, 0xEE, 0x01, 0xCF, 0x0F, 0x9F, 0xFF, 0x9F,
  0xFF, 0x0F, 0xDE, 0x0F, 0xC0, 0xFF, 0x87, 0xFF, 0x1E, 0x1E, 0xE0, 0x1B,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x01, 0xFF, 0xF3, 0xFF, 0x83, 0xF8,
  0x07, 0xF0, 0x7F, 0xC7, 0xFE, 0x38, 0x01, 0xC0, 0x3F, 0xF1, 0xFF, 0x8F,
  0xFC, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x03, 0xFF,
  0x9F, 0xFC, 0xFF, 0xE0, 0x0F, 0xBC, 0xFF, 0xF7, 0xFF, 0xFC, 0x3E, 0xE0,
  0x3B, 0x80, 0xEE, 0x03, 0xBC, 0x1E, 0x78, 0xF9, 0xFF, 0xE3, 0xFF, 0x83,
  0xEE, 0x00, 0x38, 0x01, 0xE0, 0xFF, 0x83, 0xFC, 0x0F, 0xE0, 0xF8, 0x01,
  0xF0, 0x03, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x07, 0x3C, 0x0F, 0xFC, 0x1F,
  0xFC, 0x3C, 0x38, 0x70, 0x70, 0xE0, 0xE1, 0xC1, 0xC3, 0x83, 0x87, 0x07,
  0x3F, 0x1F, 0xFE, 0x3F, 0xFC, 0x7E, 0x0E, 0x01, 0xC0, 0x38, 0x00, 0x00,
  0x00, 0xFC, 0x1F, 0x83, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0,
  0x1C, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x07, 0x01, 0xC0, 0x70, 0x00, 0x00,
  0x3F, 0xFF, 0xFF, 0xFF, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x01, 0xC0, 0x70,
  0x1C, 0x07, 0x01, 0xC0, 0x70, 0x3F, 0xFE, 0xFF, 0xBF, 0x80, 0xF8, 0x01,
  0xF0, 0x03, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x07, 0x3F, 0x0E, 0x7E, 0x1C,
  0xFC, 0x3B, 0xC0, 0x7F, 0x00, 0xFC, 0x01, 0xFC, 0x03, 0xBC, 0x07, 0x3C,
  0x3E, 0x3F, 0xFC, 0x7F, 0xF8, 0xFE, 0x7E, 0x0F, 0xC1, 0xF8, 0x07, 0x00,
  0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0,
  0x1C, 0x3F, 0xFF, 0xFF, 0xFF, 0xE0, 0x7F, 0x9C, 0x3F, 0xFF, 0x1F, 0xFF,
  0xC7, 0x1C, 0xE3, 0x8E, 0x71, 0xC7, 0x38, 0xE3, 0x9C, 0x71, 0xCE, 0x38,
  0xE7, 0x7E, 0x7B, 0xFF, 0x3D, 0xFF, 0x9E, 0xF0, 0x7B, 0xC1, 0xFF, 0xC7,
  0xFF, 0x8F, 0x1E, 0x38, 0x38, 0xE0, 0xE3, 0x83, 0x8E, 0x0E, 0x38, 0x3B,
  0xF3, 0xFF, 0xCF, 0xFF, 0x3F, 0x0F, 0xC0, 0xFF, 0xC7, 0xFF, 0x9E, 0x1E,
  0xE0, 0x3F, 0x80, 0x7E, 0x01, 0xFC, 0x0F, 0x78, 0x79, 0xFF, 0xE3, 0xFF,
  0x03, 0xF0, 0x79, 0xF0, 0x7F, 0xFC, 0x7F, 0xFE, 0x3E, 0x1E, 0x38, 0x07,
  0x38, 0x07, 0x38, 0x07, 0x38, 0x0F, 0x3E, 0x1E, 0x3F, 0xFE, 0x3F, 0xFC,
  0x39, 0xF0, 0x38, 0x00, 0x38, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,
  0x0F, 0xBC, 0x7F, 0xF9, 0xFF, 0xF7, 0x83, 0xCE, 0x03, 0x9C, 0x07, 0x38,
  0x0E, 0x70, 0x3C, 0xF0, 0xF8, 0xFF, 0xF0, 0xFF, 0xE0, 0x79, 0xC0, 0x03,
  0x80, 0x07, 0x00, 0x7F, 0x80, 0xFF, 0x01, 0xFE, 0x7C, 0xF9, 0xF7, 0xF7,
  0xFF, 0xC7, 0xE0, 0x1E, 0x00, 0x70, 0x01, 0xC0, 0x07, 0x00, 0x1C, 0x03,
  0xFF, 0x8F, 0xFE, 0x3F, 0xF8, 0x1F, 0xE7, 0xFE, 0x7F, 0xEF, 0x0E, 0xF0,
  0x67, 0xF0, 0x7F, 0xE0, 0x7F, 0xC0, 0x7F, 0xFF, 0xFF, 0xEF, 0xF8, 0x38,
  0x01, 0xC0, 0x0E, 0x00, 0x70, 0x0F, 0xFE, 0x7F, 0xF3, 0xFF, 0x87, 0x00,
  0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x83, 0x9F, 0xFC, 0x7F, 0xC1,
  0xF8, 0xF8, 0xFB, 0xE3, 0xEF, 0x8F, 0x8E, 0x0E, 0x38, 0x38, 0xE0, 0xE3,
  0x83, 0x8E, 0x0E, 0x3C, 0x78, 0xFF, 0xF1, 0xFF, 0xC3, 0xEF, 0xFE, 0x7F,
  0xFE, 0x7F, 0xFE, 0x7F, 0x38, 0x1C, 0x1C, 0x38, 0x1C, 0x38, 0x0E, 0x70,
  0x0E, 0x70, 0x07, 0xE0, 0x07, 0xE0, 0x03, 0xC0, 0x03, 0xC0, 0xFC, 0x3F,
  0xFC, 0x3F, 0xFC, 0x3F, 0x31, 0xCE, 0x3B, 0xCE, 0x3B, 0xDC, 0x3B, 0xFC,
  0x1F, 0xFC, 0x1F, 0x7C, 0x1E, 0x78, 0x1E, 0x78, 0x0C, 0x38, 0xFC, 0xFF,
  0xF3, 0xF7, 0x87, 0x8F, 0x3C, 0x1F, 0xE0, 0x1E, 0x00, 0xFC, 0x07, 0xF8,
  0x3C, 0xF3, 0xE1, 0xFF, 0xCF, 0xFF, 0x3F, 0xFC, 0x7F, 0xF8, 0xFF, 0xF1,
  0xF9, 0xC1, 0xC3, 0x83, 0x83, 0x8E, 0x07, 0x1C, 0x07, 0x70, 0x0E, 0xE0,
  0x0F, 0x80, 0x1E, 0x00, 0x1C, 0x00, 0x70, 0x00, 0xE0, 0x3F, 0xE0, 0x7F,
  0xC0, 0xFF, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xEE, 0x78, 0x1E, 0x07,
  0x81, 0xE0, 0x70, 0x7F, 0xFF, 0xFF, 0xFF, 0xF0, 0x0E, 0x3C, 0xF9, 0xC3,
  0x87, 0x0E, 0x1C, 0x39, 0xE3, 0x87, 0x83, 0x87, 0x0E, 0x1C, 0x38, 0x70,
  0xF8, 0xF0, 0xE0, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xE1,
  0xE3, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x3C, 0x38, 0xF3, 0x87, 0x0E,
  0x1C, 0x38, 0x73, 0xE7, 0x8E, 0x00, 0x38, 0x03, 0xF1, 0xBF, 0xDF, 0xCF,
  0xE0, 0x3E, 0x00, 0xE0 };

const GFXglyph FreeMonoBold14pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  16,    0,    0 },   // 0x20 ' '
  {     1,   4,  17,  16,    6,  -16 },   // 0x21 '!'
  {    10,   8,   8,  16,    4,  -15 },   // 0x22 '"'
  {    18,  12,  18,  16,    2,  -16 },   // 0x23 '#'
  {    45,  11,  21,  16,    3,  -17 },   // 0x24 '$'
  {    74,  12,  17,  16,    2,  -16 },   // 0x25 '%'
  {   100,  12,  15,  16,    2,  -14 },   // 0x26 '&'
  {   123,   3,   8,  16,    6,  -15 },   // 0x27 '''
  {   126,   6,  21,  16,    7,  -16 },   // 0x28 '('
  {   142,   6,  21,  16,    3,  -16 },   // 0x29 ')'
  {   158,  13,  11,  16,    2,  -16 },   // 0x2A '*'
  {   176,  13,  14,  16,    2,  -13 },   // 0x2B '+'
  {   199,   5,   8,  16,    4,   -3 },   // 0x2C ','
  {   204,  14,   3,  16,    1,   -8 },   // 0x2D '-'
  {   210,   4,   4,  16,    6,   -3 },   // 0x2E '.'
  {   212,  12,  22,  16,    2,  -18 },   // 0x2F '/'
  {   245,  12,  18,  16,    2,  -17 },   // 0x30 '0'
  {   272,  11,  17,  16,    3,  -16 },   // 0x31 '1'
  {   296,  12,  18,  16,    2,  -17 },   // 0x32 '2'
  {   323,  12,  18,  16,    3,  -17 },   // 0x33 '3'
  {   350,  12,  17,  16,    2,  -16 },   // 0x34 '4'
  {   376,  13,  17,  16,    2,  -16 },   // 0x35 '5'
  {   404,  12,  17,  16,    3,  -16 },   // 0x36 '6'
  {   430,  12,  17,  16,    2,  -16 },   // 0x37 '7'
  {   456,  12,  18,  16,    2,  -17 },   // 0x38 '8'
  {   483,  12,  18,  16,    3,  -17 },   // 0x39 '9'
  {   510,   4,  12,  16,    6,  -11 },   // 0x3A ':'
  {   516,   5,  16,  16,    4,  -11 },   // 0x3B ';'
  {   526,  14,  13,  16,    1,  -13 },   // 0x3C '<'
  {   549,  14,   8,  16,    1,  -11 },   // 0x3D '='
  {   563,  13,  13,  16,    2,  -13 },   // 0x3E '>'
  {   585,  11,  16,  16,    3,  -15 },   // 0x3F '?'
  {   607,  12,  21,  16,    2,  -16 },   // 0x40 '@'
  {   639,  17,  16,  16,   -1,  -15 },   // 0x41 'A'
  {   673,  14,  16,  16,    2,  -15 },   // 0x42 'B'
  {   701,  14,  16,  16,    1,  -15 },   // 0x43 'C'
  {   729,  14,  16,  16,    1,  -15 },   // 0x44 'D'
  {   757,  13,  16,  16,    2,  -15 },   // 0x45 'E'
  {   783,  13,  16,  16,    2,  -15 },   // 0x46 'F'
  {   809,  15,  16,  16,    1,  -15 },   // 0x47 'G'
  {   839,  15,  16,  16,    1,  -15 },   // 0x48 'H'
  {   869,  11,  16,  16,    3,  -15 },   // 0x49 'I'
  {   891,  16,  16,  16,    1,  -15 },   // 0x4A 'J'
  {   923,  14,  16,  16,    2,  -15 },   // 0x4B 'K'
  {   951,  15,  16,  16,    1,  -15 },   // 0x4C 'L'
  {   981,  18,  16,  16,   -1,  -15 },   // 0x4D 'M'
  {  1017,  17,  16,  16,    0,  -15 },   // 0x4E 'N'
  {  1051,  15,  16,  16,    1,  -15 },   // 0x4F 'O'
  {  1081,  12,  16,  16,    2,  -15 },   // 0x50 'P'
  {  1105,  15,  20,  16,    1,  -15 },   // 0x51 'Q'
  {  1143,  16,  16,  16,    0,  -15 },   // 0x52 'R'
  {  1175,  14,  16,  16,    1,  -15 },   // 0x53 'S'
  {  1203,  14,  16,  16,    1,  -15 },   // 0x54 'T'
  {  1231,  17,  16,  16,    0,  -15 },   // 0x55 'U'
  {  1265,  18,  16,  16,   -1,  -15 },   // 0x56 'V'
  {  1301,  16,  16,  16,    0,  -15 },   // 0x57 'W'
  {  1333,  14,  16,  16,    1,  -15 },   // 0x58 'X'
  {  1361,  15,  16,  16,    1,  -15 },   // 0x59 'Y'
  {  1391,  12,  16,  16,    3,  -15 },   // 0x5A 'Z'
  {  1415,   6,  21,  16,    7,  -16 },   // 0x5B '['
  {  1431,  12,  22,  16,    2,  -18 },   // 0x5C '\'
  {  1464,   6,  21,  16,    3,  -16 },   // 0x5D ']'
  {  1480,  12,   9,  16,    2,  -17 },   // 0x5E '^'
  {  1494,  16,   3,  16,    0,    3 },   // 0x5F '_'
  {  1500,   5,   5,  16,    4,  -17 },   // 0x60 '`'
  {  1504,  13,  12,  16,    1,  -11 },   // 0x61 'a'
  {  1524,  16,  17,  16,    0,  -16 },   // 0x62 'b'
  {  1558,  14,  12,  16,    1,  -11 },   // 0x63 'c'
  {  1579,  15,  17,  16,    1,  -16 },   // 0x64 'd'
  {  1611,  14,  12,  16,    1,  -11 },   // 0x65 'e'
  {  1632,  13,  17,  16,    2,  -16 },   // 0x66 'f'
  {  1660,  14,  17,  16,    1,  -11 },   // 0x67 'g'
  {  1690,  15,  17,  16,    1,  -16 },   // 0x68 'h'
  {  1722,  11,  17,  16,    3,  -16 },   // 0x69 'i'
  {  1746,  10,  22,  16,    3,  -16 },   // 0x6A 'j'
  {  1774,  15,  17,  16,    1,  -16 },   // 0x6B 'k'
  {  1806,  11,  17,  16,    3,  -16 },   // 0x6C 'l'
  {  1830,  17,  12,  16,   -1,  -11 },   // 0x6D 'm'
  {  1856,  14,  12,  16,    1,  -11 },   // 0x6E 'n'
  {  1877,  14,  12,  16,    1,  -11 },   // 0x6F 'o'
  {  1898,  16,  17,  16,    0,  -11 },   // 0x70 'p'
  {  1932,  15,  17,  16,    1,  -11 },   // 0x71 'q'
  {  1964,  14,  12,  16,    2,  -11 },   // 0x72 'r'
  {  1985,  12,  12,  16,    2,  -11 },   // 0x73 's'
  {  2003,  13,  16,  16,    1,  -15 },   // 0x74 't'
  {  2029,  14,  12,  16,    1,  -11 },   // 0x75 'u'
  {  2050,  16,  12,  16,    0,  -11 },   // 0x76 'v'
  {  2074,  16,  12,  16,    0,  -11 },   // 0x77 'w'
  {  2098,  14,  12,  16,    1,  -11 },   // 0x78 'x'
  {  2119,  15,  17,  16,    1,  -11 },   // 0x79 'y'
  {  2151,  11,  12,  16,    3,  -11 },   // 0x7A 'z'
  {  2168,   7,  21,  16,    5,  -16 },   // 0x7B '{'
  {  2187,   3,  21,  16,    7,  -16 },   // 0x7C '|'
  {  2195,   7,  21,  16,    5,  -16 },   // 0x7D '}'
  {  2214,  13,   6,  16,    2,  -10 } }; // 0x7E '~'

const GFXfont FreeMonoBold14pt7b PROGMEM = {
  (uint8_t  *)FreeMonoBold14pt7bBitmaps,
  (GFXglyph *)FreeMonoBold14pt7bGlyphs,
  0x20, 0x7E, 27 };

// Approx. 2896 bytes

#endif // FreeMonoBold14pt7b_H
