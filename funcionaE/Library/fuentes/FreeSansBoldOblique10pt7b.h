#ifndef FreeSansBoldOblique10pt7b_H
#define FreeSansBoldOblique10pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeSansBoldOblique10pt7bBitmaps[] PROGMEM = {
  0x00, 0x00, 0x71, 0xCE, 0x38, 0xE3, 0x8C, 0x30, 0xC2, 0x00, 0x73, 0x8E,
  0x00, 0xE7, 0xE7, 0xE7, 0xC6, 0x84, 0x06, 0x70, 0x66, 0x3F, 0xF3, 0xFF,
  0x7F, 0xF1, 0x98, 0x39, 0x8F, 0xFC, 0xFF, 0xCF, 0xFC, 0x66, 0x0E, 0x60,
  0xCC, 0x00, 0x01, 0x00, 0xFE, 0x1F, 0xF3, 0xB7, 0x3A, 0x73, 0xA0, 0x3E,
  0x01, 0xF8, 0x0F, 0xC0, 0x5E, 0x04, 0xEE, 0x4E, 0xED, 0xCF, 0xFC, 0x7F,
  0x00, 0x80, 0x08, 0x01, 0x80, 0x3C, 0x0C, 0xFC, 0x33, 0xF8, 0x46, 0x31,
  0x0C, 0x66, 0x1F, 0xD8, 0x3F, 0x20, 0x3C, 0x80, 0x03, 0x3C, 0x04, 0xFC,
  0x13, 0xF8, 0x46, 0x31, 0x8F, 0xE2, 0x1F, 0x88, 0x1E, 0x00, 0x07, 0xC0,
  0x7F, 0x07, 0xF8, 0x39, 0xC1, 0xCC, 0x0F, 0xC0, 0x38, 0x07, 0xE3, 0xE3,
  0xF7, 0x0F, 0x38, 0xF9, 0xFF, 0xC7, 0xEF, 0x1E, 0x38, 0xFF, 0xE8, 0x03,
  0x06, 0x0C, 0x1C, 0x18, 0x38, 0x70, 0x70, 0x60, 0xE0, 0xE0, 0xE0, 0xE0,
  0xE0, 0xE0, 0x60, 0x70, 0x70, 0x30, 0x0C, 0x0E, 0x0E, 0x06, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x07, 0x06, 0x0E, 0x0E, 0x1C, 0x18, 0x38, 0x30, 0x60,
  0xC0, 0x11, 0x2F, 0x79, 0x85, 0x8A, 0x00, 0x06, 0x03, 0x80, 0xC3, 0xFF,
  0xFF, 0xFF, 0xF1, 0xC0, 0x60, 0x18, 0x00, 0x77, 0x62, 0x6C, 0xFF, 0xFF,
  0xC0, 0xFF, 0x80, 0x01, 0x01, 0x80, 0x80, 0xC0, 0x40, 0x60, 0x20, 0x30,
  0x10, 0x18, 0x08, 0x0C, 0x04, 0x06, 0x00, 0x0F, 0x07, 0xE3, 0xFD, 0xE7,
  0x71, 0xDC, 0x7E, 0x1F, 0x87, 0xE3, 0xB8, 0xEE, 0x7B, 0xFC, 0x7E, 0x0F,
  0x00, 0x06, 0x0E, 0x7E, 0x7E, 0x0E, 0x0C, 0x1C, 0x1C, 0x1C, 0x1C, 0x18,
  0x38, 0x38, 0x38, 0x07, 0xC0, 0xFE, 0x1F, 0xF3, 0xC7, 0x38, 0x70, 0x07,
  0x00, 0xE0, 0x1C, 0x07, 0x01, 0xC0, 0x38, 0x07, 0xFC, 0x7F, 0xCF, 0xFC,
  0x0F, 0x87, 0xF8, 0xFF, 0xB8, 0x70, 0x1E, 0x0F, 0x83, 0xE0, 0x7E, 0x01,
  0xC0, 0x3B, 0x8F, 0x7F, 0xC7, 0xF0, 0x7C, 0x00, 0x01, 0xE0, 0x7C, 0x0F,
  0x03, 0xE0, 0xDC, 0x33, 0x8C, 0x71, 0x0C, 0x7F, 0xFF, 0xFB, 0xFF, 0x01,
  0xC0, 0x70, 0x0E, 0x00, 0x0F, 0xF0, 0xFF, 0x1F, 0xF1, 0x80, 0x18, 0x03,
  0xF8, 0x3F, 0xC3, 0xFE, 0x70, 0xE0, 0x0E, 0x00, 0xEE, 0x1C, 0xFF, 0xC7,
  0xF8, 0x3E, 0x00, 0x07, 0x83, 0xF8, 0xFF, 0x9C, 0x77, 0x70, 0xFF, 0x3F,
  0xF7, 0x8E, 0xE1, 0xDC, 0x3B, 0x8E, 0x7F, 0xC7, 0xF0, 0x7C, 0x00, 0xFF,
  0xDF, 0xFB, 0xFF, 0x00, 0xC0, 0x30, 0x0E, 0x03, 0x80, 0xE0, 0x18, 0x07,
  0x01, 0xC0, 0x38, 0x06, 0x01, 0xC0, 0x38, 0x00, 0x07, 0xC1, 0xFE, 0x3F,
  0xF3, 0x87, 0x3F, 0xE1, 0xF8, 0x3F, 0xC7, 0x0E, 0xE0, 0xEE, 0x0E, 0xF1,
  0xCF, 0xFC, 0x7F, 0x83, 0xE0, 0x07, 0xC1, 0xFE, 0x3F, 0xF3, 0x87, 0x70,
  0x77, 0x07, 0x70, 0xF7, 0xFE, 0x3F, 0xE1, 0xFE, 0xE1, 0xCF, 0xF8, 0x7F,
  0x03, 0xE0, 0x39, 0xCE, 0x00, 0x00, 0x1C, 0xE7, 0x00, 0x39, 0xCE, 0x00,
  0x00, 0x0E, 0x73, 0x08, 0xCC, 0x00, 0x00, 0x20, 0x38, 0x3F, 0x3F, 0x8F,
  0x81, 0xE0, 0x3F, 0x81, 0xFC, 0x07, 0x80, 0x30, 0x3F, 0xEF, 0xFD, 0xFF,
  0x80, 0x00, 0x00, 0xFF, 0xBF, 0xF7, 0xFE, 0x30, 0x07, 0x80, 0xFE, 0x07,
  0xF0, 0x1E, 0x07, 0xC7, 0xF3, 0xF0, 0x70, 0x10, 0x00, 0x1F, 0x1F, 0xE7,
  0xFF, 0x87, 0xE1, 0xC0, 0x70, 0x38, 0x1C, 0x1E, 0x0F, 0x03, 0x80, 0x00,
  0x38, 0x0E, 0x07, 0x00, 0x00, 0x7F, 0x00, 0x1F, 0xFC, 0x07, 0x81, 0xE0,
  0xE0, 0x0E, 0x1C, 0x00, 0x73, 0x07, 0xB3, 0x70, 0xCE, 0x36, 0x10, 0xE3,
  0xC3, 0x0C, 0x3C, 0x60, 0xC6, 0xC6, 0x18, 0xEC, 0x63, 0x9C, 0xC7, 0xFF,
  0x8E, 0x38, 0xE0, 0x70, 0x00, 0x07, 0xC0, 0x80, 0x1F, 0xF8, 0x00, 0x7F,
  0x00, 0x00, 0xF0, 0x03, 0xC0, 0x1F, 0x00, 0x7E, 0x03, 0xB8, 0x0E, 0xE0,
  0x73, 0x81, 0x8E, 0x0E, 0x38, 0x7F, 0xE1, 0xFF, 0x8F, 0xFF, 0x38, 0x1D,
  0xC0, 0x77, 0x01, 0xC0, 0x1F, 0xE0, 0xFF, 0x8F, 0xFE, 0x70, 0x73, 0x83,
  0x9C, 0x39, 0xFF, 0xCF, 0xFC, 0x7F, 0xF3, 0x83, 0x9C, 0x1D, 0xC1, 0xEF,
  0xFE, 0x7F, 0xE3, 0xFE, 0x00, 0x03, 0xE0, 0x3F, 0xE1, 0xFF, 0xCF, 0x0F,
  0x78, 0x1D, 0xC0, 0x0F, 0x00, 0x38, 0x00, 0xE0, 0x03, 0x80, 0x0E, 0x03,
  0xBC, 0x3C, 0x7F, 0xF1, 0xFF, 0x81, 0xF8, 0x00, 0x1F, 0xF0, 0xFF, 0xE3,
  0xFF, 0xCE, 0x0F, 0x38, 0x1C, 0xE0, 0x77, 0x01, 0xDC, 0x07, 0x70, 0x3D,
  0xC0, 0xE6, 0x07, 0xB8, 0x3C, 0xFF, 0xE3, 0xFF, 0x0F, 0xF0, 0x00, 0x1F,
  0xF9, 0xFF, 0xCF, 0xFE, 0x70, 0x03, 0x80, 0x1C, 0x01, 0xFF, 0x8F, 0xFC,
  0x7F, 0xE3, 0x80, 0x1C, 0x01, 0xC0, 0x0F, 0xFE, 0x7F, 0xF3, 0xFF, 0x80,
  0x0F, 0xFC, 0x7F, 0xF1, 0xFF, 0x87, 0x00, 0x1C, 0x00, 0x70, 0x03, 0xFF,
  0x0F, 0xFC, 0x3F, 0xE0, 0xE0, 0x07, 0x00, 0x1C, 0x00, 0x70, 0x01, 0xC0,
  0x07, 0x00, 0x00, 0x03, 0xE0, 0x3F, 0xE1, 0xFF, 0xCF, 0x07, 0x38, 0x01,
  0xC0, 0x07, 0x00, 0x38, 0x3F, 0xE1, 0xFB, 0x87, 0xEE, 0x03, 0xBC, 0x1E,
  0x7F, 0xF9, 0xFE, 0xC1, 0xF3, 0x00, 0x1C, 0x0E, 0x38, 0x1C, 0x70, 0x38,
  0xE0, 0x71, 0xC1, 0xC7, 0xFF, 0x8F, 0xFF, 0x1F, 0xFE, 0x38, 0x38, 0xE0,
  0x71, 0xC0, 0xE3, 0x81, 0xC7, 0x03, 0x8E, 0x0E, 0x38, 0x1C, 0x00, 0x1C,
  0x71, 0xCE, 0x38, 0xE3, 0x8E, 0x71, 0xC7, 0x1C, 0x73, 0x8E, 0x00, 0x00,
  0x70, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x01, 0xC0, 0x1C, 0x01,
  0xCE, 0x1C, 0xE1, 0xCE, 0x38, 0xFF, 0x87, 0xF0, 0x3E, 0x00, 0x1C, 0x0E,
  0x1C, 0x1C, 0x1C, 0x38, 0x1C, 0x70, 0x1D, 0xE0, 0x3B, 0xC0, 0x3F, 0x80,
  0x3F, 0x80, 0x3F, 0xC0, 0x39, 0xC0, 0x71, 0xE0, 0x70, 0xE0, 0x70, 0xF0,
  0x70, 0x78, 0x70, 0x78, 0x1C, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x07,
  0x01, 0xC0, 0x70, 0x1C, 0x07, 0x03, 0x80, 0xFF, 0xFF, 0xFF, 0xFC, 0x0F,
  0x07, 0xC7, 0xC3, 0xE1, 0xF0, 0xF8, 0x7C, 0x3E, 0x1F, 0x1B, 0x8E, 0xC6,
  0xC3, 0xB3, 0xF0, 0xEC, 0xDC, 0x3B, 0x77, 0x0C, 0xD9, 0xC7, 0x3E, 0x61,
  0xCF, 0x38, 0x73, 0xCE, 0x1C, 0xF3, 0x8E, 0x38, 0xE0, 0x1E, 0x0E, 0x3C,
  0x1C, 0x78, 0x38, 0xF8, 0x71, 0xF0, 0xC7, 0x63, 0x8E, 0xE7, 0x1C, 0xCE,
  0x39, 0xDC, 0x63, 0xB1, 0xC3, 0xE3, 0x87, 0xC7, 0x0F, 0x8C, 0x0F, 0x38,
  0x1C, 0x00, 0x03, 0xF0, 0x1F, 0xF0, 0x7F, 0xF1, 0xE0, 0xF7, 0x80, 0xEE,
  0x01, 0xFC, 0x03, 0xF0, 0x07, 0xE0, 0x1F, 0xC0, 0x3B, 0x80, 0xF7, 0x83,
  0xC7, 0xFF, 0x07, 0xFC, 0x07, 0xE0, 0x00, 0x1F, 0xE1, 0xFF, 0x8F, 0xFE,
  0x70, 0x73, 0x83, 0x9C, 0x1D, 0xC1, 0xCF, 0xFE, 0x7F, 0xE3, 0xFE, 0x38,
  0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x00, 0x03, 0xF0, 0x1F, 0xF0,
  0x7F, 0xF1, 0xE0, 0xF7, 0x80, 0xEE, 0x01, 0xF8, 0x03, 0xF0, 0x07, 0xE0,
  0x1D, 0xC1, 0xBB, 0x87, 0xE7, 0x87, 0xC7, 0xFF, 0x07, 0xFF, 0x07, 0xE6,
  0x00, 0x1F, 0xF1, 0xFF, 0xCF, 0xFE, 0x70, 0x73, 0x83, 0x9C, 0x39, 0xFF,
  0x8F, 0xF8, 0x7F, 0xF3, 0x83, 0x9C, 0x1D, 0xC0, 0xEE, 0x0E, 0x70, 0x73,
  0x83, 0xC0, 0x07, 0xE0, 0x7F, 0x87, 0xFE, 0x78, 0x73, 0x83, 0x9C, 0x00,
  0xF8, 0x03, 0xFC, 0x0F, 0xF0, 0x03, 0xB8, 0x1D, 0xE1, 0xEF, 0xFE, 0x3F,
  0xE0, 0x7E, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xE0, 0x0E, 0x00, 0xE0,
  0x0E, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x1C, 0x03, 0x80, 0x38, 0x03, 0x80,
  0x38, 0x00, 0x38, 0x1C, 0xE0, 0x73, 0x81, 0xDC, 0x0E, 0x70, 0x39, 0xC0,
  0xE7, 0x03, 0x9C, 0x0E, 0xE0, 0x73, 0x81, 0xCE, 0x07, 0x3C, 0x3C, 0xFF,
  0xE1, 0xFF, 0x03, 0xF0, 0x00, 0xE0, 0x7E, 0x0E, 0xE0, 0xEE, 0x1C, 0xE1,
  0xCE, 0x38, 0xE3, 0x86, 0x70, 0x66, 0x06, 0xE0, 0x6C, 0x07, 0xC0, 0x78,
  0x07, 0x80, 0x70, 0x00, 0xE0, 0xE1, 0xDC, 0x3C, 0x3B, 0x87, 0x86, 0x71,
  0xF1, 0xCE, 0x36, 0x39, 0xCE, 0xCE, 0x39, 0xD9, 0xC7, 0x33, 0x30, 0x6E,
  0x6E, 0x0D, 0x8D, 0x81, 0xF1, 0xF0, 0x3C, 0x3C, 0x07, 0x87, 0x80, 0xE0,
  0xE0, 0x1C, 0x1C, 0x00, 0x0E, 0x0F, 0x0F, 0x1E, 0x07, 0x1C, 0x07, 0x38,
  0x07, 0xF0, 0x03, 0xF0, 0x03, 0xE0, 0x01, 0xC0, 0x03, 0xC0, 0x07, 0xE0,
  0x0E, 0xE0, 0x1E, 0xF0, 0x3C, 0x70, 0x38, 0x70, 0x70, 0x78, 0xE0, 0xFE,
  0x0E, 0xF1, 0xC7, 0x3C, 0x73, 0x87, 0x70, 0x3F, 0x03, 0xE0, 0x3C, 0x01,
  0xC0, 0x38, 0x03, 0x80, 0x38, 0x03, 0x80, 0x70, 0x00, 0x1F, 0xFC, 0xFF,
  0xE3, 0xFF, 0x80, 0x1E, 0x00, 0xF0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E,
  0x00, 0x70, 0x03, 0x80, 0x1C, 0x00, 0xFF, 0xE3, 0xFF, 0x8F, 0xFE, 0x00,
  0x0F, 0x87, 0xC3, 0xE3, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x3C, 0x1C, 0x0E,
  0x07, 0x03, 0x81, 0xC1, 0xC0, 0xE0, 0x7C, 0x3E, 0x1F, 0x00, 0x13, 0x6C,
  0x92, 0x49, 0x36, 0xDB, 0x1F, 0x0F, 0x87, 0xC0, 0xE0, 0x70, 0x70, 0x38,
  0x1C, 0x0E, 0x07, 0x07, 0x83, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0xF8, 0x7C,
  0x3E, 0x00, 0x07, 0x01, 0xC0, 0xF0, 0x7E, 0x19, 0x8C, 0x63, 0x19, 0x86,
  0xE1, 0xC0, 0xFF, 0xFF, 0xFF, 0xCC, 0x80, 0x0F, 0x83, 0xFC, 0xFF, 0x98,
  0x70, 0x3C, 0x7F, 0xBC, 0x77, 0x1E, 0xFF, 0x9F, 0xF1, 0xEE, 0x00, 0x1C,
  0x01, 0xC0, 0x1C, 0x01, 0x80, 0x3B, 0xC3, 0xFE, 0x3F, 0xF3, 0xC7, 0x38,
  0x77, 0x07, 0x70, 0xF7, 0x1E, 0x7F, 0xEF, 0xFC, 0xEF, 0x00, 0x0F, 0x0F,
  0xE7, 0xFD, 0xC7, 0xE0, 0x38, 0x0E, 0x03, 0x8E, 0xFF, 0x9F, 0xC3, 0xC0,
  0x00, 0x70, 0x07, 0x00, 0x60, 0x0E, 0x1E, 0xE3, 0xFE, 0x7F, 0xE7, 0x8C,
  0xF0, 0xCE, 0x0C, 0xE1, 0xCE, 0x3C, 0xFF, 0x87, 0xF8, 0x3B, 0x80, 0x0F,
  0x87, 0xF9, 0xFF, 0xB8, 0x7F, 0xFF, 0xFF, 0xF8, 0x07, 0x0E, 0xFF, 0x8F,
  0xE0, 0xF8, 0x00, 0x0E, 0x3C, 0xF9, 0xCF, 0xDF, 0x8C, 0x38, 0x70, 0xE1,
  0xC3, 0x0E, 0x1C, 0x38, 0x00, 0x07, 0x71, 0xFF, 0x3F, 0xF3, 0xC6, 0x78,
  0x67, 0x06, 0x70, 0xE7, 0x1C, 0x7F, 0xC3, 0xFC, 0x1D, 0xC0, 0x1C, 0xE1,
  0x8E, 0x38, 0xFF, 0x03, 0xE0, 0x1C, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x19,
  0xE3, 0xFF, 0x3F, 0xF3, 0x87, 0x38, 0x77, 0x07, 0x70, 0x67, 0x0E, 0x70,
  0xE6, 0x0E, 0xE0, 0xC0, 0x1C, 0x71, 0x80, 0x38, 0xE3, 0x8C, 0x71, 0xC7,
  0x1C, 0x63, 0x8E, 0x00, 0x07, 0x07, 0x07, 0x00, 0x06, 0x0E, 0x0E, 0x0E,
  0x0C, 0x1C, 0x1C, 0x1C, 0x1C, 0x18, 0x38, 0x38, 0x38, 0xF8, 0xF0, 0xE0,
  0x1C, 0x01, 0xC0, 0x1C, 0x01, 0x80, 0x38, 0xE3, 0x9C, 0x3B, 0x83, 0xF0,
  0x3E, 0x07, 0xF0, 0x7F, 0x07, 0x38, 0x63, 0x8E, 0x38, 0xE1, 0xC0, 0x1C,
  0x71, 0x8E, 0x38, 0xE3, 0x8C, 0x71, 0xC7, 0x1C, 0x63, 0x8E, 0x00, 0x3B,
  0xCF, 0x1F, 0xEF, 0xCF, 0xFF, 0xE7, 0x1C, 0x73, 0x0E, 0x3B, 0x86, 0x1D,
  0xC7, 0x0C, 0xE3, 0x8E, 0x71, 0xC7, 0x30, 0xE3, 0xB8, 0x61, 0xC0, 0x39,
  0xE3, 0xFF, 0x3F, 0xF3, 0x87, 0x30, 0x77, 0x07, 0x70, 0x67, 0x0E, 0x70,
  0xE6, 0x0E, 0xE0, 0xC0, 0x0F, 0x87, 0xF9, 0xFF, 0xB8, 0x7F, 0x0F, 0xC1,
  0xF8, 0x7F, 0x0E, 0xFF, 0xCF, 0xF0, 0xF8, 0x00, 0x1D, 0xE0, 0xFF, 0x87,
  0xFE, 0x3C, 0x71, 0xC3, 0x9C, 0x1C, 0xE1, 0xE7, 0x1E, 0x3F, 0xF1, 0xFF,
  0x1D, 0xE0, 0xE0, 0x07, 0x00, 0x38, 0x01, 0x80, 0x1C, 0x00, 0x0F, 0x73,
  0xFF, 0x7F, 0xF7, 0x8E, 0xF0, 0xEE, 0x0E, 0xE1, 0xEE, 0x3E, 0xFF, 0xC7,
  0xFC, 0x3F, 0xC0, 0x1C, 0x01, 0xC0, 0x18, 0x03, 0x80, 0x38, 0x39, 0x9F,
  0x8F, 0xC7, 0x03, 0x83, 0x81, 0xC0, 0xE0, 0x70, 0x30, 0x38, 0x00, 0x1F,
  0x0F, 0xE7, 0xFD, 0xC7, 0x7C, 0x1F, 0xC1, 0xFB, 0x8E, 0xFF, 0x9F, 0xC3,
  0xE0, 0x38, 0xEF, 0xFF, 0x31, 0xC7, 0x1C, 0x71, 0x8F, 0x3C, 0xF0, 0x30,
  0xEE, 0x1D, 0xC3, 0xB8, 0x67, 0x1C, 0xC3, 0xB8, 0x77, 0x1E, 0xFF, 0x9F,
  0xF1, 0xEE, 0x00, 0xE1, 0xF8, 0xEE, 0x3B, 0x9C, 0xE7, 0x3B, 0x8E, 0xC1,
  0xF0, 0x78, 0x1E, 0x07, 0x00, 0xE3, 0x8F, 0xC7, 0x1B, 0x9E, 0x77, 0x3C,
  0xCE, 0xDB, 0x9D, 0xB7, 0x3B, 0x6C, 0x3C, 0xF8, 0x79, 0xE0, 0xE3, 0xC1,
  0xC7, 0x00, 0x1C, 0x78, 0xF7, 0x83, 0xB8, 0x1F, 0x80, 0x78, 0x03, 0x80,
  0x3E, 0x03, 0xF0, 0x3B, 0xC1, 0xCE, 0x1C, 0x70, 0x38, 0x73, 0x8E, 0x38,
  0xE3, 0x9C, 0x39, 0xC3, 0xB8, 0x3B, 0x81, 0xF0, 0x1F, 0x01, 0xE0, 0x1C,
  0x01, 0xC0, 0x38, 0x0F, 0x80, 0xF0, 0x0E, 0x00, 0x1F, 0xE1, 0xFE, 0x1F,
  0xE0, 0x1C, 0x03, 0x80, 0xF0, 0x1C, 0x03, 0x80, 0x7F, 0xC7, 0xFC, 0x7F,
  0x80, 0x07, 0x0F, 0x1F, 0x1C, 0x1C, 0x38, 0x38, 0x38, 0x38, 0xF0, 0xF0,
  0x70, 0x70, 0x70, 0xE0, 0xE0, 0xF0, 0xF0, 0x70, 0x18, 0xC4, 0x23, 0x18,
  0xC4, 0x23, 0x18, 0xC4, 0x23, 0x18, 0x84, 0x00, 0x0E, 0x0F, 0x0F, 0x07,
  0x07, 0x0E, 0x0E, 0x0E, 0x0F, 0x0F, 0x1C, 0x1C, 0x1C, 0x1C, 0x38, 0x38,
  0xF8, 0xF0, 0xE0, 0x78, 0x1E, 0x2C, 0xF8, 0x1C };

const GFXglyph FreeSansBoldOblique10pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   6,    0,    0 },   // 0x20 ' '
  {     1,   6,  15,   7,    2,  -14 },   // 0x21 '!'
  {    13,   8,   5,   9,    4,  -14 },   // 0x22 '"'
  {    18,  12,  13,  11,    1,  -12 },   // 0x23 '#'
  {    38,  12,  18,  11,    1,  -14 },   // 0x24 '$'
  {    65,  15,  15,  18,    3,  -14 },   // 0x25 '%'
  {    94,  13,  14,  14,    2,  -13 },   // 0x26 '&'
  {   117,   3,   5,   5,    4,  -14 },   // 0x27 '''
  {   119,   8,  19,   7,    2,  -14 },   // 0x28 '('
  {   138,   8,  19,   7,   -1,  -14 },   // 0x29 ')'
  {   157,   7,   6,   8,    3,  -14 },   // 0x2A '*'
  {   163,  10,   9,  12,    2,   -8 },   // 0x2B '+'
  {   175,   4,   6,   6,    1,   -2 },   // 0x2C ','
  {   178,   6,   3,   7,    1,   -6 },   // 0x2D '-'
  {   181,   3,   3,   6,    1,   -2 },   // 0x2E '.'
  {   183,   9,  14,   6,    0,  -13 },   // 0x2F '/'
  {   199,  10,  14,  11,    2,  -13 },   // 0x30 '0'
  {   217,   8,  14,  11,    3,  -13 },   // 0x31 '1'
  {   231,  12,  14,  11,    1,  -13 },   // 0x32 '2'
  {   252,  11,  14,  11,    1,  -13 },   // 0x33 '3'
  {   272,  11,  14,  11,    1,  -13 },   // 0x34 '4'
  {   292,  12,  15,  11,    1,  -14 },   // 0x35 '5'
  {   315,  11,  14,  11,    2,  -13 },   // 0x36 '6'
  {   335,  11,  15,  11,    3,  -14 },   // 0x37 '7'
  {   356,  12,  14,  11,    1,  -13 },   // 0x38 '8'
  {   377,  12,  14,  11,    1,  -13 },   // 0x39 '9'
  {   398,   5,  10,   7,    2,   -9 },   // 0x3A ':'
  {   405,   5,  13,   7,    2,   -9 },   // 0x3B ';'
  {   414,  11,  10,  12,    2,   -9 },   // 0x3C '<'
  {   428,  11,   8,  12,    1,   -8 },   // 0x3D '='
  {   439,  11,  10,  12,    0,   -8 },   // 0x3E '>'
  {   453,  10,  15,  12,    4,  -14 },   // 0x3F '?'
  {   472,  20,  18,  19,    1,  -14 },   // 0x40 '@'
  {   517,  14,  15,  14,    0,  -14 },   // 0x41 'A'
  {   544,  13,  15,  14,    2,  -14 },   // 0x42 'B'
  {   569,  14,  15,  14,    2,  -14 },   // 0x43 'C'
  {   596,  14,  15,  14,    2,  -14 },   // 0x44 'D'
  {   623,  13,  15,  13,    2,  -14 },   // 0x45 'E'
  {   648,  14,  15,  12,    1,  -14 },   // 0x46 'F'
  {   675,  14,  15,  16,    2,  -14 },   // 0x47 'G'
  {   702,  15,  15,  14,    1,  -14 },   // 0x48 'H'
  {   731,   6,  15,   6,    1,  -14 },   // 0x49 'I'
  {   743,  12,  15,  11,    1,  -14 },   // 0x4A 'J'
  {   766,  16,  15,  14,    1,  -14 },   // 0x4B 'K'
  {   796,  10,  15,  12,    2,  -14 },   // 0x4C 'L'
  {   815,  18,  15,  17,    1,  -14 },   // 0x4D 'M'
  {   849,  15,  15,  14,    1,  -14 },   // 0x4E 'N'
  {   878,  15,  15,  16,    2,  -14 },   // 0x4F 'O'
  {   907,  13,  15,  13,    2,  -14 },   // 0x50 'P'
  {   932,  15,  15,  16,    2,  -14 },   // 0x51 'Q'
  {   961,  13,  15,  14,    2,  -14 },   // 0x52 'R'
  {   986,  13,  15,  13,    2,  -14 },   // 0x53 'S'
  {  1011,  12,  15,  12,    3,  -14 },   // 0x54 'T'
  {  1034,  14,  15,  14,    2,  -14 },   // 0x55 'U'
  {  1061,  12,  15,  13,    4,  -14 },   // 0x56 'V'
  {  1084,  19,  15,  19,    3,  -14 },   // 0x57 'W'
  {  1120,  16,  15,  13,    0,  -14 },   // 0x58 'X'
  {  1150,  12,  15,  13,    4,  -14 },   // 0x59 'Y'
  {  1173,  14,  15,  12,    1,  -14 },   // 0x5A 'Z'
  {  1200,   9,  19,   7,    0,  -14 },   // 0x5B '['
  {  1222,   3,  16,   6,    3,  -15 },   // 0x5C '\'
  {  1228,   9,  19,   7,    0,  -14 },   // 0x5D ']'
  {  1250,  10,   9,  12,    2,  -13 },   // 0x5E '^'
  {  1262,  12,   2,  11,   -1,    3 },   // 0x5F '_'
  {  1265,   3,   3,   7,    4,  -14 },   // 0x60 '`'
  {  1267,  11,  11,  11,    1,  -10 },   // 0x61 'a'
  {  1283,  12,  15,  12,    1,  -14 },   // 0x62 'b'
  {  1306,  10,  11,  11,    2,  -10 },   // 0x63 'c'
  {  1320,  12,  15,  12,    2,  -14 },   // 0x64 'd'
  {  1343,  11,  11,  11,    1,  -10 },   // 0x65 'e'
  {  1359,   7,  15,   7,    2,  -14 },   // 0x66 'f'
  {  1373,  12,  16,  12,    1,  -10 },   // 0x67 'g'
  {  1397,  12,  15,  12,    1,  -14 },   // 0x68 'h'
  {  1420,   6,  15,   6,    1,  -14 },   // 0x69 'i'
  {  1432,   8,  20,   6,   -1,  -14 },   // 0x6A 'j'
  {  1452,  12,  15,  11,    1,  -14 },   // 0x6B 'k'
  {  1475,   6,  15,   6,    1,  -14 },   // 0x6C 'l'
  {  1487,  17,  11,  18,    1,  -10 },   // 0x6D 'm'
  {  1511,  12,  11,  12,    1,  -10 },   // 0x6E 'n'
  {  1528,  11,  11,  12,    2,  -10 },   // 0x6F 'o'
  {  1544,  13,  16,  12,    0,  -10 },   // 0x70 'p'
  {  1570,  12,  16,  12,    1,  -10 },   // 0x71 'q'
  {  1594,   9,  11,   8,    1,  -10 },   // 0x72 'r'
  {  1607,  10,  11,  11,    2,  -10 },   // 0x73 's'
  {  1621,   6,  13,   7,    2,  -12 },   // 0x74 't'
  {  1631,  11,  11,  12,    2,  -10 },   // 0x75 'u'
  {  1647,  10,  11,  11,    3,  -10 },   // 0x76 'v'
  {  1661,  15,  11,  16,    2,  -10 },   // 0x77 'w'
  {  1682,  13,  11,  11,    0,  -10 },   // 0x78 'x'
  {  1700,  12,  16,  11,    1,  -10 },   // 0x79 'y'
  {  1724,  12,  11,  10,    0,  -10 },   // 0x7A 'z'
  {  1741,   8,  19,   8,    2,  -14 },   // 0x7B '{'
  {  1760,   5,  19,   6,    1,  -14 },   // 0x7C '|'
  {  1772,   8,  19,   8,    0,  -14 },   // 0x7D '}'
  {  1791,  10,   4,  12,    2,   -6 } }; // 0x7E '~'

const GFXfont FreeSansBoldOblique10pt7b PROGMEM = {
  (uint8_t  *)FreeSansBoldOblique10pt7bBitmaps,
  (GFXglyph *)FreeSansBoldOblique10pt7bGlyphs,
  0x20, 0x7E, 24 };

// Approx. 2468 bytes

#endif // FreeSansBoldOblique10pt7b_H
