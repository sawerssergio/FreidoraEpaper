#ifndef FreeSerifItalic11pt7b_H
#define FreeSerifItalic11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeSerifItalic11pt7bBitmaps[] PROGMEM = {
  0x00, 0x0C, 0x31, 0xC6, 0x18, 0x43, 0x08, 0x21, 0x84, 0x00, 0x03, 0x0C,
  0x00, 0xCF, 0x38, 0xA2, 0x90, 0x02, 0x20, 0x22, 0x06, 0x60, 0x44, 0x0C,
  0x43, 0xFF, 0x08, 0x81, 0x98, 0x11, 0x0F, 0xFC, 0x22, 0x02, 0x20, 0x66,
  0x04, 0x40, 0x44, 0x00, 0x00, 0x80, 0xF0, 0x35, 0x0C, 0xA1, 0x94, 0x32,
  0x07, 0x80, 0x70, 0x07, 0x00, 0x70, 0x13, 0x02, 0x64, 0x4C, 0x89, 0x9A,
  0x61, 0xF8, 0x08, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x30, 0x73, 0xE0, 0x62,
  0x20, 0xC2, 0x40, 0xC2, 0x40, 0xC4, 0x80, 0xC4, 0x9E, 0x49, 0x33, 0x71,
  0x61, 0x02, 0x61, 0x04, 0xC1, 0x04, 0xC1, 0x08, 0xC2, 0x08, 0xC4, 0x10,
  0x78, 0x01, 0xC0, 0x09, 0x80, 0x66, 0x01, 0x98, 0x06, 0xC0, 0x1C, 0x00,
  0x60, 0x07, 0x9E, 0x27, 0x11, 0x0C, 0x8C, 0x32, 0x30, 0x70, 0xC1, 0x83,
  0x8F, 0x03, 0xC7, 0x80, 0xFA, 0x80, 0x00, 0x08, 0x20, 0x83, 0x04, 0x18,
  0x30, 0xE1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x20, 0x40, 0x40, 0x80, 0x00,
  0x40, 0x82, 0x08, 0x30, 0xC3, 0x0C, 0x30, 0xC7, 0x18, 0x63, 0x08, 0x42,
  0x00, 0x00, 0x18, 0x18, 0x18, 0x93, 0x74, 0x38, 0xD7, 0x93, 0x18, 0x18,
  0x04, 0x00, 0x80, 0x10, 0x02, 0x00, 0x41, 0xFF, 0xC1, 0x00, 0x20, 0x04,
  0x00, 0x80, 0x10, 0x00, 0x6C, 0xA8, 0xF8, 0xF0, 0x00, 0xC0, 0x60, 0x10,
  0x0C, 0x02, 0x01, 0x80, 0x40, 0x30, 0x18, 0x06, 0x03, 0x00, 0x80, 0x60,
  0x10, 0x0C, 0x00, 0x07, 0x06, 0x63, 0x0C, 0xC3, 0x60, 0xD8, 0x3E, 0x0F,
  0x83, 0xC1, 0xF0, 0x6C, 0x1B, 0x0C, 0xC3, 0x19, 0x83, 0xC0, 0x03, 0x0F,
  0x03, 0x02, 0x06, 0x06, 0x06, 0x04, 0x0C, 0x0C, 0x0C, 0x18, 0x18, 0x18,
  0x10, 0xFC, 0x0F, 0x04, 0x62, 0x0C, 0x03, 0x00, 0xC0, 0x60, 0x10, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0xBF, 0xC0, 0x07, 0x82, 0x30, 0x0C,
  0x03, 0x01, 0x81, 0x81, 0xF0, 0x0E, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x38, 0x8F, 0xC0, 0x00, 0x40, 0x30, 0x1C, 0x0B, 0x04, 0x82, 0x61, 0x98,
  0xC4, 0x21, 0x10, 0xCF, 0xFC, 0x08, 0x06, 0x01, 0x80, 0x60, 0x07, 0xC2,
  0x01, 0x00, 0x70, 0x1E, 0x01, 0xC0, 0x38, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x04, 0x02, 0x31, 0x0F, 0x80, 0x00, 0xE0, 0x70, 0x38, 0x0E, 0x03, 0x80,
  0x60, 0x1F, 0x83, 0x98, 0xE1, 0x98, 0x33, 0x06, 0x60, 0xCC, 0x39, 0x86,
  0x19, 0x81, 0xE0, 0x7F, 0xE0, 0x20, 0x10, 0x0C, 0x02, 0x01, 0x80, 0x40,
  0x30, 0x08, 0x04, 0x03, 0x00, 0x80, 0x60, 0x10, 0x0C, 0x00, 0x0F, 0x06,
  0x63, 0x0C, 0xC3, 0x30, 0xCE, 0x61, 0xE0, 0x38, 0x37, 0x18, 0xCC, 0x1B,
  0x06, 0xC1, 0xB0, 0x66, 0x30, 0xF8, 0x07, 0x81, 0x98, 0x61, 0x88, 0x33,
  0x06, 0x60, 0xCC, 0x19, 0x87, 0x19, 0xC1, 0xD8, 0x06, 0x01, 0x80, 0xE0,
  0x70, 0x38, 0x00, 0x33, 0x00, 0x00, 0x00, 0xCC, 0x18, 0xC0, 0x00, 0x00,
  0x00, 0x63, 0x08, 0x88, 0x00, 0x00, 0x00, 0x0C, 0x07, 0x03, 0x83, 0xC1,
  0xE0, 0x38, 0x03, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x10, 0xFF, 0xE0,
  0x00, 0x00, 0x00, 0x0F, 0xFE, 0x80, 0x0E, 0x00, 0x78, 0x00, 0xE0, 0x03,
  0x80, 0x0F, 0x00, 0x70, 0x1C, 0x07, 0x03, 0xC0, 0xF0, 0x0C, 0x00, 0x3C,
  0x46, 0x43, 0x03, 0x07, 0x06, 0x0C, 0x10, 0x20, 0x40, 0x40, 0x00, 0x00,
  0xC0, 0xC0, 0x07, 0xE0, 0x38, 0x60, 0xC0, 0x23, 0x00, 0x26, 0x1F, 0x78,
  0x66, 0x71, 0x88, 0xE6, 0x11, 0xCC, 0x63, 0x98, 0xCB, 0x33, 0x13, 0x39,
  0xC3, 0x00, 0x03, 0x82, 0x01, 0xF8, 0x00, 0x00, 0x40, 0x06, 0x00, 0x70,
  0x03, 0x80, 0x2E, 0x02, 0x30, 0x11, 0x81, 0x0C, 0x0F, 0xE0, 0x83, 0x08,
  0x1C, 0x40, 0x66, 0x03, 0x78, 0x7C, 0x1F, 0xE0, 0x31, 0x81, 0x86, 0x1C,
  0x30, 0xC1, 0x86, 0x18, 0x31, 0x83, 0xF8, 0x18, 0x60, 0xC1, 0x8E, 0x0C,
  0x60, 0x63, 0x07, 0x18, 0x73, 0xFE, 0x00, 0x03, 0xE4, 0x30, 0x71, 0x81,
  0x8C, 0x02, 0x60, 0x09, 0x80, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00,
  0x0C, 0x00, 0x30, 0x00, 0x60, 0x20, 0xC3, 0x01, 0xF0, 0x00, 0x1F, 0xF0,
  0x0C, 0x30, 0x18, 0x30, 0x70, 0x30, 0xC0, 0x61, 0x80, 0xC3, 0x01, 0x8C,
  0x03, 0x18, 0x06, 0x30, 0x18, 0xE0, 0x31, 0x80, 0xC3, 0x03, 0x06, 0x1C,
  0x3F, 0xE0, 0x00, 0x1F, 0xFE, 0x0C, 0x0C, 0x18, 0x10, 0x70, 0x20, 0xC0,
  0x01, 0x84, 0x03, 0x18, 0x0F, 0xF0, 0x18, 0x40, 0x30, 0x80, 0xE0, 0x01,
  0x80, 0x43, 0x01, 0x0E, 0x06, 0x3F, 0xFC, 0x00, 0x1F, 0xFE, 0x0C, 0x1C,
  0x18, 0x10, 0x70, 0x20, 0xC0, 0x01, 0x84, 0x03, 0x18, 0x0F, 0xF0, 0x18,
  0x40, 0x30, 0x80, 0xE0, 0x01, 0x80, 0x03, 0x00, 0x06, 0x00, 0x3F, 0x00,
  0x00, 0x03, 0xE2, 0x1C, 0x3C, 0x60, 0x39, 0x80, 0x23, 0x00, 0x4C, 0x00,
  0x18, 0x00, 0x60, 0x00, 0xC0, 0x7F, 0x80, 0x33, 0x00, 0xC6, 0x01, 0x86,
  0x03, 0x06, 0x0C, 0x07, 0xF0, 0x00, 0x1F, 0x8F, 0x83, 0x03, 0x81, 0x81,
  0x81, 0xC0, 0xC0, 0xC0, 0x60, 0x60, 0x60, 0x30, 0x30, 0x3F, 0xF8, 0x18,
  0x1C, 0x0C, 0x0C, 0x0E, 0x06, 0x06, 0x03, 0x03, 0x03, 0x01, 0x81, 0x83,
  0xE3, 0xF0, 0x1F, 0x83, 0x01, 0x81, 0xC0, 0xC0, 0x60, 0x30, 0x30, 0x18,
  0x0C, 0x0E, 0x06, 0x03, 0x01, 0x83, 0xE0, 0x07, 0xE0, 0x38, 0x06, 0x00,
  0xC0, 0x38, 0x06, 0x00, 0xC0, 0x18, 0x06, 0x00, 0xC0, 0x18, 0x07, 0x0C,
  0xC1, 0x98, 0x1C, 0x00, 0x1F, 0x9F, 0x06, 0x0C, 0x06, 0x18, 0x0E, 0x30,
  0x0C, 0x40, 0x0C, 0x80, 0x0F, 0x00, 0x1B, 0x00, 0x1B, 0x80, 0x19, 0x80,
  0x39, 0xC0, 0x30, 0xC0, 0x30, 0x60, 0x30, 0x70, 0xF9, 0xF8, 0x1F, 0x80,
  0x30, 0x01, 0x80, 0x1C, 0x00, 0xC0, 0x06, 0x00, 0x30, 0x03, 0x00, 0x18,
  0x00, 0xC0, 0x0E, 0x00, 0x60, 0x13, 0x01, 0x18, 0x1B, 0xFF, 0xC0, 0x1E,
  0x00, 0xF0, 0x60, 0x1C, 0x07, 0x03, 0xC0, 0xB0, 0x3C, 0x0B, 0x05, 0x80,
  0xB0, 0xD8, 0x0B, 0x09, 0x81, 0x31, 0x30, 0x13, 0x33, 0x01, 0x32, 0x30,
  0x23, 0x47, 0x02, 0x1C, 0x60, 0x21, 0x86, 0x06, 0x10, 0xE0, 0xF1, 0x1F,
  0x80, 0x1E, 0x0F, 0x0E, 0x06, 0x06, 0x06, 0x0B, 0x04, 0x0B, 0x04, 0x0B,
  0x84, 0x09, 0x88, 0x11, 0x88, 0x10, 0xC8, 0x10, 0xD8, 0x10, 0x50, 0x20,
  0x70, 0x20, 0x30, 0x60, 0x20, 0xF0, 0x20, 0x01, 0xE0, 0x18, 0x60, 0x80,
  0x8E, 0x03, 0x30, 0x0D, 0x80, 0x36, 0x00, 0xF8, 0x07, 0xC0, 0x1B, 0x00,
  0x6C, 0x03, 0x30, 0x1C, 0x40, 0xE1, 0x86, 0x01, 0xE0, 0x00, 0x1F, 0xE0,
  0x31, 0x81, 0x86, 0x1C, 0x30, 0xC1, 0x86, 0x0C, 0x31, 0xC3, 0xF8, 0x18,
  0x00, 0xC0, 0x0E, 0x00, 0x60, 0x03, 0x00, 0x18, 0x03, 0xE0, 0x00, 0x01,
  0xE0, 0x18, 0x60, 0xC0, 0x86, 0x03, 0x30, 0x0D, 0xC0, 0x36, 0x00, 0xF8,
  0x03, 0xC0, 0x1F, 0x00, 0x6C, 0x03, 0xB0, 0x0C, 0xC0, 0x61, 0x03, 0x02,
  0x18, 0x07, 0x80, 0x10, 0x01, 0xF8, 0x68, 0xFE, 0x00, 0x1F, 0xE0, 0x31,
  0x81, 0x86, 0x1C, 0x30, 0xC1, 0x86, 0x0C, 0x31, 0xC3, 0xF8, 0x19, 0x80,
  0xCC, 0x0E, 0x30, 0x61, 0x83, 0x0E, 0x18, 0x33, 0xE1, 0xE0, 0x07, 0x90,
  0xC7, 0x18, 0x21, 0x82, 0x18, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x00,
  0x18, 0x41, 0x84, 0x18, 0x41, 0x8E, 0x30, 0x9E, 0x00, 0x7F, 0xFA, 0x18,
  0xF1, 0xC5, 0x0C, 0x20, 0x60, 0x07, 0x00, 0x30, 0x01, 0x80, 0x0C, 0x00,
  0xE0, 0x06, 0x00, 0x30, 0x01, 0x80, 0x1C, 0x03, 0xF8, 0x00, 0x7E, 0x1E,
  0x38, 0x18, 0x60, 0x21, 0xC0, 0x43, 0x00, 0x86, 0x02, 0x0C, 0x04, 0x38,
  0x08, 0x60, 0x11, 0xC0, 0x43, 0x80, 0x86, 0x01, 0x0C, 0x04, 0x0C, 0x10,
  0x0F, 0xC0, 0x00, 0xF8, 0x7B, 0x80, 0x9C, 0x04, 0xE0, 0x43, 0x04, 0x18,
  0x20, 0xC2, 0x06, 0x10, 0x31, 0x01, 0xD0, 0x06, 0x80, 0x38, 0x01, 0x80,
  0x0C, 0x00, 0x40, 0x00, 0xFB, 0xF3, 0xDC, 0x30, 0x27, 0x0C, 0x08, 0xC3,
  0x04, 0x30, 0xC1, 0x0C, 0x78, 0x83, 0x1E, 0x20, 0xC9, 0x90, 0x32, 0x68,
  0x0D, 0x1A, 0x03, 0x47, 0x00, 0x61, 0xC0, 0x18, 0x60, 0x04, 0x18, 0x01,
  0x04, 0x00, 0x3F, 0x3E, 0x1C, 0x18, 0x38, 0x60, 0x30, 0x80, 0x72, 0x00,
  0x68, 0x00, 0xE0, 0x00, 0xC0, 0x03, 0x80, 0x0B, 0x80, 0x23, 0x00, 0x86,
  0x03, 0x06, 0x0C, 0x0C, 0x3E, 0x7E, 0x00, 0x7C, 0xF9, 0x81, 0x8E, 0x08,
  0x30, 0x81, 0x88, 0x0C, 0x80, 0x34, 0x01, 0xC0, 0x0C, 0x00, 0x60, 0x03,
  0x00, 0x30, 0x01, 0x80, 0x1C, 0x03, 0xF8, 0x00, 0x1F, 0xFC, 0x60, 0xE2,
  0x03, 0x88, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x00, 0xE0, 0x07, 0x00,
  0x38, 0x01, 0xC0, 0x07, 0x02, 0x38, 0x11, 0xC0, 0xCF, 0xFE, 0x00, 0x07,
  0x82, 0x01, 0x01, 0x80, 0x80, 0x40, 0x20, 0x20, 0x10, 0x08, 0x04, 0x04,
  0x02, 0x01, 0x01, 0x00, 0x80, 0x40, 0x38, 0x00, 0x40, 0x60, 0x60, 0x20,
  0x30, 0x10, 0x18, 0x08, 0x0C, 0x0C, 0x04, 0x06, 0x02, 0x03, 0x01, 0x1E,
  0x0C, 0x10, 0x20, 0x40, 0x82, 0x04, 0x08, 0x10, 0x20, 0x81, 0x02, 0x04,
  0x08, 0x21, 0xC0, 0x0C, 0x0E, 0x05, 0x86, 0x42, 0x33, 0x09, 0x07, 0x81,
  0xFF, 0xE0, 0x99, 0x10, 0x07, 0xE3, 0x8C, 0xC1, 0x98, 0x26, 0x0D, 0x81,
  0xB0, 0x66, 0x1C, 0xC5, 0xAF, 0x38, 0x78, 0x06, 0x01, 0x00, 0xC0, 0x30,
  0x09, 0xE2, 0x8D, 0xC3, 0x60, 0xD8, 0x3C, 0x1B, 0x06, 0xC3, 0x23, 0x8F,
  0x80, 0x0F, 0x1C, 0xC8, 0x0C, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xE2, 0x3E,
  0x00, 0x00, 0xE0, 0x04, 0x01, 0x80, 0x30, 0x04, 0x0F, 0x86, 0x31, 0x86,
  0x60, 0x8C, 0x33, 0x06, 0x60, 0x8C, 0x31, 0x9E, 0x9C, 0xE0, 0x0E, 0x24,
  0xCB, 0x36, 0xDE, 0x30, 0x60, 0xC4, 0xF0, 0x00, 0x78, 0x06, 0xC0, 0x20,
  0x03, 0x00, 0x10, 0x00, 0x80, 0x3F, 0x00, 0x60, 0x03, 0x00, 0x10, 0x00,
  0x80, 0x0C, 0x00, 0x60, 0x02, 0x00, 0x10, 0x01, 0x80, 0x0C, 0x00, 0x40,
  0x02, 0x01, 0x20, 0x0E, 0x00, 0x00, 0x0F, 0x83, 0x1C, 0xC3, 0x18, 0x63,
  0x1C, 0x63, 0x03, 0xC0, 0x80, 0x38, 0x07, 0xC1, 0x0C, 0x40, 0x88, 0x11,
  0x84, 0x0F, 0x00, 0x3C, 0x03, 0x00, 0x80, 0x60, 0x18, 0x06, 0x71, 0x6C,
  0xE3, 0x38, 0xCC, 0x62, 0x19, 0x86, 0x63, 0x10, 0xD4, 0x38, 0x33, 0x00,
  0x03, 0xE2, 0x66, 0x4C, 0xCE, 0xC0, 0x01, 0x80, 0xC0, 0x00, 0x00, 0x00,
  0x08, 0x1C, 0x06, 0x03, 0x01, 0x00, 0x80, 0xC0, 0x60, 0x20, 0x10, 0x18,
  0x0C, 0x04, 0x36, 0x1E, 0x00, 0x3C, 0x03, 0x00, 0x80, 0x60, 0x18, 0x06,
  0xF1, 0x18, 0xC8, 0x34, 0x0A, 0x03, 0xC1, 0xB0, 0x66, 0x11, 0xA4, 0x30,
  0x38, 0xC6, 0x23, 0x18, 0xC4, 0x63, 0x18, 0x8C, 0xEB, 0x80, 0x71, 0xCE,
  0x36, 0xD6, 0x38, 0xE6, 0x38, 0xC4, 0x31, 0x8C, 0x21, 0x8C, 0x61, 0x0C,
  0x61, 0x09, 0x43, 0x1A, 0xC3, 0x1C, 0x79, 0xC6, 0xD8, 0xE3, 0x1C, 0x43,
  0x18, 0xC3, 0x18, 0x43, 0x09, 0x43, 0x58, 0x70, 0x0F, 0x18, 0xDC, 0x6C,
  0x3E, 0x1E, 0x0F, 0x0D, 0x84, 0xC6, 0x3C, 0x00, 0x1C, 0xE0, 0x53, 0x0E,
  0x30, 0xC3, 0x0C, 0x30, 0x86, 0x18, 0x61, 0x8C, 0x19, 0x81, 0xF0, 0x30,
  0x03, 0x00, 0x30, 0x02, 0x00, 0xF8, 0x00, 0x07, 0x06, 0x33, 0x0D, 0x83,
  0x61, 0xB0, 0x6C, 0x3B, 0x16, 0xC9, 0x1C, 0xC0, 0x30, 0x08, 0x06, 0x01,
  0x81, 0xF0, 0x73, 0x0A, 0x8E, 0x06, 0x03, 0x01, 0x81, 0x80, 0xC0, 0x60,
  0x20, 0x00, 0x1D, 0x33, 0x31, 0x38, 0x1C, 0x0C, 0x86, 0x86, 0xC6, 0xB8,
  0x08, 0x47, 0xCC, 0x20, 0x86, 0x18, 0x43, 0x0D, 0x38, 0xE1, 0xB0, 0xD8,
  0x6C, 0x64, 0x36, 0x3B, 0x2D, 0x9C, 0xD6, 0xF3, 0x80, 0x71, 0x98, 0xCC,
  0x23, 0x21, 0x90, 0xD0, 0x70, 0x38, 0x18, 0x08, 0x00, 0x60, 0x0F, 0x84,
  0x36, 0x10, 0xCC, 0xC1, 0x35, 0x08, 0xD2, 0x43, 0x89, 0x0E, 0x28, 0x30,
  0xC0, 0x82, 0x00, 0x1C, 0x65, 0xBC, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x02,
  0x80, 0x90, 0x13, 0x9C, 0x60, 0x38, 0xC6, 0x30, 0x84, 0x31, 0x0C, 0x83,
  0x20, 0x50, 0x14, 0x06, 0x01, 0x80, 0x40, 0x20, 0x08, 0x04, 0x0E, 0x00,
  0x3F, 0xA0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x40, 0x70, 0x7C, 0x06,
  0x40, 0xC0, 0x06, 0x0C, 0x08, 0x08, 0x18, 0x18, 0x10, 0x30, 0x70, 0x30,
  0x20, 0x60, 0x60, 0x60, 0x40, 0xC0, 0xC0, 0xE0, 0x70, 0xFF, 0xFE, 0x0F,
  0x03, 0x03, 0x03, 0x02, 0x06, 0x06, 0x04, 0x04, 0x0C, 0x0E, 0x04, 0x08,
  0x18, 0x18, 0x10, 0x30, 0x30, 0x20, 0xC0, 0x70, 0x33, 0x38, 0x38 };

const GFXglyph FreeSerifItalic11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,   6,    0,    0 },   // 0x20 ' '
  {     1,   6,  15,   7,    1,  -14 },   // 0x21 '!'
  {    13,   6,   5,   7,    3,  -14 },   // 0x22 '"'
  {    17,  12,  15,  11,    0,  -14 },   // 0x23 '#'
  {    40,  11,  18,  11,    0,  -15 },   // 0x24 '$'
  {    65,  16,  16,  18,    2,  -15 },   // 0x25 '%'
  {    97,  14,  15,  17,    2,  -14 },   // 0x26 '&'
  {   124,   2,   5,   4,    3,  -14 },   // 0x27 '''
  {   126,   7,  19,   7,    1,  -14 },   // 0x28 '('
  {   143,   6,  19,   7,    1,  -14 },   // 0x29 ')'
  {   158,   8,  10,  11,    3,  -14 },   // 0x2A '*'
  {   168,  11,  11,  15,    2,  -10 },   // 0x2B '+'
  {   184,   3,   5,   5,    0,   -1 },   // 0x2C ','
  {   186,   5,   1,   7,    1,   -4 },   // 0x2D '-'
  {   187,   2,   2,   5,    1,   -1 },   // 0x2E '.'
  {   188,  10,  15,   7,    0,  -14 },   // 0x2F '/'
  {   207,  10,  15,  11,    1,  -14 },   // 0x30 '0'
  {   226,   8,  16,  11,    1,  -15 },   // 0x31 '1'
  {   242,  10,  14,  11,    0,  -13 },   // 0x32 '2'
  {   260,  10,  15,  11,    0,  -14 },   // 0x33 '3'
  {   279,  10,  15,  11,    0,  -14 },   // 0x34 '4'
  {   298,  10,  15,  11,    1,  -14 },   // 0x35 '5'
  {   317,  11,  16,  11,    1,  -15 },   // 0x36 '6'
  {   339,  10,  15,  11,    2,  -14 },   // 0x37 '7'
  {   358,  10,  16,  11,    1,  -15 },   // 0x38 '8'
  {   378,  11,  15,  11,    0,  -14 },   // 0x39 '9'
  {   399,   4,  10,   6,    1,   -9 },   // 0x3A ':'
  {   404,   5,  13,   6,    0,   -9 },   // 0x3B ';'
  {   413,  11,  12,  13,    1,  -11 },   // 0x3C '<'
  {   430,  11,   5,  15,    2,   -7 },   // 0x3D '='
  {   437,  12,  12,  13,    1,  -11 },   // 0x3E '>'
  {   455,   8,  15,  10,    3,  -14 },   // 0x3F '?'
  {   470,  15,  15,  17,    2,  -14 },   // 0x40 '@'
  {   499,  13,  14,  14,    0,  -13 },   // 0x41 'A'
  {   522,  13,  15,  13,    0,  -14 },   // 0x42 'B'
  {   547,  14,  15,  13,    1,  -14 },   // 0x43 'C'
  {   574,  15,  15,  15,    0,  -14 },   // 0x44 'D'
  {   603,  15,  15,  13,    0,  -14 },   // 0x45 'E'
  {   632,  15,  15,  13,    0,  -14 },   // 0x46 'F'
  {   661,  15,  15,  15,    1,  -14 },   // 0x47 'G'
  {   690,  17,  15,  16,    0,  -14 },   // 0x48 'H'
  {   722,   9,  15,   7,    0,  -14 },   // 0x49 'I'
  {   739,  11,  15,   9,    0,  -14 },   // 0x4A 'J'
  {   760,  16,  15,  14,    0,  -14 },   // 0x4B 'K'
  {   790,  13,  15,  12,    0,  -14 },   // 0x4C 'L'
  {   815,  20,  15,  18,    0,  -14 },   // 0x4D 'M'
  {   853,  16,  15,  15,    0,  -14 },   // 0x4E 'N'
  {   883,  14,  15,  14,    1,  -14 },   // 0x4F 'O'
  {   910,  13,  15,  12,    0,  -14 },   // 0x50 'P'
  {   935,  14,  19,  14,    1,  -14 },   // 0x51 'Q'
  {   969,  13,  15,  14,    0,  -14 },   // 0x52 'R'
  {   994,  12,  15,  10,    0,  -14 },   // 0x53 'S'
  {  1017,  13,  15,  13,    2,  -14 },   // 0x54 'T'
  {  1042,  15,  15,  16,    2,  -14 },   // 0x55 'U'
  {  1071,  13,  15,  15,    3,  -14 },   // 0x56 'V'
  {  1096,  18,  15,  20,    3,  -14 },   // 0x57 'W'
  {  1130,  15,  15,  15,    0,  -14 },   // 0x58 'X'
  {  1159,  13,  15,  13,    2,  -14 },   // 0x59 'Y'
  {  1184,  14,  15,  12,    0,  -14 },   // 0x5A 'Z'
  {  1211,   9,  18,   9,    0,  -14 },   // 0x5B '['
  {  1232,   8,  15,  11,    2,  -14 },   // 0x5C '\'
  {  1247,   7,  18,   9,    1,  -14 },   // 0x5D ']'
  {  1263,   9,   8,   9,    0,  -14 },   // 0x5E '^'
  {  1272,  11,   1,  11,    0,    3 },   // 0x5F '_'
  {  1274,   3,   4,   5,    3,  -14 },   // 0x60 '`'
  {  1276,  11,  10,  11,    0,   -9 },   // 0x61 'a'
  {  1290,  10,  15,  10,    1,  -14 },   // 0x62 'b'
  {  1309,   9,  10,   9,    1,   -9 },   // 0x63 'c'
  {  1321,  11,  15,  11,    0,  -14 },   // 0x64 'd'
  {  1342,   7,  10,   9,    1,   -9 },   // 0x65 'e'
  {  1351,  13,  21,   9,   -2,  -15 },   // 0x66 'f'
  {  1386,  11,  15,  10,   -1,   -9 },   // 0x67 'g'
  {  1407,  10,  15,  11,    0,  -14 },   // 0x68 'h'
  {  1426,   4,  15,   5,    1,  -14 },   // 0x69 'i'
  {  1434,   9,  20,   6,   -2,  -14 },   // 0x6A 'j'
  {  1457,  10,  15,  10,    0,  -14 },   // 0x6B 'k'
  {  1476,   5,  15,   6,    1,  -14 },   // 0x6C 'l'
  {  1486,  16,  10,  16,    0,   -9 },   // 0x6D 'm'
  {  1506,  11,  10,  11,    0,   -9 },   // 0x6E 'n'
  {  1520,   9,  10,  10,    1,   -9 },   // 0x6F 'o'
  {  1532,  12,  15,  10,   -2,   -9 },   // 0x70 'p'
  {  1555,  10,  15,  11,    0,   -9 },   // 0x71 'q'
  {  1574,   9,  10,   8,    0,   -9 },   // 0x72 'r'
  {  1586,   8,  10,   8,    0,   -9 },   // 0x73 's'
  {  1596,   6,  12,   5,    1,  -11 },   // 0x74 't'
  {  1605,   9,  10,  11,    1,   -9 },   // 0x75 'u'
  {  1617,   9,  10,  10,    1,   -9 },   // 0x76 'v'
  {  1629,  14,  10,  15,    1,   -9 },   // 0x77 'w'
  {  1647,  11,  10,  10,   -1,   -9 },   // 0x78 'x'
  {  1661,  10,  15,  10,    0,   -9 },   // 0x79 'y'
  {  1680,   9,  12,   9,    0,   -9 },   // 0x7A 'z'
  {  1694,   8,  19,   9,    1,  -14 },   // 0x7B '{'
  {  1713,   1,  15,   6,    2,  -14 },   // 0x7C '|'
  {  1715,   8,  20,   9,    0,  -15 },   // 0x7D '}'
  {  1735,  10,   3,  12,    1,   -6 } }; // 0x7E '~'

const GFXfont FreeSerifItalic11pt7b PROGMEM = {
  (uint8_t  *)FreeSerifItalic11pt7bBitmaps,
  (GFXglyph *)FreeSerifItalic11pt7bGlyphs,
  0x20, 0x7E, 26 };

// Approx. 2411 bytes

#endif // FreeSerifItalic11pt7b_H
