#ifndef FreeMonoBold11pt7b_H
#define FreeMonoBold11pt7b_H

#ifdef __AVR__
#include <avr/io.h>
#include <avr/pgmspace.h>
#elif defined(ESP8266)
#include <pgmspace.h>
#undef PROGMEM
#define PROGMEM STORE_ATTR
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
// PROGMEM is defefind for T4 to place data in specific memory section
#undef PROGMEM
#define PROGMEM
#else
#define PROGMEM
#endif

const uint8_t FreeMonoBold11pt7bBitmaps[] PROGMEM = {
  0x00, 0xFF, 0xFF, 0xFF, 0x48, 0x0F, 0xC0, 0xEF, 0x99, 0x12, 0x24, 0x48,
  0x80, 0x33, 0x19, 0x8C, 0xC6, 0x63, 0x37, 0xFF, 0xFE, 0x6C, 0x36, 0x1B,
  0x3F, 0xFF, 0xF6, 0x63, 0x31, 0x98, 0xCC, 0x66, 0x00, 0x0C, 0x06, 0x0F,
  0xEF, 0xFE, 0x3E, 0x0F, 0x80, 0xFC, 0x3F, 0x01, 0xC0, 0x60, 0x34, 0x1B,
  0xF9, 0xFC, 0x18, 0x0C, 0x06, 0x00, 0x78, 0x66, 0x21, 0x10, 0x8C, 0xCB,
  0xFC, 0xF1, 0xC0, 0x0F, 0x0C, 0x44, 0x23, 0x30, 0xF0, 0x3E, 0x3F, 0x19,
  0x0C, 0x07, 0x01, 0x81, 0xEF, 0xFF, 0xCF, 0x67, 0xBF, 0xEF, 0xF0, 0xF9,
  0x24, 0x80, 0x13, 0x76, 0x6C, 0xCC, 0xCC, 0xCC, 0x66, 0x73, 0x30, 0x8C,
  0xE6, 0x67, 0x33, 0x33, 0x33, 0x66, 0xEC, 0xC0, 0x0C, 0x03, 0x00, 0xC3,
  0xB7, 0xFF, 0xCF, 0xC1, 0xE0, 0xFC, 0x33, 0x00, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x3F, 0xFF, 0xFC, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x76,
  0x6C, 0xC8, 0xFF, 0xFF, 0xFC, 0xFC, 0x01, 0x80, 0xC0, 0xE0, 0x60, 0x70,
  0x30, 0x38, 0x18, 0x1C, 0x0C, 0x06, 0x06, 0x03, 0x03, 0x01, 0x81, 0xC0,
  0xC0, 0x00, 0x1E, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1,
  0xE0, 0xF0, 0x6C, 0x67, 0xF1, 0xE0, 0x1C, 0x1E, 0x1F, 0x1D, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x87, 0xFB, 0xFC, 0x3E, 0x3F,
  0xB8, 0xF8, 0x30, 0x18, 0x1C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1C, 0x1C, 0x3F,
  0xFF, 0xFC, 0x1F, 0x1F, 0xE6, 0x1C, 0x03, 0x00, 0xC0, 0x70, 0xF8, 0x3E,
  0x01, 0xC0, 0x30, 0x0F, 0x07, 0xFF, 0x9F, 0xC0, 0x07, 0x07, 0x83, 0xC3,
  0x63, 0xB1, 0x99, 0xCC, 0xC6, 0xFF, 0xFF, 0xC0, 0xC3, 0xF1, 0xF8, 0x7F,
  0xBF, 0xD8, 0x0C, 0x07, 0xE3, 0xF9, 0x8E, 0x03, 0x01, 0x80, 0xF0, 0xFF,
  0xE7, 0xE0, 0x0F, 0x8F, 0xCE, 0x0E, 0x0E, 0x06, 0x03, 0x79, 0xFE, 0xE3,
  0xE0, 0xF0, 0x7C, 0x77, 0xF1, 0xF0, 0xFF, 0xFF, 0xF0, 0x60, 0x70, 0x30,
  0x18, 0x1C, 0x0C, 0x06, 0x07, 0x03, 0x03, 0x80, 0x80, 0x3E, 0x3F, 0xB8,
  0xF8, 0x3C, 0x1F, 0x1D, 0xFC, 0xFE, 0xE3, 0xE0, 0xF0, 0x7C, 0x77, 0xF1,
  0xF0, 0x3E, 0x3F, 0xB8, 0xD8, 0x7C, 0x1E, 0x1F, 0x9E, 0xFF, 0x3D, 0x81,
  0xC0, 0xC1, 0xEF, 0xE7, 0xC0, 0xFC, 0x00, 0x00, 0xFC, 0x77, 0x00, 0x00,
  0x07, 0x66, 0xCC, 0x80, 0x00, 0x60, 0x3C, 0x1E, 0x0F, 0x07, 0x81, 0xF8,
  0x07, 0xC0, 0x3E, 0x01, 0xE0, 0x0C, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x0F,
  0xFF, 0xFF, 0xC0, 0xC0, 0x1E, 0x00, 0xF0, 0x07, 0x80, 0x3C, 0x07, 0xC3,
  0xC1, 0xE0, 0xF0, 0x08, 0x00, 0x3E, 0x7F, 0xB0, 0xF8, 0x30, 0x18, 0x3C,
  0x3C, 0x18, 0x08, 0x00, 0x00, 0x03, 0x81, 0xC0, 0x1E, 0x0F, 0xC7, 0x39,
  0x86, 0xC1, 0xB1, 0xEC, 0xFB, 0x76, 0xD9, 0xB6, 0x6C, 0xFF, 0x1F, 0xC0,
  0x18, 0x07, 0x18, 0xFE, 0x1E, 0x00, 0x3F, 0x00, 0xFE, 0x00, 0x78, 0x03,
  0xE0, 0x0C, 0xC0, 0x33, 0x01, 0xCE, 0x07, 0xF8, 0x3F, 0xE0, 0xC0, 0xC3,
  0x03, 0x3F, 0x3F, 0xFC, 0xFC, 0xFF, 0x1F, 0xF1, 0x87, 0x30, 0x66, 0x0C,
  0xC3, 0x9F, 0xE3, 0xFE, 0x60, 0xEC, 0x0D, 0x81, 0xFF, 0xEF, 0xF8, 0x1F,
  0xE7, 0xFD, 0xC3, 0xF0, 0x3C, 0x07, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x1C,
  0x01, 0xC1, 0x9F, 0xF0, 0xF8, 0xFF, 0x1F, 0xF1, 0x87, 0x30, 0x76, 0x06,
  0xC0, 0xD8, 0x1B, 0x03, 0x60, 0x6C, 0x1D, 0x83, 0x7F, 0xCF, 0xF0, 0xFF,
  0xFF, 0xFD, 0x81, 0xB0, 0x36, 0x06, 0xCC, 0x1F, 0x83, 0xF0, 0x66, 0x6C,
  0xCD, 0x81, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFD, 0x81, 0xB0, 0x36, 0x66,
  0xCC, 0x1F, 0x83, 0xF0, 0x66, 0x0C, 0x01, 0x80, 0x7E, 0x0F, 0xC0, 0x1F,
  0xE3, 0xFE, 0x70, 0xEE, 0x06, 0xC0, 0x6C, 0x00, 0xC0, 0x0C, 0x3F, 0xC3,
  0xFE, 0x06, 0x70, 0x63, 0xFE, 0x1F, 0x80, 0xF9, 0xFF, 0x9F, 0x60, 0xC6,
  0x0C, 0x60, 0xC7, 0xFC, 0x7F, 0xC6, 0x0C, 0x60, 0xC6, 0x0C, 0x60, 0xCF,
  0x9F, 0xF9, 0xF0, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xFF, 0xFF, 0x0F, 0xF0, 0xFF, 0x00, 0xC0, 0x0C, 0x00, 0xC0,
  0x0C, 0x00, 0xCC, 0x0C, 0xC0, 0xCC, 0x0C, 0xC1, 0xCF, 0xF8, 0x3E, 0x00,
  0xF9, 0xF7, 0xCF, 0x98, 0x70, 0xC7, 0x06, 0xF0, 0x3F, 0x01, 0xFC, 0x0E,
  0xF0, 0x63, 0x83, 0x0E, 0x18, 0x31, 0xF1, 0xFF, 0x87, 0x80, 0xFC, 0x1F,
  0x80, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x83, 0x30, 0x66, 0x0C,
  0xC1, 0xFF, 0xFF, 0xFE, 0xF0, 0x7F, 0x83, 0xDE, 0x3C, 0xF1, 0xE7, 0xDF,
  0x36, 0xD9, 0xB6, 0xCC, 0xE6, 0x67, 0x33, 0x11, 0x98, 0x0D, 0xFB, 0xFF,
  0xDF, 0x80, 0xE7, 0xFE, 0xFD, 0xC3, 0x3C, 0x67, 0xCC, 0xD9, 0x9B, 0xB3,
  0x36, 0x67, 0xCC, 0x79, 0x87, 0x7E, 0xEF, 0xCC, 0x0F, 0x81, 0xFF, 0x1C,
  0x1C, 0xC0, 0x6C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x1B, 0x01,
  0x9C, 0x1C, 0x7F, 0xC0, 0xF8, 0x00, 0xFF, 0x3F, 0xE6, 0x1D, 0x83, 0x60,
  0xD8, 0x77, 0xF9, 0xFC, 0x60, 0x18, 0x06, 0x03, 0xF0, 0xFC, 0x00, 0x0F,
  0x81, 0xFF, 0x1C, 0x1C, 0xC0, 0x6C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03,
  0xC0, 0x1B, 0x01, 0x9C, 0x1C, 0x7F, 0xC0, 0xF8, 0x0E, 0x0C, 0xFF, 0xE7,
  0xFE, 0xFF, 0x87, 0xFE, 0x0C, 0x38, 0x60, 0xC3, 0x06, 0x18, 0x70, 0xFF,
  0x07, 0xF0, 0x31, 0xC1, 0x87, 0x0C, 0x39, 0xF8, 0xFF, 0xC3, 0x80, 0x3F,
  0xDF, 0xFE, 0x1F, 0x03, 0xC0, 0x3C, 0x07, 0xF0, 0x3E, 0x01, 0xF0, 0x3E,
  0x1F, 0xFE, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x31, 0xE6, 0x3C, 0xC7, 0x98,
  0xC3, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x3F, 0xC7, 0xF8, 0xFF, 0xFF,
  0xFD, 0x83, 0x30, 0x66, 0x0C, 0xC1, 0x98, 0x33, 0x06, 0x60, 0xCC, 0x18,
  0xC6, 0x1F, 0xC0, 0xE0, 0xFC, 0xFF, 0xF3, 0xF3, 0x03, 0x0E, 0x1C, 0x18,
  0x60, 0x61, 0x81, 0xCE, 0x03, 0x30, 0x0E, 0xC0, 0x1E, 0x00, 0x78, 0x01,
  0xC0, 0x03, 0x00, 0xFC, 0xFF, 0xF3, 0xF6, 0x03, 0x18, 0xCC, 0x67, 0xB1,
  0x9E, 0xC7, 0x7B, 0x1F, 0xEC, 0x3C, 0xF0, 0xF3, 0x83, 0xCE, 0x0E, 0x18,
  0x38, 0x60, 0xF8, 0xFF, 0xC7, 0xCE, 0x38, 0x3B, 0xC1, 0xDC, 0x07, 0xC0,
  0x1C, 0x01, 0xF0, 0x1D, 0xC1, 0xC7, 0x0C, 0x1D, 0xF1, 0xFF, 0x8F, 0x80,
  0xF8, 0xFF, 0xC7, 0xCC, 0x38, 0x71, 0x81, 0xDC, 0x07, 0xC0, 0x3C, 0x00,
  0xC0, 0x06, 0x00, 0x30, 0x01, 0x80, 0x7F, 0x83, 0xFC, 0x00, 0xFF, 0x7F,
  0xB0, 0xD8, 0xCC, 0xC0, 0x60, 0x60, 0x60, 0x31, 0xB0, 0xF0, 0x7F, 0xFF,
  0xF8, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x1F, 0xF8,
  0xC0, 0x60, 0x18, 0x0C, 0x07, 0x01, 0x80, 0xE0, 0x30, 0x1C, 0x06, 0x03,
  0x80, 0xC0, 0x70, 0x18, 0x0E, 0x03, 0x01, 0x80, 0xFF, 0xC6, 0x31, 0x8C,
  0x63, 0x18, 0xC6, 0x31, 0x8C, 0x7F, 0xF8, 0x08, 0x0E, 0x0F, 0x86, 0xE7,
  0x37, 0x1F, 0x06, 0xFF, 0xFF, 0xFF, 0xC0, 0xCE, 0x73, 0x1F, 0x03, 0xF8,
  0x00, 0xC1, 0xFC, 0x7F, 0xC6, 0x0C, 0xC0, 0xCC, 0x1C, 0xFF, 0xF3, 0xFF,
  0xF0, 0x0F, 0x00, 0x30, 0x03, 0x00, 0x37, 0x83, 0xFE, 0x38, 0x63, 0x03,
  0x30, 0x33, 0x03, 0x30, 0x33, 0x87, 0xFF, 0xEF, 0x7C, 0x1F, 0xE7, 0xFD,
  0xC3, 0xF0, 0x3C, 0x07, 0x80, 0x30, 0x07, 0x03, 0x7F, 0xE3, 0xF0, 0x03,
  0xC0, 0x3C, 0x00, 0xC0, 0x0C, 0x3E, 0xC7, 0xFC, 0x61, 0xCC, 0x0C, 0xC0,
  0xCC, 0x0C, 0xC0, 0xCE, 0x1C, 0x7F, 0xF3, 0xEF, 0x1F, 0x0F, 0xFB, 0x87,
  0x60, 0x7F, 0xFF, 0xFF, 0xF0, 0x07, 0x03, 0x7F, 0xE3, 0xF0, 0x0F, 0xCF,
  0xF3, 0x00, 0xC0, 0xFF, 0x3F, 0xC3, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0xFF, 0x3F, 0xC0, 0x1E, 0xF7, 0xFF, 0x61, 0xCC, 0x0C, 0xC0, 0xCC,
  0x0C, 0xC0, 0xC6, 0x1C, 0x7F, 0xC1, 0xEC, 0x00, 0xC0, 0x1C, 0x3F, 0x83,
  0xF0, 0xF0, 0x07, 0x80, 0x0C, 0x00, 0x60, 0x03, 0x7C, 0x1F, 0xE0, 0xE1,
  0x86, 0x0C, 0x30, 0x61, 0x83, 0x0C, 0x18, 0x60, 0xCF, 0x8F, 0xFC, 0x7C,
  0x0C, 0x03, 0x00, 0x01, 0xF0, 0x7C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC3, 0xFF, 0xFF, 0xC0, 0x06, 0x06, 0x00, 0xFF, 0xFF, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0xFE, 0xFC, 0xF0, 0x1E,
  0x00, 0xC0, 0x18, 0x03, 0x7C, 0x6F, 0x8D, 0xC1, 0xF0, 0x3C, 0x07, 0xC0,
  0xDC, 0x19, 0xCF, 0x3F, 0xE7, 0xC0, 0x7C, 0x1F, 0x00, 0xC0, 0x30, 0x0C,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0xFF, 0xFF, 0xF0,
  0xFE, 0xE7, 0xFF, 0x9C, 0xCC, 0xC6, 0x66, 0x33, 0x31, 0x99, 0x8C, 0xCC,
  0x66, 0xFB, 0xBF, 0xDD, 0xC0, 0x77, 0x83, 0xFE, 0x0E, 0x18, 0x60, 0xC3,
  0x06, 0x18, 0x30, 0xC1, 0x86, 0x0C, 0xF8, 0xFF, 0xC7, 0xC0, 0x1F, 0x07,
  0xF1, 0xC7, 0x60, 0x3C, 0x07, 0x80, 0xF0, 0x1B, 0x8E, 0x7F, 0xC3, 0xE0,
  0xF7, 0xC7, 0xFF, 0x0E, 0x1C, 0x60, 0x33, 0x01, 0x98, 0x0C, 0xC0, 0xE7,
  0x0E, 0x3F, 0xE1, 0xBE, 0x0C, 0x00, 0x60, 0x0F, 0xC0, 0x7E, 0x00, 0x1F,
  0x79, 0xFF, 0xDC, 0x39, 0x80, 0xCC, 0x06, 0x60, 0x33, 0x81, 0x8E, 0x1C,
  0x3F, 0xE0, 0xFB, 0x00, 0x18, 0x00, 0xC0, 0x1F, 0x80, 0xFC, 0xF3, 0xFF,
  0xF3, 0xC0, 0xE0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0xFF, 0x3F, 0xC0, 0x1F,
  0x9F, 0xF7, 0x1D, 0xC2, 0x7F, 0x07, 0xF4, 0x0F, 0x83, 0xFF, 0xDF, 0xC0,
  0x30, 0x06, 0x00, 0xC0, 0x7F, 0xCF, 0xF8, 0x60, 0x0C, 0x01, 0x80, 0x30,
  0x06, 0x00, 0xC1, 0x9F, 0xF0, 0xF8, 0xF1, 0xEF, 0x1E, 0x30, 0x63, 0x06,
  0x30, 0x63, 0x06, 0x30, 0x63, 0x0E, 0x1F, 0xF0, 0xF7, 0xFD, 0xFF, 0xEF,
  0xCE, 0x38, 0x31, 0x81, 0x8C, 0x0E, 0xE0, 0x36, 0x01, 0xF0, 0x07, 0x00,
  0x38, 0x00, 0xF8, 0xFF, 0xC7, 0xDC, 0xCC, 0x6E, 0x63, 0x7E, 0x1B, 0xF0,
  0xF7, 0x87, 0xBC, 0x1D, 0xE0, 0xC6, 0x00, 0xFB, 0xFF, 0x7D, 0xEF, 0x0F,
  0x80, 0xE0, 0x3E, 0x0E, 0xE3, 0x8E, 0xFB, 0xFF, 0x7C, 0xF8, 0xFF, 0xC7,
  0xDC, 0x1C, 0x60, 0xC3, 0x8C, 0x0E, 0xE0, 0x76, 0x01, 0xF0, 0x0F, 0x00,
  0x38, 0x01, 0x80, 0x1C, 0x0F, 0xE0, 0x7F, 0x00, 0xFF, 0xFF, 0xF1, 0xD9,
  0xC1, 0xC1, 0xE1, 0xE1, 0xE3, 0xFF, 0xFF, 0xC0, 0x1C, 0xF3, 0x0C, 0x30,
  0xC3, 0x38, 0xE0, 0xC3, 0x0C, 0x30, 0xC3, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF,
  0xC0, 0xE3, 0xC3, 0x0C, 0x30, 0xC3, 0x07, 0x1C, 0xC3, 0x0C, 0x30, 0xCF,
  0x38, 0x38, 0x6F, 0xDF, 0x9F, 0x21, 0xC0 };

const GFXglyph FreeMonoBold11pt7bGlyphs[] PROGMEM = {
  {     0,   1,   1,  13,    0,    0 },   // 0x20 ' '
  {     1,   3,  14,  13,    5,  -13 },   // 0x21 '!'
  {     7,   7,   6,  13,    3,  -12 },   // 0x22 '"'
  {    13,   9,  17,  13,    2,  -14 },   // 0x23 '#'
  {    33,   9,  18,  13,    2,  -14 },   // 0x24 '$'
  {    54,   9,  13,  13,    2,  -12 },   // 0x25 '%'
  {    69,   9,  12,  13,    2,  -11 },   // 0x26 '&'
  {    83,   3,   6,  13,    5,  -12 },   // 0x27 '''
  {    86,   4,  17,  13,    6,  -13 },   // 0x28 '('
  {    95,   4,  17,  13,    3,  -13 },   // 0x29 ')'
  {   104,  10,   9,  13,    2,  -13 },   // 0x2A '*'
  {   116,  10,  12,  13,    2,  -11 },   // 0x2B '+'
  {   131,   4,   6,  13,    3,   -2 },   // 0x2C ','
  {   134,  11,   2,  13,    1,   -6 },   // 0x2D '-'
  {   137,   3,   2,  13,    5,   -1 },   // 0x2E '.'
  {   138,   9,  17,  13,    2,  -14 },   // 0x2F '/'
  {   158,   9,  14,  13,    2,  -13 },   // 0x30 '0'
  {   174,   9,  14,  13,    2,  -13 },   // 0x31 '1'
  {   190,   9,  14,  13,    2,  -13 },   // 0x32 '2'
  {   206,  10,  14,  13,    1,  -13 },   // 0x33 '3'
  {   224,   9,  13,  13,    2,  -12 },   // 0x34 '4'
  {   239,   9,  13,  13,    2,  -12 },   // 0x35 '5'
  {   254,   9,  14,  13,    3,  -13 },   // 0x36 '6'
  {   270,   9,  13,  13,    2,  -12 },   // 0x37 '7'
  {   285,   9,  14,  13,    2,  -13 },   // 0x38 '8'
  {   301,   9,  14,  13,    2,  -13 },   // 0x39 '9'
  {   317,   3,  10,  13,    5,   -9 },   // 0x3A ':'
  {   321,   4,  13,  13,    3,   -9 },   // 0x3B ';'
  {   328,  11,  10,  13,    1,  -10 },   // 0x3C '<'
  {   342,  11,   6,  13,    1,   -8 },   // 0x3D '='
  {   351,  11,  10,  13,    1,  -10 },   // 0x3E '>'
  {   365,   9,  13,  13,    2,  -12 },   // 0x3F '?'
  {   380,  10,  17,  13,    2,  -13 },   // 0x40 '@'
  {   402,  14,  13,  13,    0,  -12 },   // 0x41 'A'
  {   425,  11,  13,  13,    1,  -12 },   // 0x42 'B'
  {   443,  11,  13,  13,    1,  -12 },   // 0x43 'C'
  {   461,  11,  13,  13,    1,  -12 },   // 0x44 'D'
  {   479,  11,  13,  13,    1,  -12 },   // 0x45 'E'
  {   497,  11,  13,  13,    1,  -12 },   // 0x46 'F'
  {   515,  12,  13,  13,    1,  -12 },   // 0x47 'G'
  {   535,  12,  13,  13,    1,  -12 },   // 0x48 'H'
  {   555,   8,  13,  13,    3,  -12 },   // 0x49 'I'
  {   568,  12,  13,  13,    1,  -12 },   // 0x4A 'J'
  {   588,  13,  13,  13,    1,  -12 },   // 0x4B 'K'
  {   610,  11,  13,  13,    1,  -12 },   // 0x4C 'L'
  {   628,  13,  13,  13,    0,  -12 },   // 0x4D 'M'
  {   650,  11,  13,  13,    1,  -12 },   // 0x4E 'N'
  {   668,  13,  13,  13,    0,  -12 },   // 0x4F 'O'
  {   690,  10,  13,  13,    1,  -12 },   // 0x50 'P'
  {   707,  13,  16,  13,    0,  -12 },   // 0x51 'Q'
  {   733,  13,  13,  13,    0,  -12 },   // 0x52 'R'
  {   755,  10,  13,  13,    2,  -12 },   // 0x53 'S'
  {   772,  11,  13,  13,    1,  -12 },   // 0x54 'T'
  {   790,  11,  13,  13,    1,  -12 },   // 0x55 'U'
  {   808,  14,  13,  13,    0,  -12 },   // 0x56 'V'
  {   831,  14,  13,  13,    0,  -12 },   // 0x57 'W'
  {   854,  13,  13,  13,    0,  -12 },   // 0x58 'X'
  {   876,  13,  13,  13,    0,  -12 },   // 0x59 'Y'
  {   898,   9,  13,  13,    2,  -12 },   // 0x5A 'Z'
  {   913,   5,  17,  13,    6,  -13 },   // 0x5B '['
  {   924,   9,  17,  13,    2,  -14 },   // 0x5C '\'
  {   944,   5,  17,  13,    3,  -13 },   // 0x5D ']'
  {   955,   9,   7,  13,    2,  -13 },   // 0x5E '^'
  {   963,  13,   2,  13,    0,    3 },   // 0x5F '_'
  {   967,   4,   4,  13,    4,  -14 },   // 0x60 '`'
  {   969,  12,  10,  13,    1,   -9 },   // 0x61 'a'
  {   984,  12,  14,  13,    0,  -13 },   // 0x62 'b'
  {  1005,  11,  10,  13,    1,   -9 },   // 0x63 'c'
  {  1019,  12,  14,  13,    1,  -13 },   // 0x64 'd'
  {  1040,  11,  10,  13,    1,   -9 },   // 0x65 'e'
  {  1054,  10,  14,  13,    2,  -13 },   // 0x66 'f'
  {  1072,  12,  14,  13,    1,   -9 },   // 0x67 'g'
  {  1093,  13,  14,  13,    0,  -13 },   // 0x68 'h'
  {  1116,  10,  13,  13,    2,  -12 },   // 0x69 'i'
  {  1133,   8,  17,  13,    2,  -12 },   // 0x6A 'j'
  {  1150,  11,  14,  13,    1,  -13 },   // 0x6B 'k'
  {  1170,  10,  14,  13,    2,  -13 },   // 0x6C 'l'
  {  1188,  13,  10,  13,    0,   -9 },   // 0x6D 'm'
  {  1205,  13,  10,  13,    0,   -9 },   // 0x6E 'n'
  {  1222,  11,  10,  13,    1,   -9 },   // 0x6F 'o'
  {  1236,  13,  14,  13,    0,   -9 },   // 0x70 'p'
  {  1259,  13,  14,  13,    0,   -9 },   // 0x71 'q'
  {  1282,  10,  10,  13,    2,   -9 },   // 0x72 'r'
  {  1295,  10,  10,  13,    1,   -9 },   // 0x73 's'
  {  1308,  11,  13,  13,    1,  -12 },   // 0x74 't'
  {  1326,  12,  10,  13,    0,   -9 },   // 0x75 'u'
  {  1341,  13,  10,  13,    0,   -9 },   // 0x76 'v'
  {  1358,  13,  10,  13,    0,   -9 },   // 0x77 'w'
  {  1375,  11,  10,  13,    1,   -9 },   // 0x78 'x'
  {  1389,  13,  14,  13,    0,   -9 },   // 0x79 'y'
  {  1412,   9,  10,  13,    2,   -9 },   // 0x7A 'z'
  {  1424,   6,  16,  13,    3,  -12 },   // 0x7B '{'
  {  1436,   2,  17,  13,    6,  -13 },   // 0x7C '|'
  {  1441,   6,  16,  13,    4,  -12 },   // 0x7D '}'
  {  1453,  11,   4,  13,    1,   -7 } }; // 0x7E '~'

const GFXfont FreeMonoBold11pt7b PROGMEM = {
  (uint8_t  *)FreeMonoBold11pt7bBitmaps,
  (GFXglyph *)FreeMonoBold11pt7bGlyphs,
  0x20, 0x7E, 22 };

// Approx. 2131 bytes

#endif // FreeMonoBold11pt7b_H
